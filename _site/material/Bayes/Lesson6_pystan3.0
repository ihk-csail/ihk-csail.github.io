{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Sampling and MCMC\n",
    "\n",
    "\n",
    "So far we have seen how to derive a posterior distribution analytically, by working out the maths, or through approximations, for example with Gaussian distributions (Laplace approximation). \n",
    "\n",
    "Another popular way of approximating a distribution is through sampling. In this case we do not attempt at having an parametric distribution for our posterior (either exact or approximated). Instead, we try sample our posterior parameters such as the associated histogram is close as possible to the ground-truth (and unknown) histrogram of the posterior. This kind of approach takes the name of **Markov Chain Monte Carlo (MCMC)** methods. *Monte Carlo* stands for a category of estimation methods based on sampling from random quantities. *Markov Chain* defines a stochastic evolution model, in which the probability of the current event depends only on the previous one.\n",
    "\n",
    "In practice, in MCMC we generate samples from a multi-dimensional variable with density proportional to the one of a target function (for example of a posterior distribution $\\pi(\\theta)$). As you have already seen, once the density is known it is straightforward to compute all the statistical measures of interest (mean, confidence interval, ...).\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A classical MCMC method is called *Metropolis-Hastings*. This method consists in two steps: a proposal and a correction. With the proposal we *perturb* the current parameter state, while with the correction we reject proposals that are \"implausible\", which means too far from the target distribution that we want to approximate.\n",
    "\n",
    "The proposal distribution for a parameter $\\theta'$ is defined with respect to the current parameter $\\theta$ as $p(\\theta'|\\theta)$. A classical choice for the proposal distribution is a Gaussian centered on the current parameter: $$p(\\theta'|\\theta) = \\mathcal{N}(\\theta, \\Sigma).$$\n",
    "\n",
    "This transistion defined what we call a *random walk.*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import scipy\n",
    "import scipy.stats\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from  scipy.stats import norm\n",
    "from  scipy.stats import bernoulli\n",
    "from  scipy.stats import uniform\n",
    "from scipy.stats import gaussian_kde\n",
    "\n",
    "%run tools.py"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/mlorenzi/miniconda3/lib/python3.6/site-packages/numpy/core/_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray\n",
      "  return array(a, dtype, copy=False, order=order, subok=True)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "walk = []\n",
    "current_theta = 10\n",
    "sigma = 3\n",
    "\n",
    "walk.append(current_theta)\n",
    "\n",
    "for i in range(1000):\n",
    "    new_theta = norm.rvs(current_theta, sigma, size = 1)\n",
    "    walk.append(new_theta)\n",
    "    current_theta = new_theta\n",
    "\n",
    "plt.plot(walk)\n",
    "plt.xlabel('step')\n",
    "plt.ylabel('theta')\n",
    "plt.title('Random walk with Gaussian transitions')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "With this kind of choice we note that the proposal is symmetric with respect to $\\theta$ and $\\theta'$:\n",
    "\n",
    "$$ p(\\theta'|\\theta) = p(\\theta|\\theta').$$\n",
    "\n",
    "Concernig the correction step, Metropolis-Hastings defines the probability of accepting the proposal $a(\\theta'|\\theta)$ depending on the value of the target function at the parameters' values, $\\pi(\\theta)$ and $\\pi(\\theta')$:\n",
    "\n",
    "$$ a(\\theta'|\\theta) = \\min\\left(1, \\frac{p(\\theta|\\theta')\\pi(\\theta')}{p(\\theta'|\\theta)\\pi(\\theta)}\\right). $$\n",
    "\n",
    "In particular, for Gaussian proposal we simply obtain: \n",
    "\n",
    "$$ a(\\theta|\\theta') = \\min\\left(1, \\frac{\\pi(\\theta')}{\\pi(\\theta)}\\right). $$\n",
    "\n",
    "This means that we accept our proposal $\\theta'$ if it is associated to higher probability mass $\\pi(\\theta')$ than $\\pi(\\theta)$. Otherwise, we can still accept it, but with probability proportional to the ratio $\\frac{\\pi(\\theta')}{\\pi(\\theta)}$. Why should we accept a sample that is worst thean the previous one? Because in this case we maximise the chance of exploring our parameter's space, and reduce the possibility of getting trapped in a local minima. \n",
    "\n",
    "You can see that Metropolis-Hastings is quite simple to implement, we just need to be able to sample, and to quantifythe posterior at the proposal parameter. The combined proposal and correction procedure preferentially selects out those proposals that fall into neighborhoods of high probability mass, concentrating towards the typical set as desired. Because of its conceptual simplicity and the ease in which it can be implemented by practitioners, Metropolis-Hastings is still popular in many applications.\n",
    "\n",
    "Let's see this method in action for estimating the posterior of the mean of a set of measurements, as we already studied during lesson 2."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Generate randomly distributed variables \n",
    "\n",
    "Nobs = 20\n",
    "gt_mean = 5\n",
    "gt_sigma = 2\n",
    "\n",
    "y = norm.rvs(gt_mean, gt_sigma, size = Nobs)\n",
    "\n",
    "\n",
    "y_mean = np.mean(y)\n",
    "y_var = np.var(y)\n",
    "\n",
    "\n",
    "\n",
    "plt.hist(y)\n",
    "plt.xlabel('y')\n",
    "plt.ylabel('counts')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Similarly with what seen during lesson 2, we assume a Gaussian likelihood and a conjugate Gaussian prior for the mean $\\mu$: $p(\\mu)\\sim\\mathcal{N}(\\mu_0, \\sigma_0^2)$.\n",
    "\n",
    "We now know two methods for computing the posterior $p(\\mu|y)$: \n",
    "\n",
    "- Analytical: the mathematical derivation tells us that the posterior is:\n",
    "\n",
    "$$p(\\mu|y) = p(\\theta|y)\\sim N(\\mu_n,\\sigma_n^2),$$ with:\n",
    "\n",
    "\n",
    "$$ \\sigma_n^2 = \\frac{1}{\\frac{n}{\\sigma^2} + \\frac{1}{\\tau_0^2}},$$\n",
    "\n",
    "and,\n",
    "\n",
    "$$ \\mu_n = \\frac{\\frac{n \\bar{y}}{\\sigma^2} + \\frac{\\mu_0}{\\tau_0^2}}{\\frac{n}{\\sigma^2} + \\frac{1}{\\tau_0^2}},$$\n",
    "\n",
    "\n",
    "where $\\bar{y} = \\frac{\\sum_{i=1}^{n}y_i}{n}$, is the average of the obsrevations.\n",
    "\n",
    "- Approximated: we can approximate the posterior with the method of Laplace, which will provide us a Gaussian with mean over the max of the posterior, and related variance. In this simple case the approximation should be equal to the analytical solution up to numerical approximation.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      fun: 43.88695635986096\n",
      " hess_inv: array([[0.1910399]])\n",
      "      jac: array([-2.38418579e-06])\n",
      "  message: 'Optimization terminated successfully.'\n",
      "     nfev: 8\n",
      "      nit: 3\n",
      "     njev: 4\n",
      "   status: 0\n",
      "  success: True\n",
      "        x: array([5.12728603])\n"
     ]
    }
   ],
   "source": [
    "mu0 = 5\n",
    "sigma0 = 2\n",
    "\n",
    "\n",
    "#Computing analytical posterior parameters\n",
    "post_var = 1 / ( Nobs/y_var + 1/sigma0**2)\n",
    "post_mean = post_var * (Nobs * y_mean/y_var + mu0/sigma0**2)\n",
    "\n",
    "analytical_post = np.random.normal(post_mean, np.sqrt(post_var), 10000 )\n",
    "analytical_density = gaussian_kde(analytical_post)\n",
    "\n",
    "#Laplace approximation\n",
    "likelihood = 'gaussian'\n",
    "prior = [['gaussian', [mu0, sigma0]]]\n",
    "\n",
    "[laplace_mean, laplace_var] = laplace_solution([10], [np.sqrt(y_var)], y, 'gaussian', prior)\n",
    "\n",
    "laplace_post = np.random.normal(laplace_mean, np.sqrt(laplace_var.flatten()), 10000 )\n",
    "laplace_density = gaussian_kde(laplace_post)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plotting posteriors\n",
    "xs = np.linspace(0,10,100)\n",
    "plt.plot(xs,analytical_density(xs)/np.max(analytical_density(xs)), label = 'analytical')\n",
    "plt.plot(xs,laplace_density(xs)/np.max(laplace_density(xs)), label = 'Laplace')\n",
    "[plt.axvline(sample, ls = '--', lw = 0.5) for sample in y]\n",
    "\n",
    "## Simple workaround for the legend\n",
    "plt.axvline(y[0], ls = '--', lw = 0.5, label= 'data')\n",
    "plt.legend()\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For applying Metropolis-Hastings we need first define our proposal Gaussian distribution:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "def proposal(prop_mu, prop_sigma):\n",
    "    return scipy.stats.norm.rvs(loc = prop_mu, scale = prop_sigma, size = 1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "And then define a routine computig our (log-)posterior:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "$L(y|\\theta,\\sigma) \\sim N(y|\\theta,\\sigma^2)$\n",
    "\n",
    "$y = (y_1,y_2, \\ldots, y_n)$\n",
    "\n",
    "$N(y|\\theta,\\sigma^2) = \\Pi_i N(y_i|\\theta,\\sigma^2))$\n",
    "$\\log(N(y|\\theta,\\sigma^2)) = \\Sigma_i \\log(N(y_i|\\theta,\\sigma^2))$\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "def log_likelihood(param):\n",
    "    return np.sum([norm.logpdf(point,param,np.sqrt(y_var)) for point in y])\n",
    "\n",
    "def log_prior(param):\n",
    "    return norm.logpdf(param, mu0, sigma0)\n",
    "\n",
    "def log_posterior(param):\n",
    "    return log_likelihood(param) + log_prior(param)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We are finally ready to apply MH:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/mlorenzi/miniconda3/lib/python3.6/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray\n",
      "  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)\n"
     ]
    }
   ],
   "source": [
    "Niter = 5000\n",
    "init_param = 15\n",
    "\n",
    "# In this array we store the values of the Markov chain\n",
    "param_samples = []\n",
    "param_samples.append(init_param)\n",
    "\n",
    "# In this array we store the values of the acceptance ratios\n",
    "ratios = []\n",
    "\n",
    "# In this array we store the values of the parameters that are accepted\n",
    "output_samples = []\n",
    "\n",
    "for i in range(Niter):\n",
    "    # We compute the log-posterior at the current parameter\n",
    "    old_log_post = log_posterior(param_samples[i])\n",
    "    \n",
    "    # We compute a new proposal parameter\n",
    "    new_mu = proposal(param_samples[i], 1)\n",
    "    \n",
    "    # We compute the log-posterior at the new parameter\n",
    "    new_log_post = log_posterior(new_mu)\n",
    "\n",
    "    # We compute the MH-acceptance ratio    \n",
    "    ratio = np.min([1, np.exp(new_log_post - old_log_post)])\n",
    "    ratios.append(ratio)\n",
    "        \n",
    "    # We compute a random uniforma value to compare to the acceptance ratio \n",
    "    unif_samp = uniform.rvs(0, 1, size = 1)    \n",
    "    \n",
    "    # We accept of reject based on the MH-rule\n",
    "    if unif_samp < ratio:\n",
    "        param_samples.append(new_mu)\n",
    "        output_samples.append(new_mu)\n",
    "    else:\n",
    "        param_samples.append(param_samples[i])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can now plot the chain of samples that we computed. We observe that after some iteration the chain seems to depart from the initialization and start oscillating around the a value around 5. Our MCMC chain is indeed exploring the posterior distribution space, and generates values behaving as our target posterior."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(output_samples)\n",
    "plt.xlabel('sample for mu')\n",
    "plt.ylabel('values')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[array([14.16866701]),\n",
       " array([13.49561871]),\n",
       " array([12.75415983]),\n",
       " array([12.4576964]),\n",
       " array([12.15221813]),\n",
       " array([10.83671651]),\n",
       " array([9.53890503]),\n",
       " array([8.89413749]),\n",
       " array([8.47435849]),\n",
       " array([6.16649384]),\n",
       " array([4.85825676]),\n",
       " array([4.53381992]),\n",
       " array([5.21504967]),\n",
       " array([5.22533823]),\n",
       " array([4.80867368]),\n",
       " array([5.54467082]),\n",
       " array([5.45541186]),\n",
       " array([5.36781531]),\n",
       " array([4.64878401]),\n",
       " array([4.58209403]),\n",
       " array([5.48671234]),\n",
       " array([5.30176856]),\n",
       " array([4.8604817]),\n",
       " array([5.88239039]),\n",
       " array([6.28937289]),\n",
       " array([4.72747371]),\n",
       " array([5.15358252]),\n",
       " array([4.46820926]),\n",
       " array([4.99818572]),\n",
       " array([4.64466673]),\n",
       " array([4.42057662]),\n",
       " array([5.00938499]),\n",
       " array([4.46389248]),\n",
       " array([5.5807163]),\n",
       " array([5.81797298]),\n",
       " array([4.91739715]),\n",
       " array([4.43852837]),\n",
       " array([4.97002739]),\n",
       " array([4.87327671]),\n",
       " array([5.04279787]),\n",
       " array([5.23736868]),\n",
       " array([5.46176118]),\n",
       " array([6.03622801]),\n",
       " array([5.57545934]),\n",
       " array([5.1057269]),\n",
       " array([4.82846836]),\n",
       " array([5.1431011]),\n",
       " array([4.57768862]),\n",
       " array([4.70338721]),\n",
       " array([4.89849441]),\n",
       " array([4.84686419]),\n",
       " array([5.50175512]),\n",
       " array([5.2266659]),\n",
       " array([5.26992206]),\n",
       " array([5.40055023]),\n",
       " array([5.88203648]),\n",
       " array([5.66052789]),\n",
       " array([4.75048683]),\n",
       " array([5.6577812]),\n",
       " array([5.72057822]),\n",
       " array([5.34557821]),\n",
       " array([5.63785859]),\n",
       " array([5.08995258]),\n",
       " array([5.40198811]),\n",
       " array([5.4123978]),\n",
       " array([5.56776151]),\n",
       " array([4.76955816]),\n",
       " array([5.48637919]),\n",
       " array([4.89534401]),\n",
       " array([4.33161505]),\n",
       " array([4.59975862]),\n",
       " array([5.49620056]),\n",
       " array([4.72416101]),\n",
       " array([5.676406]),\n",
       " array([5.46167202]),\n",
       " array([5.54497387]),\n",
       " array([5.85193085]),\n",
       " array([4.65493868]),\n",
       " array([5.37114014]),\n",
       " array([4.79116641]),\n",
       " array([5.79671679]),\n",
       " array([5.16465911]),\n",
       " array([5.65927007]),\n",
       " array([5.16077078]),\n",
       " array([5.17856891]),\n",
       " array([4.83024323]),\n",
       " array([4.99525534]),\n",
       " array([5.25645229]),\n",
       " array([4.11863177]),\n",
       " array([4.15677507]),\n",
       " array([6.08652019]),\n",
       " array([5.5006747]),\n",
       " array([5.40856487]),\n",
       " array([4.56845689]),\n",
       " array([5.0676432]),\n",
       " array([4.45294352]),\n",
       " array([5.06727707]),\n",
       " array([5.09336584]),\n",
       " array([5.45855529]),\n",
       " array([5.19841767]),\n",
       " array([5.00327455]),\n",
       " array([5.59974365]),\n",
       " array([5.33513092]),\n",
       " array([4.83679242]),\n",
       " array([5.32451396]),\n",
       " array([5.35126389]),\n",
       " array([5.67781929]),\n",
       " array([5.1974616]),\n",
       " array([5.42547238]),\n",
       " array([5.39602163]),\n",
       " array([5.11733131]),\n",
       " array([4.80711522]),\n",
       " array([4.77759219]),\n",
       " array([4.40957919]),\n",
       " array([4.32027568]),\n",
       " array([4.82817707]),\n",
       " array([5.26860972]),\n",
       " array([5.35854153]),\n",
       " array([4.78517933]),\n",
       " array([4.78470009]),\n",
       " array([5.70356052]),\n",
       " array([5.36834078]),\n",
       " array([5.29585928]),\n",
       " array([5.22990338]),\n",
       " array([5.61154248]),\n",
       " array([5.56746121]),\n",
       " array([5.36099324]),\n",
       " array([5.47821798]),\n",
       " array([5.54838502]),\n",
       " array([5.07533638]),\n",
       " array([4.41589653]),\n",
       " array([5.05068498]),\n",
       " array([5.13729126]),\n",
       " array([5.65726429]),\n",
       " array([4.61964197]),\n",
       " array([4.6795309]),\n",
       " array([5.36419599]),\n",
       " array([5.09864634]),\n",
       " array([4.25411027]),\n",
       " array([4.57273909]),\n",
       " array([5.02616554]),\n",
       " array([4.28521803]),\n",
       " array([5.25607643]),\n",
       " array([5.63233141]),\n",
       " array([4.88518821]),\n",
       " array([5.37607609]),\n",
       " array([5.10993792]),\n",
       " array([5.26478271]),\n",
       " array([4.79673629]),\n",
       " array([5.05448722]),\n",
       " array([5.28316367]),\n",
       " array([4.42027726]),\n",
       " array([5.68523542]),\n",
       " array([5.9290251]),\n",
       " array([4.13251863]),\n",
       " array([6.12688358]),\n",
       " array([5.59423131]),\n",
       " array([5.7960286]),\n",
       " array([4.49503065]),\n",
       " array([5.1223048]),\n",
       " array([5.5566939]),\n",
       " array([5.59494232]),\n",
       " array([4.64250794]),\n",
       " array([5.3266223]),\n",
       " array([5.9143796]),\n",
       " array([4.49274188]),\n",
       " array([4.68462248]),\n",
       " array([5.04168616]),\n",
       " array([5.18200172]),\n",
       " array([4.84475792]),\n",
       " array([4.65108875]),\n",
       " array([4.30895952]),\n",
       " array([6.12531079]),\n",
       " array([4.65133382]),\n",
       " array([5.28316524]),\n",
       " array([4.74999435]),\n",
       " array([4.65616203]),\n",
       " array([5.43755446]),\n",
       " array([5.40718158]),\n",
       " array([5.37646475]),\n",
       " array([5.55204582]),\n",
       " array([5.2412686]),\n",
       " array([5.21985506]),\n",
       " array([4.78126786]),\n",
       " array([5.1977165]),\n",
       " array([5.43872157]),\n",
       " array([5.03479589]),\n",
       " array([4.13133451]),\n",
       " array([5.90753657]),\n",
       " array([5.16157457]),\n",
       " array([5.29613883]),\n",
       " array([4.96275116]),\n",
       " array([4.88301586]),\n",
       " array([4.73542908]),\n",
       " array([4.84746471]),\n",
       " array([5.85926687]),\n",
       " array([6.07445518]),\n",
       " array([5.76404199]),\n",
       " array([6.22196526]),\n",
       " array([5.7830761]),\n",
       " array([5.58452606]),\n",
       " array([4.79636179]),\n",
       " array([5.08982992]),\n",
       " array([4.54049619]),\n",
       " array([5.93043512]),\n",
       " array([4.47721322]),\n",
       " array([5.45382988]),\n",
       " array([5.71451708]),\n",
       " array([5.70974044]),\n",
       " array([6.00660425]),\n",
       " array([5.47909578]),\n",
       " array([5.16980678]),\n",
       " array([6.30689146]),\n",
       " array([5.6619723]),\n",
       " array([4.96628666]),\n",
       " array([5.13412402]),\n",
       " array([5.65412489]),\n",
       " array([5.24834912]),\n",
       " array([5.07848867]),\n",
       " array([5.28860732]),\n",
       " array([5.39637269]),\n",
       " array([5.42228598]),\n",
       " array([4.99763941]),\n",
       " array([4.61263056]),\n",
       " array([5.00455837]),\n",
       " array([5.20367752]),\n",
       " array([5.44966556]),\n",
       " array([5.77306488]),\n",
       " array([5.41047122]),\n",
       " array([4.77864807]),\n",
       " array([4.69847083]),\n",
       " array([4.70874998]),\n",
       " array([4.86748663]),\n",
       " array([4.44160325]),\n",
       " array([5.7531653]),\n",
       " array([5.2727643]),\n",
       " array([5.72951372]),\n",
       " array([5.87170026]),\n",
       " array([4.35399538]),\n",
       " array([4.65978888]),\n",
       " array([4.50131172]),\n",
       " array([5.55055216]),\n",
       " array([5.78712806]),\n",
       " array([4.38572602]),\n",
       " array([4.77746787]),\n",
       " array([4.91388252]),\n",
       " array([4.73766087]),\n",
       " array([5.03156125]),\n",
       " array([5.09368179]),\n",
       " array([5.0642853]),\n",
       " array([4.79544974]),\n",
       " array([5.28766473]),\n",
       " array([5.17537317]),\n",
       " array([5.36902779]),\n",
       " array([5.743131]),\n",
       " array([5.24672528]),\n",
       " array([4.95342051]),\n",
       " array([4.80561266]),\n",
       " array([4.84864623]),\n",
       " array([5.69465114]),\n",
       " array([6.01000333]),\n",
       " array([5.24136528]),\n",
       " array([4.57612679]),\n",
       " array([4.65787721]),\n",
       " array([5.02795633]),\n",
       " array([4.87351699]),\n",
       " array([5.40361987]),\n",
       " array([5.72830427]),\n",
       " array([5.33007683]),\n",
       " array([5.73828782]),\n",
       " array([5.49312499]),\n",
       " array([4.94118245]),\n",
       " array([5.0011946]),\n",
       " array([5.20316874]),\n",
       " array([4.69829477]),\n",
       " array([5.37522729]),\n",
       " array([6.2036916]),\n",
       " array([4.69781484]),\n",
       " array([5.68394479]),\n",
       " array([4.43011461]),\n",
       " array([4.88277036]),\n",
       " array([5.13281811]),\n",
       " array([4.85192685]),\n",
       " array([4.72764905]),\n",
       " array([4.91733245]),\n",
       " array([4.76706288]),\n",
       " array([5.55627452]),\n",
       " array([4.74735042]),\n",
       " array([5.04190402]),\n",
       " array([4.99600707]),\n",
       " array([5.11086197]),\n",
       " array([4.80359125]),\n",
       " array([4.40489801]),\n",
       " array([5.20114441]),\n",
       " array([4.80281353]),\n",
       " array([4.69998227]),\n",
       " array([4.89808291]),\n",
       " array([5.21070499]),\n",
       " array([5.21440035]),\n",
       " array([5.72581019]),\n",
       " array([5.05190371]),\n",
       " array([4.44883971]),\n",
       " array([4.49482411]),\n",
       " array([4.96468524]),\n",
       " array([5.03465268]),\n",
       " array([5.42365919]),\n",
       " array([5.30966047]),\n",
       " array([5.75016258]),\n",
       " array([4.07668033]),\n",
       " array([4.12579826]),\n",
       " array([4.69992697]),\n",
       " array([5.03064104]),\n",
       " array([5.53966096]),\n",
       " array([4.9909004]),\n",
       " array([4.56455593]),\n",
       " array([4.72324783]),\n",
       " array([5.2828436]),\n",
       " array([4.93843651]),\n",
       " array([5.75568912]),\n",
       " array([5.73634087]),\n",
       " array([5.18063828]),\n",
       " array([6.3290604]),\n",
       " array([5.63818469]),\n",
       " array([5.3444697]),\n",
       " array([5.2725019]),\n",
       " array([4.94471149]),\n",
       " array([4.6969718]),\n",
       " array([4.44492589]),\n",
       " array([5.88074957]),\n",
       " array([5.2596436]),\n",
       " array([4.8382136]),\n",
       " array([4.688814]),\n",
       " array([5.35717794]),\n",
       " array([5.23701681]),\n",
       " array([5.1852653]),\n",
       " array([5.18686862]),\n",
       " array([5.39366361]),\n",
       " array([4.99941957]),\n",
       " array([5.38461784]),\n",
       " array([5.49094888]),\n",
       " array([5.00119831]),\n",
       " array([5.50328587]),\n",
       " array([5.05889257]),\n",
       " array([4.81753321]),\n",
       " array([5.30557673]),\n",
       " array([5.27516279]),\n",
       " array([5.93605459]),\n",
       " array([5.67291401]),\n",
       " array([5.39464301]),\n",
       " array([6.09366068]),\n",
       " array([5.44229117]),\n",
       " array([5.25581368]),\n",
       " array([5.55673576]),\n",
       " array([5.54774591]),\n",
       " array([5.10239803]),\n",
       " array([4.90472488]),\n",
       " array([4.60920738]),\n",
       " array([4.61643241]),\n",
       " array([5.05382591]),\n",
       " array([5.09853685]),\n",
       " array([5.50910384]),\n",
       " array([5.35106365]),\n",
       " array([4.90652416]),\n",
       " array([5.2725271]),\n",
       " array([4.67719788]),\n",
       " array([5.71535935]),\n",
       " array([4.68280064]),\n",
       " array([5.55713528]),\n",
       " array([5.19641153]),\n",
       " array([5.20242315]),\n",
       " array([5.10706249]),\n",
       " array([5.2845929]),\n",
       " array([4.95264749]),\n",
       " array([5.56994654]),\n",
       " array([5.82752474]),\n",
       " array([5.64967558]),\n",
       " array([5.10643343]),\n",
       " array([4.80935131]),\n",
       " array([5.20816375]),\n",
       " array([5.41625432]),\n",
       " array([6.03477172]),\n",
       " array([5.64302608]),\n",
       " array([5.82544635]),\n",
       " array([4.77168405]),\n",
       " array([5.50581018]),\n",
       " array([5.43267329]),\n",
       " array([5.27473827]),\n",
       " array([5.13766848]),\n",
       " array([5.43679559]),\n",
       " array([5.3851064]),\n",
       " array([4.24869142]),\n",
       " array([4.46995647]),\n",
       " array([3.81631831]),\n",
       " array([5.232618]),\n",
       " array([5.01529101]),\n",
       " array([5.00542051]),\n",
       " array([5.05879244]),\n",
       " array([4.40558052]),\n",
       " array([3.79989928]),\n",
       " array([6.01662124]),\n",
       " array([5.59551075]),\n",
       " array([4.39219562]),\n",
       " array([5.70775876]),\n",
       " array([4.71800337]),\n",
       " array([4.68698823]),\n",
       " array([4.5310018]),\n",
       " array([4.23978683]),\n",
       " array([5.7781038]),\n",
       " array([5.38951799]),\n",
       " array([5.23535017]),\n",
       " array([5.02212291]),\n",
       " array([4.90061842]),\n",
       " array([5.23594574]),\n",
       " array([5.22905655]),\n",
       " array([5.02868632]),\n",
       " array([4.35857715]),\n",
       " array([4.79414319]),\n",
       " array([5.11803297]),\n",
       " array([4.80409784]),\n",
       " array([5.40063796]),\n",
       " array([5.36538923]),\n",
       " array([4.7932681]),\n",
       " array([4.96178877]),\n",
       " array([5.24936599]),\n",
       " array([4.82814858]),\n",
       " array([4.66542464]),\n",
       " array([4.99481407]),\n",
       " array([4.74712582]),\n",
       " array([5.56116952]),\n",
       " array([4.86688192]),\n",
       " array([5.02147838]),\n",
       " array([5.12661663]),\n",
       " array([5.64690045]),\n",
       " array([5.1107504]),\n",
       " array([5.56759777]),\n",
       " array([5.24202683]),\n",
       " array([5.19706875]),\n",
       " array([4.96517526]),\n",
       " array([5.16372953]),\n",
       " array([5.75830642]),\n",
       " array([5.63743899]),\n",
       " array([5.51711284]),\n",
       " array([5.30215817]),\n",
       " array([4.51879596]),\n",
       " array([4.80142237]),\n",
       " array([5.19540311]),\n",
       " array([4.73233632]),\n",
       " array([5.50067901]),\n",
       " array([5.38468408]),\n",
       " array([5.83457498]),\n",
       " array([4.66869868]),\n",
       " array([5.37458394]),\n",
       " array([5.2503664]),\n",
       " array([5.43222614]),\n",
       " array([5.28302695]),\n",
       " array([5.25610206]),\n",
       " array([4.86076133]),\n",
       " array([5.44309148]),\n",
       " array([5.07269665]),\n",
       " array([5.85611223]),\n",
       " array([4.8892753]),\n",
       " array([5.59259646]),\n",
       " array([4.66735266]),\n",
       " array([4.53757725]),\n",
       " array([5.21246669]),\n",
       " array([5.56434975]),\n",
       " array([5.43959511]),\n",
       " array([5.40059975]),\n",
       " array([4.48927634]),\n",
       " array([5.98581888]),\n",
       " array([4.75966871]),\n",
       " array([5.1637401]),\n",
       " array([5.61753891]),\n",
       " array([5.93780823]),\n",
       " array([5.1069424]),\n",
       " array([5.38885136]),\n",
       " array([5.01573881]),\n",
       " array([4.79790231]),\n",
       " array([5.39943731]),\n",
       " array([5.41259871]),\n",
       " array([4.87993698]),\n",
       " array([4.70578363]),\n",
       " array([5.57923222]),\n",
       " array([5.52475466]),\n",
       " array([4.60446165]),\n",
       " array([5.4810787]),\n",
       " array([5.08305516]),\n",
       " array([5.79081632]),\n",
       " array([5.36619123]),\n",
       " array([5.11781322]),\n",
       " array([5.47498376]),\n",
       " array([4.34300005]),\n",
       " array([4.66383508]),\n",
       " array([6.3090386]),\n",
       " array([4.60179758]),\n",
       " array([5.04125847]),\n",
       " array([5.49963744]),\n",
       " array([4.7836284]),\n",
       " array([5.448832]),\n",
       " array([5.90022133]),\n",
       " array([6.0547023]),\n",
       " array([5.60478501]),\n",
       " array([4.75088356]),\n",
       " array([6.02939036]),\n",
       " array([5.54328062]),\n",
       " array([5.26377914]),\n",
       " array([5.16813696]),\n",
       " array([5.06762095]),\n",
       " array([4.80085403]),\n",
       " array([4.49557614]),\n",
       " array([4.48805404]),\n",
       " array([5.2147694]),\n",
       " array([4.84969149]),\n",
       " array([5.39421677]),\n",
       " array([5.47911949]),\n",
       " array([5.02268226]),\n",
       " array([5.3128698]),\n",
       " array([5.70776476]),\n",
       " array([4.910987]),\n",
       " array([5.3569509]),\n",
       " array([5.36131477]),\n",
       " array([5.26022371]),\n",
       " array([4.68636421]),\n",
       " array([4.96143051]),\n",
       " array([4.84609367]),\n",
       " array([6.07042255]),\n",
       " array([5.63078625]),\n",
       " array([4.80679115]),\n",
       " array([4.72203491]),\n",
       " array([5.19833916]),\n",
       " array([5.08973882]),\n",
       " array([5.41268484]),\n",
       " array([4.82020331]),\n",
       " array([5.55586686]),\n",
       " array([5.23046884]),\n",
       " array([5.32371276]),\n",
       " array([5.04062243]),\n",
       " array([5.19871004]),\n",
       " array([4.42569542]),\n",
       " array([4.90246391]),\n",
       " array([4.38826232]),\n",
       " array([4.70401878]),\n",
       " array([4.88257539]),\n",
       " array([4.97576855]),\n",
       " array([4.28727219]),\n",
       " array([5.57204706]),\n",
       " array([5.3333726]),\n",
       " array([5.60350706]),\n",
       " array([5.44032484]),\n",
       " array([4.68050953]),\n",
       " array([4.99561753]),\n",
       " array([4.55813902]),\n",
       " array([5.17197957]),\n",
       " array([4.87971583]),\n",
       " array([4.89831688]),\n",
       " array([4.60183818]),\n",
       " array([4.96543023]),\n",
       " array([5.05263021]),\n",
       " array([5.09270302]),\n",
       " array([5.52794039]),\n",
       " array([5.67614566]),\n",
       " array([5.99883569]),\n",
       " array([5.0173094]),\n",
       " array([4.2553203]),\n",
       " array([4.72585615]),\n",
       " array([4.79974793]),\n",
       " array([4.66724767]),\n",
       " array([4.7718604]),\n",
       " array([4.55740938]),\n",
       " array([4.73817413]),\n",
       " array([4.21322058]),\n",
       " array([4.83122152]),\n",
       " array([5.47500336]),\n",
       " array([5.00153399]),\n",
       " array([5.39045904]),\n",
       " array([5.58515854]),\n",
       " array([5.34573036]),\n",
       " array([5.99512961]),\n",
       " array([5.37972207]),\n",
       " array([5.51972026]),\n",
       " array([5.42259678]),\n",
       " array([5.57028847]),\n",
       " array([5.3233711]),\n",
       " array([4.75829198]),\n",
       " array([4.85052154]),\n",
       " array([5.40969883]),\n",
       " array([4.84970463]),\n",
       " array([5.16857349]),\n",
       " array([5.63688509]),\n",
       " array([5.5640824]),\n",
       " array([5.07296745]),\n",
       " array([5.32531068]),\n",
       " array([5.40230638]),\n",
       " array([5.25744445]),\n",
       " array([5.58817133]),\n",
       " array([5.67748842]),\n",
       " array([4.32012799]),\n",
       " array([4.62879905]),\n",
       " array([4.68829956]),\n",
       " array([4.66353931]),\n",
       " array([5.35632907]),\n",
       " array([5.23828943]),\n",
       " array([5.35162888]),\n",
       " array([5.13750769]),\n",
       " array([5.11969856]),\n",
       " array([5.3716554]),\n",
       " array([5.35493291]),\n",
       " array([5.41710006]),\n",
       " array([5.46743796]),\n",
       " array([6.000676]),\n",
       " array([6.34047054]),\n",
       " array([5.02560107]),\n",
       " array([5.09194529]),\n",
       " array([6.23252697]),\n",
       " array([6.25073399]),\n",
       " array([5.38001869]),\n",
       " array([5.23663358]),\n",
       " array([4.99306753]),\n",
       " array([5.89586195]),\n",
       " array([5.59441684]),\n",
       " array([5.39589616]),\n",
       " array([5.35013105]),\n",
       " array([4.65502329]),\n",
       " array([4.6861806]),\n",
       " array([4.87241987]),\n",
       " array([4.78958853]),\n",
       " array([4.36628352]),\n",
       " array([4.4631108]),\n",
       " array([4.54765302]),\n",
       " array([5.24116729]),\n",
       " array([4.66377034]),\n",
       " array([4.53704824]),\n",
       " array([4.82676629]),\n",
       " array([5.49363395]),\n",
       " array([5.38905996]),\n",
       " array([4.9828401]),\n",
       " array([5.21384892]),\n",
       " array([5.96096752]),\n",
       " array([5.64928587]),\n",
       " array([4.61214717]),\n",
       " array([5.03210373]),\n",
       " array([4.9646719]),\n",
       " array([5.10036734]),\n",
       " array([5.37207511]),\n",
       " array([4.87336206]),\n",
       " array([5.24251278]),\n",
       " array([4.95865875]),\n",
       " array([5.09889666]),\n",
       " array([5.67590629]),\n",
       " array([4.37118913]),\n",
       " array([5.71796124]),\n",
       " array([5.48524908]),\n",
       " array([5.32793308]),\n",
       " array([5.18862405]),\n",
       " array([5.18732131]),\n",
       " array([4.7006366]),\n",
       " array([6.1844814]),\n",
       " array([5.9031819]),\n",
       " array([5.42523535]),\n",
       " array([5.03252309]),\n",
       " array([5.57037764]),\n",
       " array([5.32886084]),\n",
       " array([5.78041116]),\n",
       " array([5.133532]),\n",
       " array([5.65050846]),\n",
       " array([4.85871876]),\n",
       " array([5.20957319]),\n",
       " array([5.50015021]),\n",
       " array([5.62980908]),\n",
       " array([4.99029992]),\n",
       " array([5.03853323]),\n",
       " array([4.98538882]),\n",
       " array([5.22569532]),\n",
       " array([4.34841282]),\n",
       " array([4.80321303]),\n",
       " array([5.05632844]),\n",
       " array([4.99826314]),\n",
       " array([5.60150236]),\n",
       " array([6.07520539]),\n",
       " array([4.86641783]),\n",
       " array([5.02342142]),\n",
       " array([4.46131921]),\n",
       " array([5.64140949]),\n",
       " array([5.47963191]),\n",
       " array([5.86424397]),\n",
       " array([5.48771238]),\n",
       " array([5.40002962]),\n",
       " array([4.68878399]),\n",
       " array([5.07215575]),\n",
       " array([5.27218518]),\n",
       " array([5.0187556]),\n",
       " array([4.99802846]),\n",
       " array([5.88221521]),\n",
       " array([5.24652384]),\n",
       " array([5.946552]),\n",
       " array([6.07091993]),\n",
       " array([5.1498278]),\n",
       " array([5.98693797]),\n",
       " array([6.06653727]),\n",
       " array([4.17736426]),\n",
       " array([4.97332009]),\n",
       " array([5.51738315]),\n",
       " array([5.00440749]),\n",
       " array([4.81116635]),\n",
       " array([5.46871115]),\n",
       " array([5.09514438]),\n",
       " array([5.62108741]),\n",
       " array([4.74115196]),\n",
       " array([4.88180093]),\n",
       " array([4.76832968]),\n",
       " array([4.89169326]),\n",
       " array([5.8644097]),\n",
       " array([4.95830898]),\n",
       " array([4.99501961]),\n",
       " array([5.067861]),\n",
       " array([5.04873911]),\n",
       " array([5.05134015]),\n",
       " array([4.93875439]),\n",
       " array([5.15747439]),\n",
       " array([4.55436551]),\n",
       " array([4.90069603]),\n",
       " array([5.57356754]),\n",
       " array([5.16840693]),\n",
       " array([4.90021067]),\n",
       " array([4.88412505]),\n",
       " array([4.58914014]),\n",
       " array([4.49871266]),\n",
       " array([4.5026673]),\n",
       " array([4.95309852]),\n",
       " array([5.06122078]),\n",
       " array([4.61798184]),\n",
       " array([4.02524534]),\n",
       " array([3.93793267]),\n",
       " array([5.12828316]),\n",
       " array([4.80954518]),\n",
       " array([4.55675254]),\n",
       " array([5.69805848]),\n",
       " array([5.69202457]),\n",
       " array([4.81231558]),\n",
       " array([5.22040985]),\n",
       " array([4.79777598]),\n",
       " array([5.12634674]),\n",
       " array([4.73175689]),\n",
       " array([5.40728139]),\n",
       " array([5.47903409]),\n",
       " array([5.30847546]),\n",
       " array([5.54342836]),\n",
       " array([6.04319781]),\n",
       " array([6.06526977]),\n",
       " array([5.08980581]),\n",
       " array([5.2731579]),\n",
       " array([5.94889589]),\n",
       " array([4.96442796]),\n",
       " array([4.92653594]),\n",
       " array([4.8328276]),\n",
       " array([5.40617145]),\n",
       " array([5.40702857]),\n",
       " array([5.74205676]),\n",
       " array([5.96717874]),\n",
       " array([5.56557333]),\n",
       " array([5.8823594]),\n",
       " array([4.69097879]),\n",
       " array([4.91742498]),\n",
       " array([4.92641939]),\n",
       " array([5.76002816]),\n",
       " array([5.92568882]),\n",
       " array([5.74321819]),\n",
       " array([4.79734609]),\n",
       " array([4.83724382]),\n",
       " array([5.05710757]),\n",
       " array([5.38528571]),\n",
       " array([5.30307165]),\n",
       " array([5.32897677]),\n",
       " array([5.74185828]),\n",
       " array([5.13342851]),\n",
       " array([4.77212491]),\n",
       " array([4.69330893]),\n",
       " array([4.69364796]),\n",
       " array([5.06513088]),\n",
       " array([4.61766291]),\n",
       " array([5.28707614]),\n",
       " array([5.48048319]),\n",
       " array([4.96090902]),\n",
       " array([5.42250094]),\n",
       " array([4.50738323]),\n",
       " array([4.66661141]),\n",
       " array([4.66407788]),\n",
       " array([4.6966158]),\n",
       " array([5.32619621]),\n",
       " array([5.15835166]),\n",
       " array([5.74613601]),\n",
       " array([5.95246525]),\n",
       " array([5.91357646]),\n",
       " array([5.16156971]),\n",
       " array([5.12101235]),\n",
       " array([4.94029231]),\n",
       " array([5.4497269]),\n",
       " array([4.76645867]),\n",
       " array([4.4455185]),\n",
       " array([4.37113202]),\n",
       " array([5.67498427]),\n",
       " array([5.54098407]),\n",
       " array([5.4428601]),\n",
       " array([5.1267341]),\n",
       " array([5.44327189]),\n",
       " array([5.1266349]),\n",
       " array([4.97415938]),\n",
       " array([5.49349443]),\n",
       " array([4.98640513]),\n",
       " array([4.63821225]),\n",
       " array([4.75077877]),\n",
       " array([5.77959643]),\n",
       " array([5.70711171]),\n",
       " array([4.50511124]),\n",
       " array([4.79477438]),\n",
       " array([4.5054394]),\n",
       " array([5.67907392]),\n",
       " array([5.70171607]),\n",
       " array([5.75558168]),\n",
       " array([5.04753921]),\n",
       " array([5.63665246]),\n",
       " array([5.37978387]),\n",
       " array([5.45513795]),\n",
       " array([5.92664545]),\n",
       " array([5.47519467]),\n",
       " array([5.73564759]),\n",
       " array([5.46747583]),\n",
       " array([5.2242216]),\n",
       " array([4.58399637]),\n",
       " array([4.80647606]),\n",
       " array([5.2946342]),\n",
       " array([5.14713097]),\n",
       " array([5.38380698]),\n",
       " array([4.71224604]),\n",
       " array([4.66814369]),\n",
       " array([5.95873519]),\n",
       " array([6.00601148]),\n",
       " array([5.31517783]),\n",
       " array([5.15671641]),\n",
       " array([5.29441597]),\n",
       " array([4.92692667]),\n",
       " array([5.13919647]),\n",
       " array([5.7040201]),\n",
       " array([6.1944877]),\n",
       " array([4.13889879]),\n",
       " array([4.63189855]),\n",
       " array([5.1736181]),\n",
       " array([5.09091572]),\n",
       " array([5.6257246]),\n",
       " array([4.17111835]),\n",
       " array([3.99879734]),\n",
       " array([4.86734009]),\n",
       " array([6.09387788]),\n",
       " array([4.66026119]),\n",
       " array([5.2771893]),\n",
       " array([5.3617907]),\n",
       " array([5.44565463]),\n",
       " array([4.98524661]),\n",
       " array([5.69685411]),\n",
       " array([5.52777127]),\n",
       " array([5.03009833]),\n",
       " array([4.88072094]),\n",
       " array([4.52051411]),\n",
       " array([5.10894747]),\n",
       " array([5.07774053]),\n",
       " array([5.28616841]),\n",
       " array([5.43045505]),\n",
       " array([5.44523201]),\n",
       " array([5.13509327]),\n",
       " array([5.38983415]),\n",
       " array([5.02397713]),\n",
       " array([4.71574471]),\n",
       " array([5.77616757]),\n",
       " array([5.58414156]),\n",
       " array([5.39241746]),\n",
       " array([4.97350851]),\n",
       " array([5.1722]),\n",
       " array([5.84741859]),\n",
       " array([5.79150406]),\n",
       " array([5.37970917]),\n",
       " array([5.12297267]),\n",
       " array([5.9510571]),\n",
       " array([5.78427706]),\n",
       " array([5.49895898]),\n",
       " array([4.86971985]),\n",
       " array([5.19591383]),\n",
       " array([5.77081086]),\n",
       " array([4.77442492]),\n",
       " array([4.77522635]),\n",
       " array([5.25613107]),\n",
       " array([5.34544134]),\n",
       " array([4.71880185]),\n",
       " array([5.0166807]),\n",
       " array([5.29300454]),\n",
       " array([4.15407368]),\n",
       " array([4.36283461]),\n",
       " array([4.34671175]),\n",
       " array([5.27864222]),\n",
       " array([4.56214574]),\n",
       " array([5.07183028]),\n",
       " array([5.59154699]),\n",
       " array([4.94608549]),\n",
       " array([4.34240035]),\n",
       " array([4.0238623]),\n",
       " array([4.8062714]),\n",
       " array([4.23232053]),\n",
       " array([5.61386879]),\n",
       " array([5.53683738]),\n",
       " array([5.73068196]),\n",
       " array([5.5961703]),\n",
       " array([5.57170307]),\n",
       " array([5.14513846]),\n",
       " array([4.95278395]),\n",
       " array([4.84286185]),\n",
       " array([4.25142152]),\n",
       " array([4.82674233]),\n",
       " array([4.80697595]),\n",
       " array([5.43967992]),\n",
       " array([5.19818333]),\n",
       " array([4.65980608]),\n",
       " array([4.97088693]),\n",
       " array([5.09507333]),\n",
       " array([5.69962616]),\n",
       " array([5.5225014]),\n",
       " array([5.53040943]),\n",
       " array([5.0601542]),\n",
       " array([5.78089656]),\n",
       " array([5.56281846]),\n",
       " array([5.80912687]),\n",
       " array([5.80480656]),\n",
       " array([5.27343651]),\n",
       " array([5.44737504]),\n",
       " array([4.89424919]),\n",
       " array([4.58962553]),\n",
       " array([5.04467001]),\n",
       " array([5.39997019]),\n",
       " array([5.1228796]),\n",
       " array([5.45901107]),\n",
       " array([4.90350417]),\n",
       " array([4.93877388]),\n",
       " array([4.43346114]),\n",
       " array([5.05106383]),\n",
       " array([5.07758974]),\n",
       " array([4.3201419]),\n",
       " array([4.81275359]),\n",
       " array([4.81027875]),\n",
       " array([4.57939891]),\n",
       " array([4.20676192]),\n",
       " array([4.13454683]),\n",
       " array([4.76271306]),\n",
       " array([5.39715105]),\n",
       " array([5.57815766]),\n",
       " array([4.98693119]),\n",
       " array([5.7195936]),\n",
       " array([5.45261002]),\n",
       " array([5.0276842]),\n",
       " array([4.44610382]),\n",
       " array([4.84041399]),\n",
       " array([4.50493149]),\n",
       " array([5.80862975]),\n",
       " array([5.67220336]),\n",
       " array([5.5076927]),\n",
       " array([5.29300239]),\n",
       " array([5.45972623]),\n",
       " array([5.44667192]),\n",
       " array([4.83001294]),\n",
       " array([5.01263018]),\n",
       " array([4.46366541]),\n",
       " array([4.49036773]),\n",
       " array([4.4845713]),\n",
       " array([5.32900801]),\n",
       " array([5.53768912]),\n",
       " array([5.33977611]),\n",
       " array([5.22151821]),\n",
       " array([5.3143856]),\n",
       " array([4.75655884]),\n",
       " array([5.01221464]),\n",
       " array([4.70116919]),\n",
       " array([4.77624377]),\n",
       " array([5.0479258]),\n",
       " array([4.6763467]),\n",
       " array([4.72938802]),\n",
       " array([5.62124285]),\n",
       " array([4.41484555]),\n",
       " array([5.3551083]),\n",
       " array([5.10078913]),\n",
       " array([5.24108059]),\n",
       " array([5.86306384]),\n",
       " array([4.60560034]),\n",
       " array([4.97025714]),\n",
       " array([5.57316024]),\n",
       " array([5.27176178]),\n",
       " array([5.09309536]),\n",
       " array([5.06914105]),\n",
       " array([5.8329659]),\n",
       " array([5.76639589]),\n",
       " array([6.28476754]),\n",
       " array([4.05083554]),\n",
       " array([4.18795719]),\n",
       " array([4.96385976]),\n",
       " ...]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "output_samples"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(np.array(output_samples[500:]))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "An important issues with the posterior samples in MCMC concerns the correlation between samples. Uncorrelated samples indicate that the sampling procedure is exploring properly the parameter space, and thus that our posterior distribution will be better represented. A high auto-correlation means that the Markov chain is taking small steps, and is not able to jump long distances. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In our case it seems that the autocorrelation is under control and does not take pathological values.\n",
    "\n",
    "**Exercise.** Can you modify the code above to obtain highly autocorrelated samples?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from pandas.plotting import autocorrelation_plot\n",
    "autocorrelation_plot(np.array(output_samples).flatten())\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To reduce the pathological effects due non-representative samples, it is common practice to consider the Markov chain only after a certain number of steps (say 1000); this is called *burnin*. To mitigate the effect of autocorrelation we may consider one sample out of a certain number (say 5); this is called *thinning*. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "burnin = 50\n",
    "\n",
    "effective_samples = output_samples[burnin:]\n",
    "\n",
    "thinning = int(5)\n",
    "\n",
    "list_samp = np.arange(0,len(effective_samples),thinning)\n",
    "\n",
    "effective_samples = [effective_samples[i] for i in list_samp]\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Be careful since burnin and thinning can considerably reduce the size of your samples, and thus lead to subsequent gross approximations of your posterior."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "457\n"
     ]
    }
   ],
   "source": [
    "print(len(effective_samples))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MCMC sampling:\n",
      "mean: 5.142329136091162 -- var: 0.19483427012037996\n"
     ]
    }
   ],
   "source": [
    "print('MCMC sampling:')\n",
    "print('mean: {} -- var: {}'.format(np.mean(effective_samples), np.var(effective_samples)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "analytical posterior:\n",
      "mean: 5.127286392898855 -- var: 0.19103987590936547\n"
     ]
    }
   ],
   "source": [
    "print('analytical posterior:')\n",
    "print('mean: {} -- var: {}'.format(post_mean, post_var))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "mcmc_post = np.random.normal(np.mean(effective_samples), np.std(effective_samples), 10000 )\n",
    "mcmc_density = gaussian_kde(mcmc_post)\n",
    "\n",
    "\n",
    "# Plotting posteriors\n",
    "xs = np.linspace(0,10,100)\n",
    "plt.plot(xs,analytical_density(xs)/np.max(analytical_density(xs)), label = 'analytical')\n",
    "plt.plot(xs,laplace_density(xs)/np.max(laplace_density(xs)), label = 'Laplace')\n",
    "#plt.plot(xs,mcmc_density(xs)/np.max(mcmc_density(xs)), label = 'Metropolis-Hastings')\n",
    "plt.hist(mcmc_post, density = True, label = 'Metropolis-Hastings')\n",
    "[plt.axvline(sample, ls = '--', lw = 0.5) for sample in y]\n",
    "\n",
    "## Simple workaround for the legend\n",
    "plt.axvline(y[0], ls = '--', lw = 0.5, label= 'data')\n",
    "plt.legend()\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Exercise.** How would you design Metropilis-Hastings for estimating the joint distribution of mean and variance?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/mlorenzi/miniconda3/lib/python3.6/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray\n",
      "  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)\n"
     ]
    }
   ],
   "source": [
    "def log_likelihood_mu_sigma(param):\n",
    "    return np.sum([norm.logpdf(point,param[0],np.sqrt(np.exp(param[1]))) for point in y])\n",
    "\n",
    "# Definition of the prior for sigma as a Normal distribution - we changed this line in the class\n",
    "#def log_prior_mu_sigma(param, hyper):\n",
    "#    return scipy.stats.norm.logpdf(param, hyper[0], hyper[1])\n",
    "\n",
    "def log_prior_mu(param, hyper):\n",
    "    return scipy.stats.norm.logpdf(param, hyper[0], hyper[1])\n",
    "\n",
    "def log_prior_sigma(param, hyper):\n",
    "    return scipy.stats.uniform.logpdf(param, hyper[0], hyper[1])\n",
    "\n",
    "def log_posterior_mu_sigma(param, hyper_mu, hyper_sigma):\n",
    "    return log_likelihood_mu_sigma(param) + log_prior_mu(param[0], hyper_mu) + log_prior_sigma(param[1], hyper_sigma)\n",
    "\n",
    "\n",
    "Niter = 5000\n",
    "prior_mu_mean = 3\n",
    "prior_mu_sd = 4\n",
    "\n",
    "prior_log_sigma_inf = -5\n",
    "prior_log_sigma_sup = 5\n",
    "\n",
    "#initial parameters of our chain\n",
    "init_param_mu = 3\n",
    "init_param_log_sigma=0 \n",
    "\n",
    "# In this array we store the values of the Markov chain\n",
    "param_samples_mu = []\n",
    "param_samples_mu.append(init_param_mu)\n",
    "\n",
    "param_samples_log_sigma = []\n",
    "param_samples_log_sigma.append(init_param_log_sigma)\n",
    "\n",
    "# In this array we store the values of the acceptance ratios\n",
    "ratios = []\n",
    "\n",
    "# In this array we store the values of the parameters that are accepted\n",
    "output_samples_mu = []\n",
    "output_samples_log_sigma = []\n",
    "\n",
    "# hyper_mu = [prior_mu_mean,prior_mu_sd]\n",
    "# hyper_log_sigma = [prior_sigma_inf,prior_sigma_sup]\n",
    "\n",
    "hyper_prior_mu = [prior_mu_mean, prior_mu_sd]\n",
    "hyper_prior_log_sigma = [prior_log_sigma_inf, prior_log_sigma_sup]\n",
    "\n",
    "for i in range(Niter):\n",
    "    # We compute the log-posterior at the current parameter\n",
    "    old_log_post = log_posterior_mu_sigma([param_samples_mu[i], param_samples_log_sigma[i]], hyper_prior_mu, hyper_prior_log_sigma)\n",
    "\n",
    "    # We compute a new proposal parameter\n",
    "    new_mu = proposal(param_samples_mu[i], 1)\n",
    "    new_log_sigma = proposal(param_samples_log_sigma[i], 1)\n",
    "    \n",
    "    # We compute the log-posterior at the new parameter\n",
    "    new_log_post = log_posterior_mu_sigma([new_mu, new_log_sigma], hyper_prior_mu, hyper_prior_log_sigma)\n",
    "\n",
    "    # We compute the MH-acceptance ratio    \n",
    "    ratio = np.min([1, np.exp(new_log_post - old_log_post)])\n",
    "    ratios.append(ratio)\n",
    "        \n",
    "    # We compute a random uniforma value to compare to the acceptance ratio \n",
    "    unif_samp = uniform.rvs(0, 1, size = 1)    \n",
    "    \n",
    "    # We accept of reject based on the MH-rule\n",
    "    if unif_samp < ratio:\n",
    "        param_samples_mu.append(new_mu)\n",
    "        output_samples_mu.append(new_mu)\n",
    "        param_samples_log_sigma.append(new_log_sigma)\n",
    "        output_samples_log_sigma.append(new_log_sigma)\n",
    "    else:\n",
    "        param_samples_mu.append(param_samples_mu[i])\n",
    "        param_samples_log_sigma.append(param_samples_log_sigma[i])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "output_samples_mu = np.array([i[0] for i in output_samples_mu])\n",
    "plt.plot(output_samples_mu)\n",
    "plt.xlabel('sample for mu')\n",
    "plt.ylabel('values')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYgAAAEGCAYAAAB/+QKOAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuNCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8QVMy6AAAACXBIWXMAAAsTAAALEwEAmpwYAABITklEQVR4nO29eXxcd3nv/340mtFol7XZ8u54dxZncRZIQhYgJIUQaKEk0LKTm0L4QbktDdy2FGhLW3pbyoUSwhZStqaQkKQNCWGLQ8hiO07iNY5jW7asfR1ptMz2/f1xzhmNRrMcSTOSZvy8Xy+/rDmL5ntG0vmcZxdjDIqiKIqSTMlCL0BRFEVZnKhAKIqiKClRgVAURVFSogKhKIqipEQFQlEURUlJ6UIvIJc0NjaatWvXLvQyFEVRCoY9e/b0GmOaUu0rKoFYu3Ytu3fvXuhlKIqiFAwi0ppun7qYFEVRlJSoQCiKoigpUYFQFEVRUqICoSiKoqREBUJRFEVJSd4EQkS+LSLdIrI/zX4RkS+LyFEReVFELkzYd72IvGTvuyNfa1QURVHSk08L4m7g+gz7bwA22v9uBb4GICIe4Kv2/m3ALSKyLY/rVBRFUVKQN4EwxuwE+jMcchNwj7F4GqgTkRbgEuCoMeaYMSYE/Mg+VskDzx7vZ+/JgYVeRt6JRGMLvQRFKTgWMgaxAjiV8LrN3pZue0pE5FYR2S0iu3t6evKy0GLmMw8e4EP37GZkIrLQS8kbO4/0cM7fPErvyMRCL0XJE6f6R/nd0d5F+zN++lgf//LYEcbD0YVeyoxYyEpqSbHNZNieEmPMXcBdADt27Djjpx/FYoadL/dw1aYmRFJ9lFPpGBpjcDTMXTuP8YnXb5qHFc4/Tx3rYzwc4+WuERqryhZ6OUoe+MS9z7PrhGUJN1b52Lysms1La9jSUs2bzmuhwrdwt7qTfaN86J7dDI9H+M1L3Xztjy5iRV35gq1nJiykBdEGrEp4vRJoz7BdccGvDnfz3u/sYk9rdrfReDjK4GgYr0f4xs5jdAfG52GF88+hjgAA7YNjro7/o28+wxd+diifS1qUHOka5uM/2su//eLlhV7KjHm5e4RrNjfxl2/cyjWbmxkej/CDZ1v55I9f5MPff45YbGGeHcfDUT78gz0I8Pm3nMOxniA3/r/f8rtXehdkPTNlIQXiQeDddjbTZcCQMaYD2AVsFJF1IuIDbraPVVzwYtsgAG0D2W+GXbYg3HbVeiKxGP9agDcGNxzuGAbgtAuBiMUMzx7v557ftTI0Fs730hYFL3cNc/sPnuMNX9rJT59v5wfPpm3NsygZHA0xOBrm1esb+eCVZ/HFt2/nwduv4MBnr+ev3rSN37zUw7efPL4ga/vcfx9k/+kA//KH5/PHl63hgdsvp77Sxx998xm+sfMYi33kcz7TXH8IPAVsFpE2EfmAiNwmIrfZhzwMHAOOAt8APgxgjIkAtwOPAoeAe40xB/K1zmLjQLv9tDyU/WbYOWQJxKXrGnjXpWv4z10nOdo9nPGcwHhh3TQHgiE6bSE87UI0u4cnCEVjjIWj/NfuU1mPL2SOdg/z0R/u5bov7eRXh7v5k6vW879ecxZdgYmC+jm39o0CsLaxcsp2T4nw/svX8vptS/nHRw6zr21oXtd1/942fvDMSW67aj2v27YUgPVNVfz0I5fzhrOX8XcPH+KjP9zLaGjxxv/ymcV0izGmxRjjNcasNMZ8yxhzpzHmTnu/McZ8xBiz3hhzrjFmd8K5DxtjNtn7/i5fayxGHIFwbv6ZcG6cy2rL+Oi1G6j0lfIPP3sp5bHRmOH/3L+PCz/3GMd6RnK34DxzqNP6PErEnWi2DVg3mwqfh/94unXBXBP55tcvdfP6f93JLw91cdtV6/ntX1zLJ6/fwkVrlgBwrCe4wCt0z4k+a61rGyqm7RMR/ukPzqOxqoyP/vC5eUvGONI1zKfv288l6+r5s+umxvaqykr593ddyCev38zD+zr47IMH52VNs0ErqYuI3pGJ+E2/w41A2McsrfHTUFXGbVev5xeHunjmWN+U48bDUT78/T18/5mTRGImLkKFgONe2rGm3pUF4bjmPnTlWbT2jfL4y8WZGfeLg11UlZXyxCev4S+u30J9pQ+ADc1VABztLpyHgBO9o4jAqvrpAgGwpNLHl95xPif7R/nrB1LW7aYlOBHhy798mUf2d87onA9//zkqy0r5yi0XUOqZfpsVET589Qau3dLM86cGZ7Sm+UQFIg3BiQg/evZkQaWlOTfuqrJS1xZEpc9Dtd8LwPsvX8eyGj9//7PDcd/o0FiYd3/rWR490MUnr98MwPHewnm6PNQRoLHKx/ZVtZweHMvq83UsiA9cuY6m6jLu+d2JeVjl/HO4c5itLTU0JGV1ra6vwOsRXikgK7G1L0hLjR+/15P2mEvPauCj127kvudOc//etqzf0xjDz/Z18Lp/eZx/eewIX/m1u/icMYZP3bePYz0jfPmW82mu8Wc8fn1zFcd7g4u2TkcFIgWtfUF+/99/xx337SuYbAOAA+2Wj/U1mxpdWRBdgXGW1k7+Apf7PHzi9Zt44dQgD+/rpHNonHd8/Sn2nhrgy7dcwIev3sCyGj8nCkggDncOs2VZDcvrypmIxOgLhjIe3zYwRmNVGTV+L++6dDW/OdJTUNfrhljM8FLnMNtaaqbtK/WUsLahsrAsiL7gtPhDKj567QYuWVvPX96/P+NDzoneIO/9zi7+5PvPUVfh47VbmjnSNeLqJv7k0T4efKGdT7x+E69e35j1+A1NVYSiMU72j2Y9diFQgUjiiZd7ePNXnoz7NQspk+VAe4CVS8rZvLSG3pEJJiKZrZ/OoXGWJT3h/MFFK9m0tIov/OwQf/C139E2MMbd77uEN29fDsDaxgqO9xXGDTMSjXGka5itLdXxvPNsbqa2gTFWLrGOfeclq/GI8B9PF1ZWTzbaBsYYmYiwZVl1yv3rm6oKyoI40TfKmobsAlHqKeFLN59PqaeEj3z/Ob73dCv3PdfGI/s7eeLlHva09vOlXxzhui/tZE/rAH/9pm08dPvlvGl7C6FIzJXlvKd1ABF43+XrXK19Ji69iUiUR/Z3zmvmkwqEjTGGu3a+wnu+/SwttX5+8KHLABgeX7wZBskcbA9w9vIaWmyroDuQuaq0KzAxTSA8JcKnbthK28AYE5EYP7r1Mi7fMPkktK6xsmCeqE/0BZmIxNiyrIYV9k0/W6pr28BoXCCaa/zccG4L9+4+tagzTWaKE7jfmsKCAOum1do3SiiyON0eiQyNhekPhlIGqFOxvK6cL77tPI72jPCXP93PJ+59gdu+t4c//taz/MHXnuJLv3iZN5y9jF/+76t4/xXrKPWUxD+ngx3ZY28H2odY11hJZZm7wrz1jkC4EOQHnm/ntu/t4YV5zMYqqpnUs2UsFOWO+17kgefb+b1zl/HFt23HU2JVIReKQIxMRDjeG+StF6ygpc666XcMjacN3MViZpqLyeHqzU18+ZYLuHB1HSuXTD1/XWMlA6NhhkbD1FZ4c38hOeSQHaDekmBBZCqWi8UMpwfHuP6clvi297xqDQ+90M5P97bzzktX53fBc2RkIkJZaQneFEHRRA51BBCBTUvTWBDNlURjhpP9QTY0pz5msXDSTnF1Y0E4XHf2Ml746+sYHg8zGooSDEUYC0UJhqI0VPo4Z0XtlOPPaqzC6xEOdQxz0/mZv/eB9gAX2plgbqjxe1laU+bKgjhw2hKGF9sGOX9Vnev3mAtnvEAMjYZ55zef5mBHgD9/w2Y+fPX6eIsKn6ekYPLBnWrhRAuiI0NaZ18wRCRm4scmIiJxl1Iya+0/xON9Qc6vqJvjqvPL4c4ApSXChuYqfJ4SKn2ejAWE3cMThKMmbkEAXLRmCdtaarjnqRPccskqV+1LFoo3fvkJbjxvOX/2hs0ZjzvcMcy6hkrKfamDuuubJt0ei10g4imuje4sCIdynyft9SfjKy1hQ3N1/G8sHQPBEKcHx3j3q9bMaC0bmqt4xYVAOA88L86jBXHGu5iq/aVsbanhW+/ZwUeu2TDlBlDtLy0YC8J5ujh7eS3Laq0bXKZMJqeKemmWLItk1tnBwEJwMx3qGGZ9UxVlpR5EhBVLyjO6mJwMpkSBEBHe++q1HO4c5tnjmZoTLyzhaMxKyz2SPS33UGcgrXsJJgXilQKohXB+D9fUu7cgZsPWluwCcTD+kFab8bhkNjZX80pPMGNswRgTdw3uP60CMW+UlAj//PbtXLtl6bR9BSUQ7QEaKn0srSmjqqyU6rLSjJlMzr7kGEQ2VtVXIFIYqa6HOwJsaZl8Al5eV57RxeRYF8lutTefv5y6Ci/ffepEXtaZCwZGreysgx0BghmKwYITEVr7RtMGqAEqy0ppqfUXRCbTib5RltX4XVsDs2VbSw3dwxP0ZegW62QRnr08vfimYn1zFSMTkXgNUyraBsYYHo+wtKaMI13DjIXmJ/3+jBeITFT7vQwvAhfTrhP97D6R+en1QHuAbctr4hbQslp/RhfTZBX1zATC7/WwvLY8btovVoZGw7QPjU95Ul5Rl9mCONU/3YIA65rfsWMVjx7oyviZLiT9dvpuNGYyFl4d7rTcFJksCLDdHgWQydTaF2SNywD1XHA+L8fNk4r9pwMsr/WzxC46dMsG22J7uSv95+1YJ2+7aCUxAwc75seKUIHIwGKxIO74yYv8fz/cm7btQygS4+Xu4SmmbUtdeWYX09A4nhKZVfvrQshkcszxxCflFUvKGRwNp33CdmogUhVcvX3HSqIxw04XLpyFoH9ksr5j94n0nXwPO59LS+bYwvomyy++2JvJnegbjcfF8onze+R8fqk40D7E2Stm5l4Cd6muTmLB2y+yGl3PVxxCBSIDlkAsrAUxEAzxSk+Q9qFxdqWxIo50DROOmimmbUuNP6OLqTMwTlNVWTxbayasbazgeG9mn+lCc7hjeipntkymtsHRadaDg+N26hlenANpnALACp+H3a3prc1DHQGq/aVZ5xGsb64iGIpmdHuk40jXMF/42SEGshQlzpXh8TC9IxOuiuTmSkNVGc3VZWlTXUdDEY71BmfsXgJrfkVtuTdjquuhjgDrGipZ21hJc3XZvDUeVIHIgOViWlgL4rmEcaA/fT71WIyD7ZMZTA7Lav30jEykzWVPl+LqhrUNlQTGIwyMLrz7LR2HO4epr/TRXD1pITk3xbZ0AjEwljYt2O/1UOMvpXckvze92eK4mK7a1MTek4NE01ibhzuG2bqsJms21vom66Y7mzjEv//6KF9//Bhv+NJOnshjL6t4F9d5cDGB9bCRzsV0qCOAMTMPUIOVCLGhuSrjZ32wYzKx4LyVteybp0C1CkQGFoOLaU/rAKUlwvVnL+N/XmxPWR29v32ISp9niqndUuvHGOgeTv0EaFVRz266mpPJdLx38fqoD3UE2LKsesqNMF4slyLVNRoztA+OpbUgAJqqyxa1BSECr926lJGJCC91Tr+RxWLG7sGUPXXVcXu4Sb9MJByN8avD3Vy+oYGaci9//K1n+dxDB/PS06x1FjUQc2FrSw1Hu4dTPnQ5fdDOWTFzCwKsOES6z3p4PMyp/rH4z+3cFXUc7RnJmIyQK1QgMlDt9zIyEUn7NDYf7G4d4OzlNdx8ySoC4xF+89L0J7ID7dbTRUmCu8gJPqeLQ3QGprfZcMvauEAszv4x0ZjhpS6rB1MizdV+SkskpYupe3h8Wg1EMotZIPqDE9SVe7l0XT0Ae1K4mU4P2i02sgSoAZqqyqj2l7qq8E3k2eP9BMYjvOdVa/nvj17Be161hm8/eZw3f+W3WdNEZ4qTKDEfQWqwUl3DUZMyeH/gdID6St+s/6Y2NFfRFwyldMs5iQXblk9aEMYwL12VVSAyUOO36gjnq4d8MuFojBdODXLRmnqu2NBIY5WPB54/PeWYaMxwqCMwrfpzue1OSRWHGA1FGB6PxOslZsqqJRWUyOKthWjtCzIejk17UvaUCMtq/SkzmdKluCbSWFVGT4Y0x0RO9Y/O64CagWCY+kofK5eUs7SmLD6fORHnBp0pxdXBcXu80j2zn/HPD3Ti95Zw5cYm/F4Pn73pHL7zvovpD4a56StP8uM92TupuuVEb5Cm6jLXbS3mymQm0/Qb8/72Ic5ent11l44NS9O33HBcyM77O3/rzvTIfKICkYFqWyAWKlB9oD3ARCTGRWuWUOop4U3nLecXh7qnVHef6AsyGorGny4cMlkQzrZltbNzMflKS1hVv3ib9jl+4lSpnCvqylO6mFIVySXTVF1Gr0sL4h8fOcxHf/icq2NzQV9wgobKMkSEHWvqU84kP9QxjAhsdiEQMPOmfcYYHjvYxZUbm6bUJVyzuZlHP34l25bX8E+PHM5ZckNr3yjr5sm9BHBWYyW+0pL4E71DKGI1hUz+G5wJmVJdD3UEqKvwxq2TpuoyWmr98xKHUIHIgDMnYaHiEM4fuTPl6y0XrCAUifHIvsnhJQdSBKgBqstKqfR5Uk5R65xlFXUiaxsWb6rr4c4AJTLpR09kRZpiubb+sfj+dDRVlzE8EXFVpNQ+OEZXlmaJuaQ/GGJJpfX7etGaJZweHJtWs3G4M8DahkoqfO6euDc0V9E97H786IH2AO1D41y3bXrRaUNVGe+8dDXdwxPTbrCz5cQ81UA4lHpK2LS0apoF8XK3lUV4ziwC1A4r6sop93pSBqoPdQTY1jLVOjl3xfwEqlUgMjBpQSyMQDzXOsCKuvK4NbB9ZS1rGyq4f++km+lA+xBej7AxqWeOiOVOyWhBzEEgnFqIxZjqeqhjmLOaqlLWM6xYUk5nYJxwUm//toExmqpT10A4NNk1I70u3ExdgQnGwtF5q3jtD4aor7TWt2Ot9UCRXA9xqCPgKkDtEG+54TJQ/fODXZTYgfJUXLWpCcBVO5BsjIYidA/PT4prIluX1UwTiAOnUz+kzYSSEuGspsppLqZINBYf7pTIeStrOdYTzLt3QwUiA5MWxPy7mIwx7G7tj1sPYN30bzp/BU8f74vf5A+2B9i0tBpf6fQf5fK68pQxiNlWUSeytqGCYCjq2ic/W77++Ctc8Lmf8/Y7f8f/uX8f9zx1gqeP9WXMsT/Ukb7X0Iq6cmJmuustUw2EQ6OdMtudxc0Ui5l49lhfMP9WRCxmGBgN02BX8G5tqaHc65niZgpORGjtH50WuM/ETFNdf36gkx1r6+PjS5NZWuNny7JqHk+RaDFTTvQ6GUzzZ0GA9dn2joSmZAceSJFFOBtSNe1zWtYn/z6fu7IOsKq384kKRAYW0oI4bbsonKdBh7dcsAJj4MEXTmOMNR863ZPLsprUFkTX0DjV/lLXroZUrI037ctfJlMsZrjnqVZqy70IwkMvtPPXDxzg5rue5oLPP8aHv79nWtpvYDzM6cGxtIHY5WmK5axBQZlvNm4tiIHREOGoZVn1zUPdxNBYmGjMxG/MXk8J56+qm1Iw91LXMMZkb7GRyOT40eyuxFP9oxzuHE7pXkrkqs1N7G7tz5r4EY7GuO+5tmmWnkOr08V1HmMQkLrlRqoswtmwoamK04NjU9JXD9rvkzz971w7UL3v9OCc3jMbKhAZWMggtfP0d+HqqQKxrrGS7avquH9vO52BcfqDobTFOS21frqHx6eNSpxLimviOiC/mUzPnRzg9OAYH3vdRu697VW88JnreObTr+We91/CbVet5+F9ndz2H3um5NgfjgeoUwtEqsFBbmoggHjRXbZU18TYQ3+eq4lhsoq6oWryyX3H2iUcbA/Eb8TO5+Img8lhJuNHf36wC4DXZxOITU2Eo4anXunLeNz9z53mE/e+wE/SZD2d6FsoC8L6/Bw3UyxmOJgii3A2ODGzYwmCfLA9gNcj0+Jp9ZU+VtSV573lhgpEBmpsF1NgASyIPa0DVPg8Kf+g33L+cg51BOKxiLQWRK3lTkl2iXQGJubkXgLLVVNaInnNZHrohXbKSkt4/bZlgOViW1rj5zWbmrjjhi38/VvP5dcv9fChe3bHff2Hs0xLSzV6tCuQvQYCrD9KETcCMWm1uYlXzBVHhBJdOxetWULMwPMnBwG7xUZZadZrTGZDcxXHXGQyPXawk81Lq7MWre1YU0+Fz8NvXurOeNx/7TkFwH/uPpVyf2tfkMYqX9wNPF/UVfhoqfXHW7kcT5NFOBviPZl6Jq2TQx0B1jdVpXQhn7eyNu+tv1UgMmBN55IFcTHtaR3ggtV1lKaYDvam85bjKRG+9utXEEl/M5wcHDTVzdSVYhb1TCn1lLC6viJvFkQkGuN/9nXw2q3NVKXJc3/npav5p7edx2+P9vL+u3cxGopwqGOY2nJv2uvzez00VvmmZHe5qYEA65rrK3xZ4y6JAjEfFkS/HedIFIgL1yxBhLib6XCn1fp8pnn665uqaO3PPH50IBji2eP9Wa0HsFKkX72+kceP9KRNcDjRG2TXiQHWNlSw9+Rgyqrw473BeaugTiax5Ua6LMLZsKahktISmZLqeqgjkFZ8zl1Zy4m+UYby2PImrwIhIteLyEsiclRE7kixf4mI3C8iL4rIsyJyTsK+EyKyT0SeF5Hd+VxnOkTErqaeXxfTyESEQx0BLkpyLzk0VZdxxYZGhicirGtIP//WGT2aGIeIxgw9I3O3IMCKQ+RrLsQzx/vpHQlx43mpJ9s5/OGOVfzLH27nmeN9vPfbu3j+1OC0FhvJLK8rnzJZzk0NhIObamrHxeTzlMTdP/mkP2j9fjZUTta11Pi9bF5azZ7WAYwxHO6YXlnuhg3NVURjJu7zT8WvDncTM3Dd2dkFAqw4RNvAGMfS/O78eE8bJQJf+6OL8HlK+M9d062I1nnq4pqKrS3VvNIzwkQkyoH2IXyekmlZhLPBV1rCmoaKuEuvd2SC7uGJafEHh/NW1AFWkV6+yJtAiIgH+CpwA7ANuEVEtiUd9mngeWPMecC7gX9L2n+NMeZ8Y8yOfK0zGwvRj+mFU4PEDFy0tj7tMW+5wLpxZjJtW2qcaurJm2HvyATRmJlTDYTD2oZKTvQF07YhnwsPvdBOpc/DNVuasx771gtW8m83X8CekwMZM5gckudCOGKRrcMp2MVy2SyI4XEaq3w0VvnmJUjtWBBOHYTDjrVL2HtykJP9owxPRGYUoHZIHD+ajscOdrGsxh8PnGbjaifdNUU2UzRm+MlzbVy5sYmtLTVcd/ZS7tvbNiXONGZ3mZ2vJn3JbG2pIRIzvNw1woHTATYtS+0Cmg0bmqviqa6HUnQkTsTp+5TPOEQ+LYhLgKPGmGPGmBDwI+CmpGO2Ab8EMMYcBtaKiLvHkHliIQRiT+sAImQcTH7dtmUsrSnjyo2NaY+pKS+l3OuZ4mLKRQ2Ew7rGCsbDMbrSNAScLaFIjJ/t7+S6s5dlrEtI5Mbty/nKLRfg85RMy/xKximWc1wcbQOjWWsgHJqqXFgQQ+M0V/tpqCqblzTXvmCIqrJSykqnrn/HmnpGJiL8dK/VBTjbDIhUnGWnuqarqB4PR3n8SA+v37bUtftqVX0FZzVVpqyH+N0rvXQMjfP2HSsBuPni1QyOhuNBcICT9mCnNfNcA+HgWGKHOgLWDIiWuQeoHTY0V9HaZ7n0sglEXYWP1fUVec1kyqdArAASbcM2e1siLwC/DyAilwBrgJX2PgP8XET2iMit6d5ERG4Vkd0isrunJ/ethavL5n+q3O7WATY1V1Nbnj4AV1lWytOfei3vuHh12mNEhJakYrn4qNEcuJjWNVpPl7l2Mz3xcg9DY2Fu3N4yo/NuOLeF5z/zet6UxS21vK6c8XAsHh+wUlzdBW8bbRdTpgLBruFxltaUUV/pm6cYRChl7YFTQ/PDZ09aLTaWzlwgKstKWZ5h/OiTR3sZC0ddxR8SuWpTE08f65vW5fXHe9qo8ZfyOrvY7tXrG1i5pJz/3HUyfozz+7ZQFsS6xkr83hJ+dbibgdEwZ8+yg2sqEl16B9sDLKvxp60rASsOUagWRKrHieS/qn8AlojI88BHgb2A87h+uTHmQiwX1UdE5DWp3sQYc5cxZocxZkdTU1NuVp7AfFsQsZhhb+sAF2V5CgZcPbEljx7tykGbDYe1jdYfaK5rIR56oZ26Ci9XbJj5z9NNbUdyqqubGgiHpqoyJiIxhjPk8XfZWWIN8+ZiSi0QTuO+zsA4a+orZt3Ubn1zVdpaiJ8f6KK6rJTLzmqY0fe8alMTE5EYzxyfrNUYGgvzyP5Objp/RdyaKykR3rFjFU8e7eOkndraGu/iujAWhKdE2Ly0ml8csqya2cyASMeGJkvEj3aPcKgje2v281bU0jYwlrfhTPkUiDZgVcLrlcCUiTfGmIAx5n3GmPOxYhBNwHF7X7v9fzdwP5bLat6Z76FBR7qHGZ6IpA1Qz5SW2qmjRzsD43g9Eq+6nQvLa8vxlZbkdD71WCjKYwe7uOGcZTnz6yaTOFnOqYFY5dKCaLJrIdI17QtHY/SOTFgupkoffcHM1kYu6BsJpfx5Oo37YGYFcsk4TfuSY03RmOGXh7u4ekvzjH9Wl53VQFlpyZQ4xP+82MFEJMbbLlo55di37VhJicC9dsrrib5R6it9GS3sfLO1pYZw1NhZhHMPUDusb7ZE72BHgFd6RrL+3M5d6RTM5ceKyKdA7AI2isg6EfEBNwMPJh4gInX2PoAPAjuNMQERqRSRavuYSuA6YH8e15qWan+p62ZluSC5Qd9caan10zU8EZ9p4fjH51r1CdbT3Zr6ipy6mH79UjfBUDRr9tJciE+WGxijKzBOJGbcWxBZiuV6RyYwxrLQGqrKGA/HGM1zP6Z0FgRM/h7NJoPJYUNzFaMJ40djMcMvDnbxjq8/Re9IiOvPXjbj7+n3erj0rAZ+c2SyHuK/9pxi09Iqzls59Ym8pbacqzc38197ThGJxmid5yZ9qXBu3Gc1um9+6IYKnzUO9mf7O4nETNb6inNWFKhAGGMiwO3Ao8Ah4F5jzAERuU1EbrMP2wocEJHDWK6kj9nblwK/FZEXgGeB/zHGPJKvtWai2l/KyEQkL5k6qdjTOkBjlS9nfwDLav1Waqt9Q+sMWP7xXLG2MbddXR96oZ2m6jIunaHLYibUVXip8Hk4PTiWUAPhMgZht9tIVwvhpLguqy2L37TzGYcwxlgCUZVaIK7Y2EiJkDVwnwknk+lQR4B7d5/iui/t5IP37KYzMM7nbjqb3zt35gIBlpvpWE+QU/2jHO0eYe/JQd520cqUrtN3XLyKrsAEjx/p4URvcMFSXB2cAtZcupccEsePZrMgavxe1jVW5m02RF4nbRhjHgYeTtp2Z8LXTwEbU5x3DNiez7W5pdpfijEQDEXmpWpzT+sAF65eMuvBI8lMFsuNWd1dA+NsncPTZDLrGq1slFjMzNkqGR4P86vD3dxyyWo8ObBw0iEi8UymmdRAQHYLwnHnNVdPxnh6RybSzrqeK8FQlFA0ltZluGlpNc98+nXxdc8Gx+1x2/f2EI4atrbU8G83n88bz21JWcjplqs2NfF5rO6ubQNjeEqEt1yQnMdice2WZhqryrj7dydoHxpfeAtieQ0VPg+XrEufij5bNjRX8fiRHvzeEldCeO6KWnafmD5BMBfMzyimAiZxJkS+BaJneILWvlHedWn6zKSZ0mJPjXNuXF1D41y9KXttgVvWNlQSisRoH3If6E3HYwe7mIjEuHF7/txLDsvtWohT9hyI5S5qIADqyr2UlkjaWginy+fSGj8R2+rMZkF0D49z7T8/zrffe/GMbzj9dhB8SUX6mNJcxAGswPyFq+so93n4X69Zz5UbG3PyALO+qZIVdeX8+nA3+9uHuHpT0xRhTcTrKeFtF63kzsdfASZ7gS0UNX4vT3zyGuoyfO6zxWm5sWVZjasHpXdcvIorNjRijMnZg6WDCkQW5rOja67jDzC13cbweJhgKDrrSXKpSMxkmqtAPPRCOyvqyrlwdV0OVpaZFUvKebFtkLaBUZpd1kCAFXdpzFAL0RUYp7TESgJwUjizZTK93DXCyESEXSf6ZywQTp1FQxoXUy4QEe778OV5+b5XbW7iB89YKayfffPKjMe/4+JVcYFYqAymRBqqcvd3lIgjEG4TCy7fkL4Waq5oL6YszOdMiPv3tlHh8+TUr1lX4aWstITOwHhOU1wdnCe5uTbtGwiGeOLlXt60vSXnT0GpWFFXzsBomCPdIzNuYNdY7cvgYpqgubqMkhKJ37SztdtwWo+7HcyTyGSjvvzcrPKNU1W9pMLLtVsy11Ksa6zkUltAF6oGYj7YtLTaTh3OvftqpqgFkYX5siB++3Ivjx7o4s+u2+T6adYNTrFc++DYZJFcDgViabUfv7dkzoHqnS/3EIkZ3njuzIrjZouTybT/9NCM37OpqixtkLp7eJxm+/Ot8JXi95bQl6U1h/Nzmcn8Z4d4q+8cpC0vBK/e0Ei518PvX7jSVarsn79hM48e6MyLa2exUFvuZddfvo6yPKV5zwQViCzU2AKRz1TXcDTG3zx0gNX1FXzwyrNy/v2d0aOdOayidigpEdY2zL1p34H2AL7SkrSNyXKNUywXjWVv851MU3XZlIExiXQFxqf4xxsqy7LGICYFIjhjP3KqVt+FRFVZKY9+/DU0u8ys27G2nh0ZepQVC7l8SJwLCy9Ri5zEIHW+uOepVo52j/BXb9qWl1+M5bXW6NF8uJjAMv3nKhAH2wNsWVY9p6yYmZDYmG+msROnYV+q1OfOpFbqDVW+rC4mp9J9ZCKSdZxpMv3BEGWlJVT4FscNZTasbqhYNDdEZSoqEFnIt4upZ3iCLz12hKs2NfG6rbnLLkpkWa2frsA47UPj1FV4c/7HuGNtPcd7g3zrt8dndb4x1lSu+bIewJoO52SIzDgGUVVGJGYYHJtqVY6FogTGI3EXExCvps5Ex+A41XYbjJm6mZwq6vmI2yhnHioQWSj3evCUSN6C1P/0yGHGI1H++sZtefsjb6m1Ui4P2M2/cs17X72WN5y9lL/9n4M8sr9jxud3BSboD4ZyMpXLLaWekvhnMRsXE0yvhUhMcXWoryyLp6Kmo31ojFettwoD3cx/TmRgNH2RnKLMFRWILFhDg/LTsO/5U4P815423n/5uni1aj5YZtdCHGwfymn8wcFTInzpHRewfWUdH/vR8zx3cmBG5x/ssNoEzKVf0Gxw4hBuayAcmqpSC0SqVuqNVT56g6G0/ZhGJiIMj0c4f3UdFT7PjDOZ+oKhjDUQijIXVCBcYAlEbi2IWMzwmQf201RdxkdfO62YPKc4tRDhqMmLBQFQ7vPwzffsYGmNnw9+d3fGCWTJHLTHNqaav51P1jdVsqq+fMYut3jDvqTspC5bMBJbmdRX+ghFYgTT9GPqHJocVuQ0xZsJ/cGJgs1gUhY/KhAusGZC5NaC+PFzbbzQNsSnbtiSduZyrmhJsBpyHaBOpLGqjLvfdzExY3jvd3a5bkF8qGOYNQ0V8z6A/i+u38L3P3DZjM9rTOdispMApsQgbGsjXapr++Ck1bG+qZJjM3Qx9Y+ECrYGQln8qEC4INcupqGxMP/0yGEuWrOEt6bpPZNL6it9+OzsoHy4mBI5q6mKb7x7B6cHx/jQPbunDYRJxXwHqB3qKnysnkXBVXVZKWWlJdNqITqHxin3euKp0TBZn5Auk8nJYFpuWxCnB8cYDbn7XRsPRwmGonmtolbObFQgXFDt9+a0DuILDx+iPxjis28+e16yT0QkLgz5cjElcvHaev7v27ezu3WAf3zkcMZjRyYinOgLLohAzBYRoal6eruNruEJltaUTfmZxqup0wSq2wfHEbEsu/V2iwW3VkSh10Aoix8VCBfU5NCCePJoLz/adYoPXXlWvJf7fOAIRD5dTIncuH05v3fuMh7e15FxYM5LnQGMYV4zmHKBUwuRSFdgfIp7CUho+Z3axdQxNEZjVRm+0pJ4ooLbOIQKhJJvVCBckKsg9Wgowh33vci6xkr+9PWbcrAy9yx3LIg8u5gSec3GJroCE2nnGcNkgLrQBCJVw76uwPg0C62h0glop3Mxjcd/NmsaKigR96muhd5mQ1n8qEC4oNrvZWQiMufRkV989CVO9Y/xj39w3rxXjm5cWk1DpY8lFfMXCL5io9Vl8omXe9Mec7AjwJIK77y4vnJJsovJGENXimFM5T4PFT5P2nYbHUPj8Zbsfq+HVfUVHHNtQVjvrxaEki9UIFxQ7S8lZkibquiGPa393P27E7z7VWvyMmQkGx+8ch2PfPw181pxu3JJBesaK/nt0QwC0R5g2/KagqsEbqoqo380RCQaAyAwHmE8HEvpwmuo8qXMYjLG0DE4NsWqO6ux0rUF0R+0rFoVCCVfqEC4YK4tv8fDUT754xdZXlvOJ6/fksuluaas1DPnwTGz4YoNjTx9rI9QJDZtXyQa43DncEEFqB2aqsswZjIOkKnPVX1lWcospsB4hGAoyvK6yXPWN1VxrGfE1Yjb/uAEnhKhZp7Tg5UzBxUIF8y1H9P/+9XLvNIT5Au/f27eax4WG1dsbGQ0FGVviurq471BJiKxea+gzgXObGqnuV4mgWis9KXMYnIqrx0XE8D65iomIjFO2zMiMtFvV1HPddSroqRDBcIFkwIxcwti/+kh7nz8GG+7aCWvsYejnEm8an0DnhJJ6WY62FGYAWpI6Mc04gjE9Cpqh/pKX8oYRHu8BmKqBQHuMpmcRn2Kki9UIFzguJgCs7AgPn3/PuorffzVG7flelkFQY3fy/aVtSkD1QfbA/g8JXntQ5UvmpOqqTNZEA1VZfQFJ6YlOXQMprAgmqxZEm7iEP3BkMYflLyiAuGCmlm6mKIxw4ttQ9xy8Spq5zF7aLFxxcYmXmwbZGh0qgV2sCPApmVVeOdpBkQucVxMvSOTAlFbnrqVekOlj3DUMDwx9fenY2iMEpkUG7CsjboKrysLoj+onVyV/FJ4f5kLwGyD1GN2m4n57jG02LhyYyMxA08dm7QijDFWBlMBxh/ASl+tKiudYkGkci/BZDV1ctvv9sFxmqv9U4YkiYjVtM9FV9e+oLqYlPyiAuGC2QapnZ465QU87SsXnL+qjqqy0ilupu7hCfqCoYIVCJhaC9EZmEhbpV4f78eU1LspMEZL3fRz1jdlT3UNR2MMjYXVxaTkFRUIF1T4rKFBIzMUiDG7bqL8DB+n6PWUcNlZ9VMC1ZMV1PPXbiTXNCVUU3cHxtMKRGO8o+tUC6JjcJzltdNnUaxvqqJ3ZIKhsfQW6+Co1kAo+SevAiEi14vISyJyVETuSLF/iYjcLyIvisizInKO23PnExGhqmzm7TYcF1MhzwvOFVdsaKS1b5RT/aPAZAbTlpb5nQGRSxJnU3fbjfpSUZ+io6sxhvahsSmt2B3OanKa9qV3M2kfJmU+yJtAiIgH+CpwA7ANuEVEklN5Pg08b4w5D3g38G8zOHdemU3L71HHglCB4IqNVoqv42Y62B5gdX1FQRd5NVb56BmeoDc4QTRmsrqYElNdB0fDjIdjKXtjuclk6tM2G8o8kE8L4hLgqDHmmDEmBPwIuCnpmG3ALwGMMYeBtSKy1OW584rV8ltdTLNlfVMlLbV+fnu0B1i4GRC5pKm6jMB4JG4VpRMIv9cKaCd2f21PmAORzKr6CrweyZjJ1B9v1KfDgpT8kU+BWAGcSnjdZm9L5AXg9wFE5BJgDbDS5bnY590qIrtFZHdPT0+Olj6d2XR0dQSiwndmVU+nQkS4YkMjTx7tY3g8zIm+YEFWUCfiFMsdsOMpmVqpJxfLTVZRTz/H6ylhTUNlxkwmdTEp80E+BSJV/X9yg5l/AJaIyPPAR4G9QMTludZGY+4yxuwwxuxoaspfpfJsZkKMhtXFlMgVGxsZGgvz4z1tBTkDIhlHIPafHgJSV1E7WA37JgWi3RaIVBYEOJlM6QXC+V7z2Z1XOfPI56NtG7Aq4fVKoD3xAGNMAHgfgFjtPI/b/yqynTvfVPu9DE8Mz+icMU1zncLlG6z239/67XGg8AXCyU7afzqAiJXVlI6GSh+n7cppgI7BMUpLJP49klnfVMUvD3UTjsZSFhL2B0PUVXin1FAoSq7J52/XLmCjiKwTER9wM/Bg4gEiUmfvA/ggsNMWjaznzjezCVLHXUwagwCsG+rWlhraBsaoLffGB+UUKo4FcaRrmMaqsow364bKsiktvzuGrLRYT5pGe+ubqojEDCft+EYy2mZDmQ/yJhDGmAhwO/AocAi41xhzQERuE5Hb7MO2AgdE5DBWxtLHMp2br7W6wRGImQwNUhfTdK60hwhtaym8GRDJOAHiSMxkdC8B1FdZMQjn96d9MHWKq4MznzpdHKI/GKK+QgVCyS95jZ4aYx4GHk7admfC108BG92eu5BU+71EY4axcNR10HksFEUEykrVDeBwxYZG7tp5rODdSwC+0hKWVHgZGA1nnYjXUOkjEjMExiLUVnjpDIxz3sq6tMeflSXVtT8YYk1DxazXrihu0DuXS2bTbmMsFKXC6yn4J+Vccsm6eq7c2Mj15yxb6KXkBCeG0JxNIKom220YY6bMok5Fjd9LU3VZ2mK5vmAo/j0VJV+oQLhkNg37RsNRdS8l4fd6+I8PXMrFa+d/7Go+cOIQS6uzWRB2u41giL5giFAkltHFBOkzmWIxw8CoxiCU/KMC4RLHgphJsdxYSAWi2HEEYlltlhiE025jJBSfA7EsRR+mRNY3VfFKT3Ba3CswHiYaM9RrkZySZ1QgXDKbmRCWi0mL5IqZJpcupnjDvuBEyklyqdiyrJqhsTAP7+ucsr0vXkWtFoSSX1QgXDJbF5NfLYiiptGli2lJpfX70z8SSjmLOhVv37GKi9Ys4U/vfZ5dJ/rj27WKWpkvVCBcMrsgdURrIIqcS9bVs31lLesaKzMeV1bqodpfSl8wRPvQGD5PSVYLwO/18M1372BlXTkf/O5ujnZbhZpOFbUKhJJvVCBcMhsLwkqJVYEoZi5cvYQHbr/CVaypodJHX9CKQSyr9VOSpkgukSWVPr77/kvweoT3fHsX3YFxtSCUeUMFwiVWuurMLIjRkLqYlEkaqsroD07QMTSWss13OlbVV/Cd917CwGiI9929i1MDVnW1CoSSb1QgXFJS4gwNmnkdhKKAdUPvGwnRPpi5BiIV566s5avvupDDncPctfMYlT4Pfv3dUvKMCsQMqPF7CaiLSZkljVU+ekcm6AqM05Kmi2smrtnczBfeeq6V4qpFcso8oDmYM2CmDfvUxaQkUl/po9cOMM+2UeEfXryKsXA0Pq1QUfKJCsQMmMnQoGjMEIrEtA5CiZM4/S1bimsm3vPqtTlYjaJkZ0YuJhEpEZHC77I2S6r9XtcWxFjYmSanFoRikdg7qSVLkZyiLAayCoSI/EBEakSkEjgIvCQif57/pS0+ZuJiGrWHBamLSXHIlQWhKPOFGwtimz3E5y1Y7bdXA3+cz0UtVmbiYhoPxQAdFqRM4qSlltltwhVlseNGILwi4sUSiAeMMWHSzIcudhwXk5uhQaNhy4JQF5Pi0Gi7mJbXlWsLeKUgcCMQXwdOAJXAThFZAwTyuajFSrW/lEjMMB6OZT3WyTJRF5PisMS2ILK1+VaUxUJWgTDGfNkYs8IY83vGohW4Zh7WtuiYSbuNcZ1HrSTh9ViupeWzqIFQlIUgaw6miCwF/h5Yboy5QUS2Aa8CvpXvxS02ahJmQjRnyeVyLAi340mVM4P/d8uFrFyiAqEUBm5cTHcDjwLL7ddHgI/naT2LmsmOrtktiFE7zbXcp8XqyiRXbGxkbZbOr4qyWHBz92o0xtwLxACMMRHgjCzjnHQxZU91dVxM5WpBKIpSoLgRiKCINGBnLonIZcBQXle1SJnJTAinDkJjEIqiFCpuHm8/ATwIrBeRJ4Em4G15XdUiZSZB6kkXkwqEoiiFSVaBMMY8JyJXAZsBAV6yayHOOGZiQYyHoohYRVGKoiiFiJsspncnbbpQRDDG3JOnNS1aqnyl1tCgCTcupqg9ZEgLohRFKUzcuJguTvjaD7wWeA7IKhAicj3wb4AH+KYx5h+S9tcC38Nq31EK/LMx5jv2vhPAMFZAPGKM2eFirXmlpESo8rlrtzEajqp7SVGUgsaNi+mjia/tm/p/ZDtPRDzAV4HXA23ALhF50BhzMOGwjwAHjTE3ikgTViPA7xtjQvb+a4wxvS6vZV5w27BvPKQCoShKYTMbB/kosNHFcZcAR40xx+wb/o+Am5KOMUC1WH6YKqAfcD+RZwGw+jG5sCBCUZ0FoShKQeMmBvEQk835SoBtwL0uvvcK4FTC6zbg0qRjvoKVIdUOVAPvMMY4jY4M8HMRMcDXjTF3pVnfrcCtAKtXr3axrLnh1oIYDes0OUVRChs3j7j/nPB1BGg1xrS5OC9VdDa5DeobgOeBa4H1wGMi8oTdXvxyY0y7iDTb2w8bY3ZO+4aWcNwFsGPHjrx3ma32l8bHRmZi3A5SK4qiFCpuYhCPz/J7twGrEl6vxLIUEnkf8A/G6p99VESOA1uAZ40x7fb7d4vI/Vguq2kCMd9U+70c7w1mPW40HGFptXbtVBSlcEkbgxCRYREJpPg3LCJu2n3vAjaKyDoR8QE3Y7mTEjmJlRXlNAXcDBwTkUoRqba3VwLXAftnfnm5x7WLKaQuJkVRCpu0FoQxpnou39gYExGR27Ea/XmAbxtjDojIbfb+O4HPA3eLyD4sl9RfGGN6ReQs4H67hqAU+IEx5pG5rCdXuJ1LrS4mRVEKHddpNnYsIO4zMcaczHaOMeZhrDGlidvuTPi6Hcs6SD7vGLDd7drmk2p/KaFojPFwFH8GARgNR3WanKIoBU3WNFcRebOIvAwcBx7Hmi73szyva9FSU271YwpkSXVVF5OiKIWOmzqIzwOXAUeMMeuwYgZP5nVVi5j40KCx9G6maMwQisS0DkJRlILGjUCEjTF9QImIlBhjfg2cn99lLV5qXVgQYzosSFGUIsDNI+6giFQBTwDfF5FuFnm1cz6Ju5jG0guEMwtChwUpilLIuHnE3QnUAR8DHgFeAW7M45oWNTV+x4JIr5HjIasYXLOYFEUpZNwIhGClqv4Gq1/Sf9oupzOSmnInBpHBggg7FoQKhKIohUtWgTDGfNYYczZW59XlwOMi8ou8r2yRMmlBZHIx6TQ5RVEKn5lEUbuBTqAPaM7PchY/fq8HX2kJQxksiHFbINTFpChKIeOmDuJPROQ3wC+BRuBDxpjz8r2wxUyN35sxzVUtCEVRigE3aTZrgI8bY57P81oKhpry0swuJjvNVSupFUUpZNx0c71jPhZSSFgWRHYXk6a5KopSyGgl1yyoKfdmTHON10FoDEJRlAJGBWIW1PhLGc5gQYyF7ToIdTEpilLAqEDMAsuCyCAQoQgiUFaqH6+iKIWL3sFmgZPFZA3Cm85oKEq514M9z0JRFKUgUYGYBbXlXkLRGBORWMr9YzoLQlGUIkAFYhZka7cxFopqDYSiKAWPCsQsyNZuw3ExKYqiFDIqELPAafk9lKaaeiwc1RoIRVEKHhWIWRCfKpfGghgLRbUPk6IoBY8KxCzINjRoNBzRGISiKAWPCsQsiMcgNEitKEoRowIxC6rjLqY0MQh1MSmKUgSoQMwCv9dDWWlJBheTWhCKohQ+KhCzJFO7DXUxKYpSDORVIETkehF5SUSOisi0tuEiUisiD4nICyJyQETe5/bchabGX5pyaFA0ZpiIxKjwapqroiiFTd4EQkQ8wFeBG4BtwC0isi3psI8AB40x24Grgf8rIj6X5y4o6SyIsbAzC0KNM0VRCpt83sUuAY4aY44ZY0LAj4Cbko4xQLVYXe2qgH4g4vLcBSXd0KAxHRakKEqRkE+BWAGcSnjdZm9L5CvAVqAd2Ad8zBgTc3kuACJyq4jsFpHdPT09uVp7VtINDXIEQrOYFEUpdPIpEKl6XSf3x34D8DywHDgf+IqI1Lg819pozF3GmB3GmB1NTU2zX+0MqS0vTWlBjIbtaXIapFYUpcDJp0C0AasSXq/EshQSeR9wn7E4ChwHtrg8d0Gp8VsxiOSZEJMuJhUIRVEKm3wKxC5go4isExEfcDPwYNIxJ4HXAojIUmAzcMzluQtKTbmXcNQwHp46E0JdTIqiFAt5i6QaYyIicjvwKOABvm2MOSAit9n77wQ+D9wtIvuw3Ep/YYzpBUh1br7WOhucdhtDY+Ep1sKoWhCKohQJeU21McY8DDyctO3OhK/bgevcnruYiA8NGg+zrNYf3+6kuepEOUVRCh1N1p8l6Rr2aZqroijFggrELIm3/E4qlhsN2VlMGoNQFKXAUYGYJfGhQUntNsbsoLW6mBRFKXRUIGZJOgtiLBRBBMpK9aNVFKWw0bvYLInPhBhLdjFFKfd6sLqHKIqiFC4qELOkrNSD31syrd3GWDiq7iVFUYoCFYg5kKph31goil8D1IqiFAEqEHMgVcvv0ZBaEIqiFAcqEHMg1dCgsXBUayAURSkKVCDmQG0KC2IsFKXcqx+roiiFj97J5kBNeYoYRDhKhVoQiqIUASoQc6DG72VoWpprRBv1KYpSFKhAzIGa8lIC45EpMyHG7DoIRVGUQkcFYg7U+L1EYybe4hu0DkJRlOJBBWIOpGq3MRqKqotJUZSiQAViDky2/LZSXaMxw0Qkpi4mRVGKAhWIOZA4NAhgXIcFKYpSRKhAzIHkoUGjOixIUZQiQgViDiTHIOLT5NTFpChKEaACMQeShwbpPGpFUYoJFYg5UD3NxWSPG1WBUBSlCFCBmAO+0hLKvR51MSmKUpSoQMyR2nKvupgURSlKVCDmSE15abwfk5PFpAKhKEoxkFeBEJHrReQlETkqInek2P/nIvK8/W+/iERFpN7ed0JE9tn7dudznXOhxu+d5mLSiXKKohQDeUvYFxEP8FXg9UAbsEtEHjTGHHSOMcZ8EfiiffyNwJ8aY/oTvs01xpjefK0xF9SUe+keHgcSXUxaB6EoSuGTTwviEuCoMeaYMSYE/Ai4KcPxtwA/zON68kLiVDl1MSmKUkzkUyBWAKcSXrfZ26YhIhXA9cBPEjYb4OciskdEbk33JiJyq4jsFpHdPT09OVj2zEicSz0WiiACZaUa2lEUpfDJ551MUmwzKbYB3Ag8meReutwYcyFwA/AREXlNqhONMXcZY3YYY3Y0NTXNbcWzoMZvTZUzxljzqL0eRFJduqIoSmGRT4FoA1YlvF4JtKc59maS3EvGmHb7/27gfiyX1aKjpryUmIFgKMpoSGdBKIpSPORTIHYBG0VknYj4sETgweSDRKQWuAp4IGFbpYhUO18D1wH787jWWZPYsG8sFNUMJkVRioa8pdsYYyIicjvwKOABvm2MOSAit9n777QPfSvwc2NMMOH0pcD9tqumFPiBMeaRfK11LiQ27NNpcoqiFBN5zcc0xjwMPJy07c6k13cDdydtOwZsz+fackXi0CBrmpymuCqKUhxous0ciQ8Nsl1M5V79SBVFKQ70bjZH4hZE3MWkFoSiKMWBCsQciccgxsKMhiLa6ltRlKJBBWKOOEODhsYitotJBUJRlOJABWKOlHpKqPR5NItJUZSiQwUiB9SUe20XU1RdTIqiFA0qEDmgxu9lYDTMRCSmLiZFUYoGFYgcUFNeSo/d8ltdTIqiFAsqEDmgxu+lM2AJhBbKKYpSLKhA5ICaci89wxMA6mJSFKVoUIHIATV+q6MrqItJUZTiQQUiBzjFcqAWhKIoxYMKRA5w2m0AmuaqKErRoAKRA5yGfaAuJkVRigcViBwwxYJQF5OiKEWCCkQOmBKDUAtCUZQiQQUiByRaENruW1GUYkEFIgfUahaToihFiApEDnCC1CLg14lyiqIUCXo3ywFVZZZAlHs9iMgCr0ZRFCU3qMM8B5R6SqgqK6WsVPVWUZTiQQUiR9T4SykpUetBUZTiQQUiR9SUe4kZs9DLUBRFyRkqEDmixu9lIhJd6GUoiqLkDBWIHHHra84iHI0t9DIURVFyRl6jqiJyvYi8JCJHReSOFPv/XESet//tF5GoiNS7OXex8bptS7nh3JaFXoaiKErOyJtAiIgH+CpwA7ANuEVEtiUeY4z5ojHmfGPM+cCngMeNMf1uzlUURVHySz4tiEuAo8aYY8aYEPAj4KYMx98C/HCW5yqKoig5Jp8CsQI4lfC6zd42DRGpAK4HfjKLc28Vkd0isrunp2fOi1YURVEs8ikQqYoC0uWB3gg8aYzpn+m5xpi7jDE7jDE7mpqaZrFMRVEUJRX5FIg2YFXC65VAe5pjb2bSvTTTcxVFUZQ8kE+B2AVsFJF1IuLDEoEHkw8SkVrgKuCBmZ6rKIqi5I+81UEYYyIicjvwKOABvm2MOSAit9n777QPfSvwc2NMMNu5+VqroiiKMh0xRdQeYseOHWb37t0LvQxFUZSCQUT2GGN2pNxXTAIhIj1A6yxPbwR6c7icxciZcI1wZlznmXCNcGZc50Jf4xpjTMoMn6ISiLkgIrvTqWixcCZcI5wZ13kmXCOcGde5mK9RBxgoiqIoKVGBUBRFUVKiAjHJXQu9gHngTLhGODOu80y4RjgzrnPRXqPGIBRFUZSUqAWhKIqipEQFQlEURUnJGS8QhTaYyC0i8m0R6RaR/Qnb6kXkMRF52f5/yUKuca6IyCoR+bWIHBKRAyLyMXt70VyniPhF5FkRecG+xs/a24vmGhMREY+I7BWR/7ZfF9V1isgJEdlnD0nbbW9btNd4RgtEkQ8muhurhXoidwC/NMZsBH5pvy5kIsD/NsZsBS4DPmL//IrpOieAa40x24HzgetF5DKK6xoT+RhwKOF1MV7nNfagNKf2YdFe4xktEBTxYCJjzE6gP2nzTcB37a+/C7xlPteUa4wxHcaY5+yvh7FuLCsoous0FiP2S6/9z1BE1+ggIiuBNwLfTNhcdNeZgkV7jWe6QLgeTFQkLDXGdIB1cwWaF3g9OUNE1gIXAM9QZNdpu12eB7qBx4wxRXeNNl8CPgnEErYV23Ua4OciskdEbrW3LdprzFs31wJhJkONlEWKiFRhTSP8uDEmIJLqx1q4GGOiwPkiUgfcLyLnLPCSco6IvAnoNsbsEZGrF3g5+eRyY0y7iDQDj4nI4YVeUCbOdAviTBtM1CUiLQD2/90LvJ45IyJeLHH4vjHmPntz0V0ngDFmEPgNVmyp2K7xcuDNInICy9V7rYh8jyK7TmNMu/1/N3A/lpt70V7jmS4QZ9pgogeB99hfv4epQ5oKDrFMhW8Bh4wx/5Kwq2iuU0SabMsBESkHXgccpoiuEcAY8yljzEpjzFqsv8NfGWP+iCK6ThGpFJFq52vgOmA/i/gaz/hKahH5PSzfpzOY6O8WdkW5QUR+CFyN1Uq4C/gM8FPgXmA1cBJ4e8Ic8IJDRK4AngD2Mem3/jRWHKIorlNEzsMKXHqwHujuNcZ8TkQaKJJrTMZ2Mf2ZMeZNxXSdInIWltUAlnv/B8aYv1vM13jGC4SiKIqSmjPdxaQoiqKkQQVCURRFSYkKhKIoipISFQhFURQlJSoQiqIoSkpUIBTFJSLyGxFxPVxeRLbYXTv3isj6HK7jNhF5d66+n6Kk40xvtaEo+eQtwAPGmM+4Odgu/BNjTCzTccaYO3OwNkXJiloQSsFiV6b+jz0rYb+IvMPe/tcissvedpd943UsgH8VkZ32DImLReQ+uw//39rHrBWRwyLyXRF5UUR+LCIVKd77OhF5SkSeE5H/svtBJe7/PeDjwAdF5Nf2tk/Ya9ovIh9PeL9DIvLvwHNMbf2CiPyDiBy01/LP9ra/EZE/s7++2N73lIh8Uez5HyLyXhH5qYg8JCLHReR2+/33isjTIlJvH/ch+7N6QUR+kupalTMXFQilkLkeaDfGbDfGnAM8Ym//ijHmYntbOfCmhHNCxpjXAHditTT4CHAO8F67ohVgM3CXMeY8IAB8OPFNRaQR+EvgdcaYC4HdwCcSjzHGPGy/x78aY64RkYuA9wGXYs2u+JCIXJDwfvcYYy4wxrQmvE898FbgbHstf5viM/gOcJsx5lVANGnfOcA7sfr9/B0waoy5AHgKcFxU99mf1XasdukfSPEeyhmKCoRSyOwDXici/ygiVxpjhuzt14jIMyKyD7gWODvhnAcTzj1gz5SYAI4x+fR+yhjzpP3194Arkt73MqwBU0+K1Yb7PcCaLGu9ArjfGBO05zvcB1xp72s1xjyd4pwAMA58U0R+HxhN3Gn3aKo2xvzO3vSDpPN/bYwZNsb0AEPAQwnXvtb++hwRecL+rN7F1M9KOcNRgVAKFmPMEeAirBveF2zXkh/4d+BtxphzgW8A/oTTJuz/YwlfO6+dmFxy/5nk14I1l+F8+982Y0y2J+9MPciDqTYaYyJYT/8/wYpnPJJ0SLa+5snXl3jtzrXeDdxuf1afZepnpZzhqEAoBYuILMdym3wP+GfgQiZvcL12XOBts/jWq0XkVfbXtwC/Tdr/NHC5iGyw11EhIpuyfM+dwFvsYyuxXEdPZDrBXn+t7a76ONbI0TjGmAFgWKwRpGB1QZ0p1UCHWG3T3zWL85UiRrOYlELmXOCLIhIDwsCfGGMGReQbWFbFCayW7jPlEPAeEfk68DLwtcSdxpgeEXkv8EMRKbM3/yVwJN03NMY8JyJ3A8/am75pjNkr1iS8dFQDD9hWkQB/muKYDwDfEJEg1qyIoRTHZOKvsLrftmJ9ZtUzPF8pYrSbq6IkYN+w/9sOcC96RKTKmVktIncALcaYjy3wspQiQS0IRSls3igin8L6W24F3ruwy1GKCbUgFEVRlJRokFpRFEVJiQqEoiiKkhIVCEVRFCUlKhCKoihKSlQgFEVRlJT8/0RseTBufc+wAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "output_samples_log_sigma = np.array([i[0] for i in output_samples_log_sigma])\n",
    "\n",
    "plt.plot(np.exp(output_samples_log_sigma))\n",
    "plt.xlabel('sample for sigma')\n",
    "plt.ylabel('values')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 360x360 with 6 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "\n",
    "g = sns.pairplot(pd.DataFrame({'mu':output_samples_mu, 'std':output_samples_log_sigma}))\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mu:\n",
      "mean: 5.21838572800917 -- var: 0.05862244099483517\n",
      "Sigma:\n",
      "mean: 0.9365891251537497 -- var: 0.0014309596298132388\n"
     ]
    }
   ],
   "source": [
    "burnin = 10\n",
    "\n",
    "effective_samples_mu = output_samples_mu[burnin:]\n",
    "effective_samples_log_sigma = output_samples_log_sigma[burnin:]\n",
    "\n",
    "thinning = int(5)\n",
    "\n",
    "list_samp_mu = np.arange(0,len(effective_samples_mu),thinning)\n",
    "list_samp_log_sigma = np.arange(0,len(effective_samples_log_sigma),thinning)\n",
    "\n",
    "effective_samples_mu = [effective_samples_mu[i] for i in list_samp_mu]\n",
    "effective_samples_log_sigma = [effective_samples_log_sigma[i] for i in list_samp_log_sigma]\n",
    "\n",
    "print('Mu:')\n",
    "print('mean: {} -- var: {}'.format(np.mean(effective_samples_mu), np.var(effective_samples_mu)))\n",
    "print('Sigma:')\n",
    "print('mean: {} -- var: {}'.format(np.mean(np.exp(effective_samples_log_sigma)), \n",
    "                                   np.var(np.exp(effective_samples_log_sigma))))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Exercise.** How would you design Metropolis-Hastings for a linear model?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "x = norm.rvs(0,1,100)\n",
    "y = 5 + 8 * x + norm.rvs(0,5,100)\n",
    "\n",
    "init_param = [0,1,0.1]\n",
    "mu0 = 0\n",
    "sigma0 = 4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "def log_likelihood(param):\n",
    "    log_pdf = 0\n",
    "    for index,target in enumerate(y):\n",
    "        mu = param[0] + param[1] * x[index]\n",
    "        log_pdf += norm.logpdf(target,mu, param[2])                           \n",
    "    return log_pdf\n",
    "\n",
    "def log_prior(param):\n",
    "    log_prior = 0\n",
    "    for i in range(2):\n",
    "        log_prior += norm.logpdf(param[i], mu0, sigma0)\n",
    "    log_prior += uniform.logpdf(param[-1])\n",
    "    return log_prior\n",
    "\n",
    "def log_posterior(param):\n",
    "    return log_likelihood(param) + log_prior(param)\n",
    "\n",
    "def proposal(param, sigma):\n",
    "    new_theta = [0,0,0]\n",
    "    for i in range(len(param)):\n",
    "        new_theta[i] = norm.rvs(param[i], sigma, size = 1)\n",
    "    return(new_theta)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/mlorenzi/miniconda3/lib/python3.6/site-packages/ipykernel_launcher.py:24: RuntimeWarning: overflow encountered in exp\n",
      "/Users/mlorenzi/miniconda3/lib/python3.6/site-packages/numpy/core/fromnumeric.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray\n",
      "  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)\n"
     ]
    }
   ],
   "source": [
    "Niter = 5000\n",
    "\n",
    "# In this array we store the values of the Markov chain\n",
    "param_samples = []\n",
    "param_samples.append(init_param)\n",
    "\n",
    "# In this array we store the values of the acceptance ratios\n",
    "ratios = []\n",
    "\n",
    "# In this array we store the values of the parameters that are accepted\n",
    "output_samples = []\n",
    "\n",
    "for i in range(Niter):\n",
    "    # We compute the log-posterior at the current parameter\n",
    "    old_log_post = log_posterior(param_samples[i])\n",
    "    \n",
    "    # We compute a new proposal parameter\n",
    "    new_mu = proposal(param_samples[i], 0.1)\n",
    "    \n",
    "    # We compute the log-posterior at the new parameter\n",
    "    new_log_post = log_posterior(new_mu)\n",
    "\n",
    "    # We compute the MH-acceptance ratio    \n",
    "    ratio = np.min([1, np.exp(new_log_post - old_log_post)])\n",
    "    ratios.append(ratio)\n",
    "        \n",
    "    # We compute a random uniforma value to compare to the acceptance ratio \n",
    "    unif_samp = uniform.rvs(0, 1, size = 1)    \n",
    "    \n",
    "    # We accept of reject based on the MH-rule\n",
    "    if unif_samp < ratio:\n",
    "        param_samples.append(new_mu)\n",
    "        output_samples.append(new_mu)\n",
    "    else:\n",
    "        param_samples.append(param_samples[i])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We notice that already in this simple case, our MCMC leads to quite slow computations, and to a very low number of usable posterior samples. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The number of retained samples in the Markov chain is: 118\n"
     ]
    }
   ],
   "source": [
    "print('The number of retained samples in the Markov chain is: ' + str(len(output_samples)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This fact is related to the course of dimensionality: as soon as the dimension of our sample space increases (in this case the dimension is 3) the number of possible parameters configurations scales accordingly. Therefore, it will be more and more difficult to exaustively explore the parameter space and faithfully represent the  posterior distribution. A small number of sample may still be sufficient for estimating the mean, but can easily lead to unreliable estimation of higher order quantities, such as the variance. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "mean intercept: 3.753685019751646\n",
      "mean slope: 8.077101868186293\n",
      "mean sigma: 0.9976314441197162\n",
      "----------\n",
      "std intercept: 0.47575548593855377\n",
      "std slope: 0.21980501541626393\n",
      "std sigma: 0.0028991132980486943\n"
     ]
    }
   ],
   "source": [
    "samples_intercept = [output_samples[i][0] for i in range(len(output_samples))]\n",
    "samples_slope = [output_samples[i][1] for i in range(len(output_samples))]\n",
    "samples_sigma = [output_samples[i][2] for i in range(len(output_samples))]\n",
    "\n",
    "burnin = 100\n",
    "\n",
    "print('mean intercept: ' + str(np.mean(samples_intercept[burnin:])))\n",
    "print('mean slope: ' + str(np.mean(samples_slope[burnin:])))\n",
    "print('mean sigma: ' + str(np.mean(samples_sigma[burnin:])))\n",
    "print('----------')\n",
    "print('std intercept: ' + str(np.std(samples_intercept[burnin:])))\n",
    "print('std slope: ' + str(np.std(samples_slope[burnin:])))\n",
    "print('std sigma: ' + str(np.std(samples_sigma[burnin:])))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The estimation of the average parameters is in agreement with the Laplace approximation below, however our MCMC estimate of the standard deviation may be quite inaccurate."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/mlorenzi/miniconda3/lib/python3.6/site-packages/scipy/optimize/_numdiff.py:497: RuntimeWarning: invalid value encountered in subtract\n",
      "  df = fun(x) - f0\n",
      "/Users/mlorenzi/miniconda3/lib/python3.6/site-packages/scipy/optimize/_numdiff.py:497: RuntimeWarning: invalid value encountered in subtract\n",
      "  df = fun(x) - f0\n",
      "/Users/mlorenzi/miniconda3/lib/python3.6/site-packages/scipy/optimize/_numdiff.py:497: RuntimeWarning: invalid value encountered in subtract\n",
      "  df = fun(x) - f0\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      fun: 1235.596987275841\n",
      " hess_inv: array([[ 7.03878841e-03,  1.62278371e-03, -7.40248038e-05],\n",
      "       [ 1.62278371e-03,  9.63501227e-03, -2.81794810e-04],\n",
      "       [-7.40248038e-05, -2.81794810e-04,  1.41093972e-04]])\n",
      "      jac: array([   -8.96278381,  -100.07460022, -2174.48449707])\n",
      "  message: 'Desired error not necessarily achieved due to precision loss.'\n",
      "     nfev: 84\n",
      "      nit: 6\n",
      "     njev: 17\n",
      "   status: 2\n",
      "  success: False\n",
      "        x: array([4.10545624, 7.23936044, 0.99973546])\n",
      "           mean        SD      7.5%     92.5%\n",
      "a      4.105049  0.083206  3.986548  4.223453\n",
      "b      7.244104  0.100706  7.100045  7.385495\n",
      "sigma  0.999406  0.011719  0.982803  1.016188\n"
     ]
    }
   ],
   "source": [
    "data = pd.DataFrame({'x': x, 'y': y})\n",
    "\n",
    "expr = 'y ~ x'\n",
    "\n",
    "# Initializing the likelihood\n",
    "likelihood = 'gaussian'\n",
    "\n",
    "# Defining the prior with hyperparameters \n",
    "prior_a_mean = 0\n",
    "prior_a_sigma = 4\n",
    "prior_a = ['gaussian', [prior_a_mean, prior_a_sigma]]\n",
    "\n",
    "prior_b_mean = 0\n",
    "prior_b_sigma = 4\n",
    "prior_b = ['gaussian', [prior_b_mean, prior_b_sigma]]\n",
    "\n",
    "sigma_inf = 0\n",
    "sigma_sup = 1\n",
    "prior_sigma_unif = [sigma_inf, sigma_sup]\n",
    "prior_sigma = ['uniform', prior_sigma_unif]\n",
    "\n",
    "priors = [prior_a, prior_b, prior_sigma]\n",
    "\n",
    "solution_regression = laplace_solution_regression(expr, data, likelihood, priors)\n",
    "posterior_stats(solution_regression, ['a','b','sigma'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Hamiltonian Monte Carlo and Stan"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To overcome the problem of Metropolis-Hastings (and similar methods), in last years researchers focused on a novel approach to MCMC: Hamiltonian Monte Carlo (HMC). The basic idea of HMC consists in better exploring the target distribution by taking advantage of the geometric properties of the distribution itself. Conceptually, we define speed and direction at which we move across the parameters space from the differntial properties of the target distribution. This defines a set of dynamical systems that describe the trajectory to follow (Hamiltonian dynamics).\n",
    "\n",
    "Going deep into the details of HMC is beyond the scope of this course, while for a better introduction to the topic we will take a look to the paper *A Conceptual Introduction to Hamiltonian Monte Carlo* of Michael Betancourt. A nice illustration of HMC at work can also be found in http://arogozhnikov.github.io/2016/12/19/markov_chain_monte_carlo.html."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For the purpose of this course, we will use HMC through the implementation provided in Stan (https://mc-stan.org),  by using the Python interface of PyStan (https://pystan.readthedocs.io/en/latest/). The syntax of Stan (and PyStan) may seem a bit odd, especially for a Python user, and we will focus here on the basics."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "import stan\n",
    "import nest_asyncio as asyncio"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Generating ground Gaussian data for testing Stan\n",
    "Nobs = 200\n",
    "gt_mean = 5\n",
    "gt_sigma = 2\n",
    "\n",
    "obs = norm.rvs(gt_mean, gt_sigma, size = Nobs)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Using Stan for inference\n",
    "## A simple model to explore the Gaussian likelihood \n",
    "model_code = \"\"\"\n",
    "data {\n",
    "    int<lower=1> N;\n",
    "    real y[N];\n",
    "}\n",
    "parameters {\n",
    "    real mu;\n",
    "    real<lower=1e-4> ystd;\n",
    "}\n",
    "model {\n",
    "    y ~ normal(mu, ystd);\n",
    "}\n",
    "\"\"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "data {\n",
      "    int<lower=1> N;\n",
      "    real y[N];\n",
      "}\n",
      "parameters {\n",
      "    real mu;\n",
      "    real<lower=1e-4> ystd;\n",
      "}\n",
      "model {\n",
      "    y ~ normal(mu, ystd);\n",
      "}\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(model_code)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[36mBuilding:\u001b[0m 0.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 0.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 0.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 0.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 0.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 0.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 0.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 0.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.4s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:28:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/operator_addition.hpp:6:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_matching_dims.hpp:33:8: warning: unused variable 'error' [-Wunused-variable]\n",
      "  bool error = false;\n",
      "       ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_matching_dims.hpp:57:23: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<int, std::__1::allocator<int> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "    for (int i = 0; i < y1_d.size(); i++) {\n",
      "                    ~ ^ ~~~~~~~~~~~\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.7s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:53:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/profiling.hpp:9:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err.hpp:50:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/hmm_check.hpp:33:7: warning: unused variable 'n_transitions' [-Wunused-variable]\n",
      "  int n_transitions = log_omegas.cols() - 1;\n",
      "      ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.7s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:26:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/beta.hpp:70:32: warning: lambda capture 'b' is not used [-Wunused-lambda-capture]\n",
      "                           [a, b, digamma_ab](auto& vi) mutable {\n",
      "                             ~~^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/beta.hpp:96:39: warning: lambda capture 'a' is not used [-Wunused-lambda-capture]\n",
      "  return make_callback_var(beta_val, [a, b, digamma_ab](auto& vi) mutable {\n",
      "                                      ^~\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.3s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:54:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/elt_multiply.hpp:9:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/multiply.hpp:7:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/fun.hpp:120:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/fun/gp_matern52_cov.hpp:304:10: warning: unused variable 'neg_root_5' [-Wunused-variable]\n",
      "  double neg_root_5 = -root_5;\n",
      "         ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:54:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/elt_multiply.hpp:9:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/multiply.hpp:7:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/fun.hpp:185:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/fun/log_mix.hpp:86:13: warning: unused variable 'N' [-Wunused-variable]\n",
      "  const int N = stan::math::size(theta);\n",
      "            ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.1s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:121:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/matrix_power.hpp:52:24: warning: comparison of integers of different signs: 'size_t' (aka 'unsigned long') and 'const int' [-Wsign-compare]\n",
      "  for (size_t i = 2; i <= n; ++i) {\n",
      "                     ~ ^  ~\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:132:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/ordered_constrain.hpp:40:30: warning: comparison of integers of different signs: 'Eigen::Index' (aka 'long') and 'size_t' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (Eigen::Index n = 1; n < N; ++n) {\n",
      "                           ~ ^ ~\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:135:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/positive_ordered_constrain.hpp:40:21: warning: comparison of integers of different signs: 'int' and 'size_t' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (int n = 1; n < N; ++n) {\n",
      "                  ~ ^ ~\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.3s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:153:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/simplex_constrain.hpp:40:30: warning: comparison of integers of different signs: 'Eigen::Index' (aka 'long') and 'size_t' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (Eigen::Index k = 0; k < N; ++k) {\n",
      "                           ~ ^ ~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/simplex_constrain.hpp:94:30: warning: comparison of integers of different signs: 'Eigen::Index' (aka 'long') and 'size_t' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (Eigen::Index k = 0; k < N; ++k) {\n",
      "                           ~ ^ ~\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.5s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/operands_and_partials.hpp:29:1: warning: 'ops_partials_edge' defined as a class template here but previously declared as a struct template; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]\n",
      "class ops_partials_edge<double, var> {\n",
      "^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/functor/operands_and_partials.hpp:21:1: note: did you mean class here?\n",
      "struct ops_partials_edge;\n",
      "^~~~~~\n",
      "class\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/operands_and_partials.hpp:177:1: warning: 'ops_partials_edge' defined as a class template here but previously declared as a struct template; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]\n",
      "class ops_partials_edge<double, std::vector<var>> {\n",
      "^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/functor/operands_and_partials.hpp:21:1: note: did you mean class here?\n",
      "struct ops_partials_edge;\n",
      "^~~~~~\n",
      "class\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/operands_and_partials.hpp:199:1: warning: 'ops_partials_edge' defined as a class template here but previously declared as a struct template; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]\n",
      "class ops_partials_edge<double, Op, require_eigen_st<is_var, Op>> {\n",
      "^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/functor/operands_and_partials.hpp:21:1: note: did you mean class here?\n",
      "struct ops_partials_edge;\n",
      "^~~~~~\n",
      "class\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/operands_and_partials.hpp:219:1: warning: 'ops_partials_edge' defined as a class template here but previously declared as a struct template; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]\n",
      "class ops_partials_edge<double, var_value<Op>, require_eigen_t<Op>> {\n",
      "^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/functor/operands_and_partials.hpp:21:1: note: did you mean class here?\n",
      "struct ops_partials_edge;\n",
      "^~~~~~\n",
      "class\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/operands_and_partials.hpp:245:1: warning: 'ops_partials_edge' defined as a class template here but previously declared as a struct template; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]\n",
      "class ops_partials_edge<double, std::vector<Eigen::Matrix<var, R, C>>> {\n",
      "^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/functor/operands_and_partials.hpp:21:1: note: did you mean class here?\n",
      "struct ops_partials_edge;\n",
      "^~~~~~\n",
      "class\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/operands_and_partials.hpp:274:1: warning: 'ops_partials_edge' defined as a class template here but previously declared as a struct template; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]\n",
      "class ops_partials_edge<double, std::vector<std::vector<var>>> {\n",
      "^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/functor/operands_and_partials.hpp:21:1: note: did you mean class here?\n",
      "struct ops_partials_edge;\n",
      "^~~~~~\n",
      "class\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/operands_and_partials.hpp:300:1: warning: 'ops_partials_edge' defined as a class template here but previously declared as a struct template; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]\n",
      "class ops_partials_edge<double, std::vector<var_value<Op>>,\n",
      "^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/functor/operands_and_partials.hpp:21:1: note: did you mean class here?\n",
      "struct ops_partials_edge;\n",
      "^~~~~~\n",
      "class\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:30:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/finite_diff_hessian_auto.hpp:61:24: warning: comparison of integers of different signs: 'size_t' (aka 'unsigned long') and 'int' [-Wsign-compare]\n",
      "  for (size_t i = 0; i < d; ++i) {\n",
      "                     ~ ^ ~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/finite_diff_hessian_auto.hpp:69:24: warning: comparison of integers of different signs: 'size_t' (aka 'unsigned long') and 'int' [-Wsign-compare]\n",
      "  for (size_t i = 0; i < d; ++i) {\n",
      "                     ~ ^ ~\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:87:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/double_exponential_cdf.hpp:77:10: warning: unused variable 'N' [-Wunused-variable]\n",
      "  size_t N = max_size(y, mu, sigma);\n",
      "         ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.8s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:128:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/gaussian_dlm_obs_rng.hpp:41:21: warning: comparison of integers of different signs: 'int' and 'size_t' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (int i = 0; i < M; i++) {\n",
      "                  ~ ^ ~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/gaussian_dlm_obs_rng.hpp:98:7: warning: unused variable 'n' [-Wunused-variable]\n",
      "  int n = G.rows();  // number of states\n",
      "      ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:139:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/hmm_marginal.hpp:26:13: warning: unused variable 'n_states' [-Wunused-variable]\n",
      "  const int n_states = omegas.rows();\n",
      "            ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.4s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:307:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/skew_double_exponential_ccdf_log.hpp:5:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/skew_double_exponential_lccdf.hpp:78:13: warning: unused variable 'size_sigma' [-Wunused-variable]\n",
      "  const int size_sigma = stan::math::size(sigma);\n",
      "            ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:308:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/skew_double_exponential_cdf.hpp:80:13: warning: unused variable 'size_sigma' [-Wunused-variable]\n",
      "  const int size_sigma = stan::math::size(sigma);\n",
      "            ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:309:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/skew_double_exponential_cdf_log.hpp:5:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/skew_double_exponential_lcdf.hpp:81:13: warning: unused variable 'size_sigma' [-Wunused-variable]\n",
      "  const int size_sigma = stan::math::size(sigma);\n",
      "            ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:330:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/std_normal_rng.hpp:23:22: warning: unused variable 'function' [-Wunused-variable]\n",
      "  static const char* function = \"std_normal_rng\";\n",
      "                     ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:350:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/von_mises_cdf.hpp:72:10: warning: unused variable 'ck' [-Wunused-variable]\n",
      "  double ck = 50;\n",
      "         ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:7:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/io/dump.hpp:694:52: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<double, std::__1::allocator<double> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "      for (comp_iter = 0, real_iter = 0; real_iter < val_r->second.first.size();\n",
      "                                         ~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/io/dump.hpp:707:24: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<int, std::__1::allocator<int> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "             real_iter < val_i->second.first.size();\n",
      "             ~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:8:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/io/deserializer.hpp:337:28: warning: comparison of integers of different signs: 'size_t' (aka 'unsigned long') and 'Eigen::Index' (aka 'long') [-Wsign-compare]\n",
      "      for (size_t i = 0; i < m; ++i) {\n",
      "                         ~ ^ ~\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.7s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:17:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing.hpp:6:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/assign.hpp:270:21: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<int, std::__1::allocator<int> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (int i = 0; i < idx.ns_.size(); ++i) {\n",
      "                  ~ ^ ~~~~~~~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/assign.hpp:538:21: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<int, std::__1::allocator<int> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (int i = 0; i < col_idx.ns_.size(); ++i) {\n",
      "                  ~ ^ ~~~~~~~~~~~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/assign.hpp:637:21: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<int, std::__1::allocator<int> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (int j = 0; j < col_idx.ns_.size(); ++j) {\n",
      "                  ~ ^ ~~~~~~~~~~~~~~~~~~\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:17:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing.hpp:9:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:7:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue.hpp:266:21: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<int, std::__1::allocator<int> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (int i = 0; i < idx.ns_.size(); ++i) {\n",
      "                  ~ ^ ~~~~~~~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue.hpp:569:13: warning: unused variable 'cols' [-Wunused-variable]\n",
      "  const int cols = rvalue_index_size(col_idx, x_ref.cols());\n",
      "            ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue.hpp:571:21: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<int, std::__1::allocator<int> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (int j = 0; j < col_idx.ns_.size(); ++j) {\n",
      "                  ~ ^ ~~~~~~~~~~~~~~~~~~\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:17:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing.hpp:9:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:66:21: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "  for (int i = 0; i < ret_size; ++i) {\n",
      "                  ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:102:21: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "  for (int i = 0; i < ret_rows; ++i) {\n",
      "                  ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:142:21: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "  for (int j = 0; j < ret_size; ++j) {\n",
      "                  ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:183:21: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "  for (int i = 0; i < ret_size; ++i) {\n",
      "                  ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:222:22: warning: unused variable 'x_cols' [-Wunused-variable]\n",
      "  const Eigen::Index x_cols = x.cols();\n",
      "                     ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:227:21: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "  for (int i = 0; i < ret_rows; ++i) {\n",
      "                  ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:231:21: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "  for (int j = 0; j < ret_cols; ++j) {\n",
      "                  ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:235:23: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "    for (int i = 0; i < ret_rows; ++i) {\n",
      "                    ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:278:21: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "  for (int j = 0; j < ret_cols; ++j) {\n",
      "                  ~ ^ ~~~~~~~~\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.1s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:29:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/operator_divide_equal.hpp:5:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/operator_division.hpp:14:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/operator_subtraction.hpp:84:21: warning: lambda capture 'b' is not used [-Wunused-lambda-capture]\n",
      "      [avi = a.vi_, b](const auto& vi) mutable { avi->adj_ += vi.adj_; });\n",
      "                    ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/operator_minus_equal.hpp:24:16: note: in instantiation of function template specialization 'stan::math::operator-<double, nullptr>' requested here\n",
      "  vi_ = (*this - b).vi_;\n",
      "               ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/core/complex_base.hpp:136:9: note: in instantiation of member function 'stan::math::var_value<double, void>::operator-=' requested here\n",
      "    re_ -= x;\n",
      "        ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/core/operator_subtraction.hpp:24:5: note: in instantiation of function template specialization 'stan::math::complex_base<stan::math::var_value<double, void> >::operator-=<int>' requested here\n",
      "  y -= rhs;\n",
      "    ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/core/operator_subtraction.hpp:55:20: note: in instantiation of function template specialization 'stan::math::internal::complex_subtract<std::__1::complex<stan::math::var>, int>' requested here\n",
      "  return internal::complex_subtract(x, y);\n",
      "                   ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/fun/acosh.hpp:105:31: note: in instantiation of function template specialization 'stan::math::operator-<stan::math::var_value<double, void>, int>' requested here\n",
      "  auto y = log(z + sqrt(z * z - 1));\n",
      "                              ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/acosh.hpp:94:32: note: in instantiation of function template specialization 'stan::math::internal::complex_acosh<stan::math::var_value<double, void> >' requested here\n",
      "  return stan::math::internal::complex_acosh(z);\n",
      "                               ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.0s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/operator_addition.hpp:80:21: warning: lambda capture 'b' is not used [-Wunused-lambda-capture]\n",
      "      [avi = a.vi_, b](const auto& vi) mutable { avi->adj_ += vi.adj_; });\n",
      "                    ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/grad_inc_beta.hpp:45:43: note: in instantiation of function template specialization 'stan::math::operator+<int, nullptr>' requested here\n",
      "    grad_2F1(dF1, dF2, a + b, var(1.0), a + 1, z);\n",
      "                                          ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/operator_addition.hpp:80:21: warning: lambda capture 'b' is not used [-Wunused-lambda-capture]\n",
      "      [avi = a.vi_, b](const auto& vi) mutable { avi->adj_ += vi.adj_; });\n",
      "                    ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/fun/trigamma.hpp:63:31: note: in instantiation of function template specialization 'stan::math::operator+<double, nullptr>' requested here\n",
      "    value = -trigamma_impl(-x + 1.0) + square(pi() / sin(-pi() * x));\n",
      "                              ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/trigamma.hpp:23:44: note: in instantiation of function template specialization 'stan::math::trigamma_impl<stan::math::var_value<double, void> >' requested here\n",
      "inline var trigamma(const var& u) { return trigamma_impl(u); }\n",
      "                                           ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.8s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:53:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/profiling.hpp:9:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_2F1_converges.hpp:5:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_not_nan.hpp:5:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/elementwise_check.hpp:153:24: warning: comparison of integers of different signs: 'size_t' (aka 'unsigned long') and 'Eigen::EigenBase::Index' (aka 'long') [-Wsign-compare]\n",
      "  for (size_t i = 0; i < x.size(); i++) {\n",
      "                     ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_not_nan.hpp:28:3: note: in instantiation of function template specialization 'stan::math::elementwise_check<(lambda at /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_not_nan.hpp:28:21), Eigen::ArrayWrapper<Eigen::Map<const Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >, nullptr, nullptr>' requested here\n",
      "  elementwise_check([](double x) { return !std::isnan(x); }, function, name, y,\n",
      "  ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/normal_lpdf.hpp:62:3: note: in instantiation of function template specialization 'stan::math::check_not_nan<Eigen::ArrayWrapper<Eigen::Map<const Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > > >' requested here\n",
      "  check_not_nan(function, \"Random variable\", y_val);\n",
      "  ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:120:24: note: in instantiation of function template specialization 'stan::math::normal_lpdf<false, std::__1::vector<double, std::__1::allocator<double> >, double, double, nullptr>' requested here\n",
      "        lp_accum__.add(normal_lpdf<propto__>(y, mu, ystd));\n",
      "                       ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:316:14: note: in instantiation of function template specialization 'model_p3ybsjhz_namespace::model_p3ybsjhz::log_prob_impl<false, false, Eigen::Matrix<double, -1, 1, 0, -1, 1>, Eigen::Matrix<int, -1, 1, 0, -1, 1>, nullptr, nullptr>' requested here\n",
      "      return log_prob_impl<propto__, jacobian__>(params_r, params_i, pstream);\n",
      "             ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_base_crtp.hpp:90:50: note: in instantiation of function template specialization 'model_p3ybsjhz_namespace::model_p3ybsjhz::log_prob<false, false, double>' requested here\n",
      "    return static_cast<const M*>(this)->template log_prob<false, false, double>(\n",
      "                                                 ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:38:3: note: in instantiation of member function 'stan::model::model_base_crtp<model_p3ybsjhz_namespace::model_p3ybsjhz>::log_prob' requested here\n",
      "  ~model_p3ybsjhz() { }\n",
      "  ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:94:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/lb_constrain.hpp:114:33: warning: lambda capture 'lp' is not used [-Wunused-lambda-capture]\n",
      "                               [lp, arena_lb = var(lb)](auto& vi) mutable {\n",
      "                                ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/io/deserializer.hpp:386:26: note: in instantiation of function template specialization 'stan::math::lb_constrain<stan::math::var_value<double, void>, double, nullptr, nullptr>' requested here\n",
      "      return stan::math::lb_constrain(this->read<Ret>(sizes...), lb, lp);\n",
      "                         ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:116:28: note: in instantiation of function template specialization 'stan::io::deserializer<stan::math::var_value<double, void> >::read_constrain_lb<stan::math::var_value<double, void>, false, double, stan::math::var_value<double, void>>' requested here\n",
      "      ystd = in__.template read_constrain_lb<local_scalar_t__, jacobian__>(\n",
      "                           ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:316:14: note: in instantiation of function template specialization 'model_p3ybsjhz_namespace::model_p3ybsjhz::log_prob_impl<false, false, Eigen::Matrix<stan::math::var_value<double, void>, -1, 1, 0, -1, 1>, Eigen::Matrix<int, -1, 1, 0, -1, 1>, nullptr, nullptr>' requested here\n",
      "      return log_prob_impl<propto__, jacobian__>(params_r, params_i, pstream);\n",
      "             ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_base_crtp.hpp:95:50: note: in instantiation of function template specialization 'model_p3ybsjhz_namespace::model_p3ybsjhz::log_prob<false, false, stan::math::var_value<double, void> >' requested here\n",
      "    return static_cast<const M*>(this)->template log_prob<false, false>(theta,\n",
      "                                                 ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:38:3: note: in instantiation of member function 'stan::model::model_base_crtp<model_p3ybsjhz_namespace::model_p3ybsjhz>::log_prob' requested here\n",
      "  ~model_p3ybsjhz() { }\n",
      "  ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:58:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/set_zero_all_adjoints.hpp:14:13: warning: 'static' function 'set_zero_all_adjoints' declared in header file should be declared 'static inline' [-Wunneeded-internal-declaration]\n",
      "static void set_zero_all_adjoints() {\n",
      "            ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:17:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing.hpp:5:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/assign_varmat.hpp:400:9: warning: unused type alias 'pair_type' [-Wunused-local-typedef]\n",
      "  using pair_type = std::pair<int, arena_vec>;\n",
      "        ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 14.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 14.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 14.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 14.3s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "55 warnings generated.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j0<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j0<long double>(long double)::Q2' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j0<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j0<long double>(long double)::P2' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j0<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j0<long double>(long double)::Q1' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j0<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j0<long double>(long double)::P1' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::Q2' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::P2' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::Q1' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::P1' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::QS' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::PS' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::QC' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::PC' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::igamma_temme_large<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&, boost::integral_constant<int, 64> const*)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'boost::math::tools::promote_args<long double, float, float, float, float, float>::type boost::math::log1pmx<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&)::function' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::igamma_temme_large<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&, boost::integral_constant<int, 64> const*)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'boost::math::tools::promote_args<long double, float, float, float, float, float>::type boost::math::log1pmx<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&)::function' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::igamma_temme_large<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&, boost::integral_constant<int, 64> const*)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'boost::math::tools::promote_args<long double, float, float, float, float, float>::type boost::math::log1pmx<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&)::function' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'void boost::throw_exception<boost::math::evaluation_error>(boost::math::evaluation_error const&)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'typeinfo for boost::wrapexcept<boost::math::evaluation_error>' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'boost::wrapexcept<boost::math::evaluation_error>::rethrow() const' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'typeinfo for boost::wrapexcept<boost::math::evaluation_error>' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)::Q' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)::P' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)::Q' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)::P' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.31' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_j0_initializer<long double>::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.31' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_j0_initializer<long double>::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.32' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_j1_initializer<long double>::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.32' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_j1_initializer<long double>::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.33' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::lanczos::lanczos_initializer<boost::math::lanczos::lanczos17m64, long double>::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.33' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::lanczos::lanczos17m64::lanczos_sum_expG_scaled<long double>(long double const&)::denom' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.33' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::lanczos::lanczos17m64::lanczos_sum_expG_scaled<long double>(long double const&)::num' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.33' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::lanczos::lanczos17m64::lanczos_sum<long double>(long double const&)::denom' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.33' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::lanczos::lanczos17m64::lanczos_sum<long double>(long double const&)::num' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.33' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::lanczos::lanczos_initializer<boost::math::lanczos::lanczos17m64, long double>::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.34' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::lgamma_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.34' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::lgamma_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.35' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_y0_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.35' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_y0_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.36' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_y1_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.36' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_y1<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&)::Q1' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.36' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_y1<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&)::P1' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.36' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_y1_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.37' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::digamma_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.37' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::digamma_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.38' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::igamma_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.38' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::igamma_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.39' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::lgamma_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.39' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::lgamma_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.40' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::erf_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 53> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.40' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::erf_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 53> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.41' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::expm1_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 53> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.41' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::expm1_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 53> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.42' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::igamma_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.42' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::igamma_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.43' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::erf_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.43' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::erf_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.44' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::expm1_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.44' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::expm1_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.45' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_i0_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.45' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_i0_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.46' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_i1_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.46' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_i1_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.47' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::owens_t_initializer<double, boost::math::policies::policy<boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.47' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::owens_t_initializer<double, boost::math::policies::policy<boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.48' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_k0_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.48' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_k0_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.49' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_k1_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.49' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_k1_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/p3ybsjhz/model_p3ybsjhz.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[32mBuilding:\u001b[0m 14.4s, done.\n",
      "\u001b[36mMessages from \u001b[0m\u001b[36;1mstanc\u001b[0m\u001b[36m:\u001b[0m\n",
      "Warning: The parameter ystd has no priors.\n",
      "Warning: The parameter mu has no priors.\n"
     ]
    }
   ],
   "source": [
    "seed = 123\n",
    "\n",
    "posterior = stan.build(model_code, data=dict(y=obs, N=Nobs), random_seed=seed)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[36mSampling:\u001b[0m   0%\n",
      "\u001b[1A\u001b[0J\u001b[36mSampling:\u001b[0m  25% (2000/8000)\n",
      "\u001b[1A\u001b[0J\u001b[36mSampling:\u001b[0m  50% (4000/8000)\n",
      "\u001b[1A\u001b[0J\u001b[36mSampling:\u001b[0m  75% (6000/8000)\n",
      "\u001b[1A\u001b[0J\u001b[36mSampling:\u001b[0m 100% (8000/8000)\n",
      "\u001b[1A\u001b[0J\u001b[32mSampling:\u001b[0m 100% (8000/8000), done.\n",
      "\u001b[36mMessages received during sampling:\u001b[0m\n",
      "  Gradient evaluation took 3e-05 seconds\n",
      "  1000 transitions using 10 leapfrog steps per transition would take 0.3 seconds.\n",
      "  Adjust your expectations accordingly!\n",
      "  Gradient evaluation took 3.1e-05 seconds\n",
      "  1000 transitions using 10 leapfrog steps per transition would take 0.31 seconds.\n",
      "  Adjust your expectations accordingly!\n",
      "  Gradient evaluation took 2.4e-05 seconds\n",
      "  1000 transitions using 10 leapfrog steps per transition would take 0.24 seconds.\n",
      "  Adjust your expectations accordingly!\n",
      "  Gradient evaluation took 1.3e-05 seconds\n",
      "  1000 transitions using 10 leapfrog steps per transition would take 0.13 seconds.\n",
      "  Adjust your expectations accordingly!\n"
     ]
    }
   ],
   "source": [
    "fit = posterior.sample(num_chains=4, num_samples=1000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                count        mean       std         min         25%  \\\n",
      "parameters                                                            \n",
      "lp__           4000.0 -252.675953  0.996790 -259.159553 -253.069144   \n",
      "accept_stat__  4000.0    0.909621  0.113272    0.241554    0.866266   \n",
      "stepsize__     4000.0    0.878199  0.067212    0.774349    0.841537   \n",
      "treedepth__    4000.0    1.876750  0.527853    1.000000    2.000000   \n",
      "n_leapfrog__   4000.0    3.544000  1.715459    1.000000    3.000000   \n",
      "divergent__    4000.0    0.000000  0.000000    0.000000    0.000000   \n",
      "energy__       4000.0  253.691224  1.428490  251.687227  252.626701   \n",
      "mu             4000.0    5.030728  0.152230    4.482118    4.929301   \n",
      "ystd           4000.0    2.159935  0.109495    1.825482    2.085308   \n",
      "\n",
      "                      50%         75%         max  \n",
      "parameters                                         \n",
      "lp__          -252.358484 -251.961227 -251.676518  \n",
      "accept_stat__    0.953593    0.994701    1.000000  \n",
      "stepsize__       0.897037    0.933699    0.944372  \n",
      "treedepth__      2.000000    2.000000    3.000000  \n",
      "n_leapfrog__     3.000000    3.000000    7.000000  \n",
      "divergent__      0.000000    0.000000    0.000000  \n",
      "energy__       253.370985  254.407608  262.496605  \n",
      "mu               5.027441    5.132678    5.612875  \n",
      "ystd             2.152310    2.226600    2.605298  \n"
     ]
    }
   ],
   "source": [
    "df = fit.to_frame()\n",
    "print(df.describe().T)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The report looks very similar to the ones we are already used to get with our previous inference methods (in addition it provides also statistics for the log-posterior, here called *lp__*). There are two additional columns here, *n_eff* and *Rhat*, which are diagnostics for our HMC chain. *n_eff* is an approximation of how many independent samples you managed to obtain while *Rhat* is an estimate of the convergence of the Markov chain. If it's 1, that's a good sign, otherwise this may point to some serious problems with our model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Getting the estimated parameters\n",
    "est_mu = fit['mu'][0]\n",
    "est_std = fit['ystd'][0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 6 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "\n",
    "g = sns.pairplot(pd.DataFrame({'mu':est_mu, 'std':est_std}))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'est_mu')"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(est_mu)\n",
    "plt.title('est_mu')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We now explore the more complicated case of linear regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [],
   "source": [
    "Nobs = 100\n",
    "\n",
    "x = norm.rvs(0,1,Nobs)\n",
    "y = 5 + 8 * x + norm.rvs(0,5,Nobs)\n",
    "\n",
    "init_param = [0,1,0.1]\n",
    "mu0 = 0\n",
    "sigma0 = 4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [],
   "source": [
    "linear_model_1d_code = \"\"\"\n",
    "data {\n",
    "    int<lower=1> N;\n",
    "    vector[N] y;\n",
    "    vector[N] x;\n",
    "}\n",
    "parameters {\n",
    "    real a;\n",
    "    real b;\n",
    "    real<lower=1e-4> sigma;\n",
    "}\n",
    "transformed parameters {\n",
    "    vector[N] mu;\n",
    "    mu = a + b * x; \n",
    "}\n",
    "model {\n",
    "\n",
    "  target += uniform_lpdf(sigma | 0, 10);       // prior log-density\n",
    "  target += normal_lpdf(a | 0, 4);       // prior log-density\n",
    "  target += normal_lpdf(b | 0, 4);       // prior log-density\n",
    "  target += normal_lpdf(y | mu, sigma); // log-likelihood\n",
    "\n",
    "}\n",
    "\"\"\"\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[36mBuilding:\u001b[0m 0.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 0.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 0.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 0.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 0.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 0.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 0.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 0.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.0s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:28:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/operator_addition.hpp:6:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_matching_dims.hpp:33:8: warning: unused variable 'error' [-Wunused-variable]\n",
      "  bool error = false;\n",
      "       ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_matching_dims.hpp:57:23: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<int, std::__1::allocator<int> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "    for (int i = 0; i < y1_d.size(); i++) {\n",
      "                    ~ ^ ~~~~~~~~~~~\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.3s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:53:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/profiling.hpp:9:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err.hpp:50:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/hmm_check.hpp:33:7: warning: unused variable 'n_transitions' [-Wunused-variable]\n",
      "  int n_transitions = log_omegas.cols() - 1;\n",
      "      ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.3s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:26:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/beta.hpp:70:32: warning: lambda capture 'b' is not used [-Wunused-lambda-capture]\n",
      "                           [a, b, digamma_ab](auto& vi) mutable {\n",
      "                             ~~^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/beta.hpp:96:39: warning: lambda capture 'a' is not used [-Wunused-lambda-capture]\n",
      "  return make_callback_var(beta_val, [a, b, digamma_ab](auto& vi) mutable {\n",
      "                                      ^~\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.8s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:54:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/elt_multiply.hpp:9:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/multiply.hpp:7:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/fun.hpp:120:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/fun/gp_matern52_cov.hpp:304:10: warning: unused variable 'neg_root_5' [-Wunused-variable]\n",
      "  double neg_root_5 = -root_5;\n",
      "         ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:54:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/elt_multiply.hpp:9:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/multiply.hpp:7:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/fun.hpp:185:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/fun/log_mix.hpp:86:13: warning: unused variable 'N' [-Wunused-variable]\n",
      "  const int N = stan::math::size(theta);\n",
      "            ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.5s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:121:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/matrix_power.hpp:52:24: warning: comparison of integers of different signs: 'size_t' (aka 'unsigned long') and 'const int' [-Wsign-compare]\n",
      "  for (size_t i = 2; i <= n; ++i) {\n",
      "                     ~ ^  ~\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:132:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/ordered_constrain.hpp:40:30: warning: comparison of integers of different signs: 'Eigen::Index' (aka 'long') and 'size_t' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (Eigen::Index n = 1; n < N; ++n) {\n",
      "                           ~ ^ ~\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:135:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/positive_ordered_constrain.hpp:40:21: warning: comparison of integers of different signs: 'int' and 'size_t' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (int n = 1; n < N; ++n) {\n",
      "                  ~ ^ ~\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.7s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:153:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/simplex_constrain.hpp:40:30: warning: comparison of integers of different signs: 'Eigen::Index' (aka 'long') and 'size_t' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (Eigen::Index k = 0; k < N; ++k) {\n",
      "                           ~ ^ ~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/simplex_constrain.hpp:94:30: warning: comparison of integers of different signs: 'Eigen::Index' (aka 'long') and 'size_t' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (Eigen::Index k = 0; k < N; ++k) {\n",
      "                           ~ ^ ~\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.7s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/operands_and_partials.hpp:29:1: warning: 'ops_partials_edge' defined as a class template here but previously declared as a struct template; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]\n",
      "class ops_partials_edge<double, var> {\n",
      "^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/functor/operands_and_partials.hpp:21:1: note: did you mean class here?\n",
      "struct ops_partials_edge;\n",
      "^~~~~~\n",
      "class\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/operands_and_partials.hpp:177:1: warning: 'ops_partials_edge' defined as a class template here but previously declared as a struct template; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]\n",
      "class ops_partials_edge<double, std::vector<var>> {\n",
      "^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/functor/operands_and_partials.hpp:21:1: note: did you mean class here?\n",
      "struct ops_partials_edge;\n",
      "^~~~~~\n",
      "class\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/operands_and_partials.hpp:199:1: warning: 'ops_partials_edge' defined as a class template here but previously declared as a struct template; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]\n",
      "class ops_partials_edge<double, Op, require_eigen_st<is_var, Op>> {\n",
      "^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/functor/operands_and_partials.hpp:21:1: note: did you mean class here?\n",
      "struct ops_partials_edge;\n",
      "^~~~~~\n",
      "class\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/operands_and_partials.hpp:219:1: warning: 'ops_partials_edge' defined as a class template here but previously declared as a struct template; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]\n",
      "class ops_partials_edge<double, var_value<Op>, require_eigen_t<Op>> {\n",
      "^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/functor/operands_and_partials.hpp:21:1: note: did you mean class here?\n",
      "struct ops_partials_edge;\n",
      "^~~~~~\n",
      "class\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/operands_and_partials.hpp:245:1: warning: 'ops_partials_edge' defined as a class template here but previously declared as a struct template; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]\n",
      "class ops_partials_edge<double, std::vector<Eigen::Matrix<var, R, C>>> {\n",
      "^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/functor/operands_and_partials.hpp:21:1: note: did you mean class here?\n",
      "struct ops_partials_edge;\n",
      "^~~~~~\n",
      "class\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/operands_and_partials.hpp:274:1: warning: 'ops_partials_edge' defined as a class template here but previously declared as a struct template; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]\n",
      "class ops_partials_edge<double, std::vector<std::vector<var>>> {\n",
      "^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/functor/operands_and_partials.hpp:21:1: note: did you mean class here?\n",
      "struct ops_partials_edge;\n",
      "^~~~~~\n",
      "class\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/operands_and_partials.hpp:300:1: warning: 'ops_partials_edge' defined as a class template here but previously declared as a struct template; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]\n",
      "class ops_partials_edge<double, std::vector<var_value<Op>>,\n",
      "^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/functor/operands_and_partials.hpp:21:1: note: did you mean class here?\n",
      "struct ops_partials_edge;\n",
      "^~~~~~\n",
      "class\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:30:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/finite_diff_hessian_auto.hpp:61:24: warning: comparison of integers of different signs: 'size_t' (aka 'unsigned long') and 'int' [-Wsign-compare]\n",
      "  for (size_t i = 0; i < d; ++i) {\n",
      "                     ~ ^ ~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/finite_diff_hessian_auto.hpp:69:24: warning: comparison of integers of different signs: 'size_t' (aka 'unsigned long') and 'int' [-Wsign-compare]\n",
      "  for (size_t i = 0; i < d; ++i) {\n",
      "                     ~ ^ ~\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:87:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/double_exponential_cdf.hpp:77:10: warning: unused variable 'N' [-Wunused-variable]\n",
      "  size_t N = max_size(y, mu, sigma);\n",
      "         ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:128:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/gaussian_dlm_obs_rng.hpp:41:21: warning: comparison of integers of different signs: 'int' and 'size_t' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (int i = 0; i < M; i++) {\n",
      "                  ~ ^ ~\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.0s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/gaussian_dlm_obs_rng.hpp:98:7: warning: unused variable 'n' [-Wunused-variable]\n",
      "  int n = G.rows();  // number of states\n",
      "      ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:139:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/hmm_marginal.hpp:26:13: warning: unused variable 'n_states' [-Wunused-variable]\n",
      "  const int n_states = omegas.rows();\n",
      "            ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.6s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:307:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/skew_double_exponential_ccdf_log.hpp:5:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/skew_double_exponential_lccdf.hpp:78:13: warning: unused variable 'size_sigma' [-Wunused-variable]\n",
      "  const int size_sigma = stan::math::size(sigma);\n",
      "            ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:308:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/skew_double_exponential_cdf.hpp:80:13: warning: unused variable 'size_sigma' [-Wunused-variable]\n",
      "  const int size_sigma = stan::math::size(sigma);\n",
      "            ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:309:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/skew_double_exponential_cdf_log.hpp:5:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/skew_double_exponential_lcdf.hpp:81:13: warning: unused variable 'size_sigma' [-Wunused-variable]\n",
      "  const int size_sigma = stan::math::size(sigma);\n",
      "            ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:330:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/std_normal_rng.hpp:23:22: warning: unused variable 'function' [-Wunused-variable]\n",
      "  static const char* function = \"std_normal_rng\";\n",
      "                     ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:350:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/von_mises_cdf.hpp:72:10: warning: unused variable 'ck' [-Wunused-variable]\n",
      "  double ck = 50;\n",
      "         ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:7:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/io/dump.hpp:694:52: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<double, std::__1::allocator<double> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "      for (comp_iter = 0, real_iter = 0; real_iter < val_r->second.first.size();\n",
      "                                         ~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/io/dump.hpp:707:24: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<int, std::__1::allocator<int> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "             real_iter < val_i->second.first.size();\n",
      "             ~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:8:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/io/deserializer.hpp:337:28: warning: comparison of integers of different signs: 'size_t' (aka 'unsigned long') and 'Eigen::Index' (aka 'long') [-Wsign-compare]\n",
      "      for (size_t i = 0; i < m; ++i) {\n",
      "                         ~ ^ ~\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.9s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:17:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing.hpp:6:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/assign.hpp:270:21: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<int, std::__1::allocator<int> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (int i = 0; i < idx.ns_.size(); ++i) {\n",
      "                  ~ ^ ~~~~~~~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/assign.hpp:538:21: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<int, std::__1::allocator<int> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (int i = 0; i < col_idx.ns_.size(); ++i) {\n",
      "                  ~ ^ ~~~~~~~~~~~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/assign.hpp:637:21: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<int, std::__1::allocator<int> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (int j = 0; j < col_idx.ns_.size(); ++j) {\n",
      "                  ~ ^ ~~~~~~~~~~~~~~~~~~\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:17:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing.hpp:9:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:7:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue.hpp:266:21: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<int, std::__1::allocator<int> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (int i = 0; i < idx.ns_.size(); ++i) {\n",
      "                  ~ ^ ~~~~~~~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue.hpp:569:13: warning: unused variable 'cols' [-Wunused-variable]\n",
      "  const int cols = rvalue_index_size(col_idx, x_ref.cols());\n",
      "            ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue.hpp:571:21: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<int, std::__1::allocator<int> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (int j = 0; j < col_idx.ns_.size(); ++j) {\n",
      "                  ~ ^ ~~~~~~~~~~~~~~~~~~\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:17:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing.hpp:9:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:66:21: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "  for (int i = 0; i < ret_size; ++i) {\n",
      "                  ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:102:21: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "  for (int i = 0; i < ret_rows; ++i) {\n",
      "                  ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:142:21: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "  for (int j = 0; j < ret_size; ++j) {\n",
      "                  ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:183:21: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "  for (int i = 0; i < ret_size; ++i) {\n",
      "                  ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:222:22: warning: unused variable 'x_cols' [-Wunused-variable]\n",
      "  const Eigen::Index x_cols = x.cols();\n",
      "                     ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:227:21: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "  for (int i = 0; i < ret_rows; ++i) {\n",
      "                  ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:231:21: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "  for (int j = 0; j < ret_cols; ++j) {\n",
      "                  ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:235:23: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "    for (int i = 0; i < ret_rows; ++i) {\n",
      "                    ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:278:21: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "  for (int j = 0; j < ret_cols; ++j) {\n",
      "                  ~ ^ ~~~~~~~~\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.2s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:29:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/operator_divide_equal.hpp:5:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/operator_division.hpp:14:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/operator_subtraction.hpp:84:21: warning: lambda capture 'b' is not used [-Wunused-lambda-capture]\n",
      "      [avi = a.vi_, b](const auto& vi) mutable { avi->adj_ += vi.adj_; });\n",
      "                    ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/operator_minus_equal.hpp:24:16: note: in instantiation of function template specialization 'stan::math::operator-<double, nullptr>' requested here\n",
      "  vi_ = (*this - b).vi_;\n",
      "               ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/core/complex_base.hpp:136:9: note: in instantiation of member function 'stan::math::var_value<double, void>::operator-=' requested here\n",
      "    re_ -= x;\n",
      "        ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/core/operator_subtraction.hpp:24:5: note: in instantiation of function template specialization 'stan::math::complex_base<stan::math::var_value<double, void> >::operator-=<int>' requested here\n",
      "  y -= rhs;\n",
      "    ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/core/operator_subtraction.hpp:55:20: note: in instantiation of function template specialization 'stan::math::internal::complex_subtract<std::__1::complex<stan::math::var>, int>' requested here\n",
      "  return internal::complex_subtract(x, y);\n",
      "                   ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/fun/acosh.hpp:105:31: note: in instantiation of function template specialization 'stan::math::operator-<stan::math::var_value<double, void>, int>' requested here\n",
      "  auto y = log(z + sqrt(z * z - 1));\n",
      "                              ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/acosh.hpp:94:32: note: in instantiation of function template specialization 'stan::math::internal::complex_acosh<stan::math::var_value<double, void> >' requested here\n",
      "  return stan::math::internal::complex_acosh(z);\n",
      "                               ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.3s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/operator_addition.hpp:80:21: warning: lambda capture 'b' is not used [-Wunused-lambda-capture]\n",
      "      [avi = a.vi_, b](const auto& vi) mutable { avi->adj_ += vi.adj_; });\n",
      "                    ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/grad_inc_beta.hpp:45:43: note: in instantiation of function template specialization 'stan::math::operator+<int, nullptr>' requested here\n",
      "    grad_2F1(dF1, dF2, a + b, var(1.0), a + 1, z);\n",
      "                                          ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/operator_addition.hpp:80:21: warning: lambda capture 'b' is not used [-Wunused-lambda-capture]\n",
      "      [avi = a.vi_, b](const auto& vi) mutable { avi->adj_ += vi.adj_; });\n",
      "                    ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/fun/trigamma.hpp:63:31: note: in instantiation of function template specialization 'stan::math::operator+<double, nullptr>' requested here\n",
      "    value = -trigamma_impl(-x + 1.0) + square(pi() / sin(-pi() * x));\n",
      "                              ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/trigamma.hpp:23:44: note: in instantiation of function template specialization 'stan::math::trigamma_impl<stan::math::var_value<double, void> >' requested here\n",
      "inline var trigamma(const var& u) { return trigamma_impl(u); }\n",
      "                                           ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.1s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:53:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/profiling.hpp:9:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_2F1_converges.hpp:5:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_not_nan.hpp:5:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/elementwise_check.hpp:153:24: warning: comparison of integers of different signs: 'size_t' (aka 'unsigned long') and 'Eigen::EigenBase::Index' (aka 'long') [-Wsign-compare]\n",
      "  for (size_t i = 0; i < x.size(); i++) {\n",
      "                     ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_not_nan.hpp:28:3: note: in instantiation of function template specialization 'stan::math::elementwise_check<(lambda at /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_not_nan.hpp:28:21), Eigen::ArrayWrapper<const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >, nullptr, nullptr>' requested here\n",
      "  elementwise_check([](double x) { return !std::isnan(x); }, function, name, y,\n",
      "  ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/normal_lpdf.hpp:62:3: note: in instantiation of function template specialization 'stan::math::check_not_nan<Eigen::ArrayWrapper<const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > > >' requested here\n",
      "  check_not_nan(function, \"Random variable\", y_val);\n",
      "  ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:187:24: note: in instantiation of function template specialization 'stan::math::normal_lpdf<false, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::Matrix<double, -1, 1, 0, -1, 1>, double, nullptr>' requested here\n",
      "        lp_accum__.add(normal_lpdf<false>(y, mu, sigma));\n",
      "                       ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:414:14: note: in instantiation of function template specialization 'model_mkxe3thq_namespace::model_mkxe3thq::log_prob_impl<false, false, Eigen::Matrix<double, -1, 1, 0, -1, 1>, Eigen::Matrix<int, -1, 1, 0, -1, 1>, nullptr, nullptr>' requested here\n",
      "      return log_prob_impl<propto__, jacobian__>(params_r, params_i, pstream);\n",
      "             ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_base_crtp.hpp:90:50: note: in instantiation of function template specialization 'model_mkxe3thq_namespace::model_mkxe3thq::log_prob<false, false, double>' requested here\n",
      "    return static_cast<const M*>(this)->template log_prob<false, false, double>(\n",
      "                                                 ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:49:3: note: in instantiation of member function 'stan::model::model_base_crtp<model_mkxe3thq_namespace::model_mkxe3thq>::log_prob' requested here\n",
      "  ~model_mkxe3thq() { }\n",
      "  ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:53:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/profiling.hpp:9:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_2F1_converges.hpp:5:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_not_nan.hpp:5:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/elementwise_check.hpp:153:24: warning: comparison of integers of different signs: 'size_t' (aka 'unsigned long') and 'Eigen::EigenBase::Index' (aka 'long') [-Wsign-compare]\n",
      "  for (size_t i = 0; i < x.size(); i++) {\n",
      "                     ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_finite.hpp:29:3: note: in instantiation of function template specialization 'stan::math::elementwise_check<(lambda at /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_finite.hpp:29:21), Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1, 0, -1, 1> >, nullptr, nullptr>' requested here\n",
      "  elementwise_check([](double x) { return std::isfinite(x); }, function, name,\n",
      "  ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/normal_lpdf.hpp:63:3: note: in instantiation of function template specialization 'stan::math::check_finite<Eigen::ArrayWrapper<const Eigen::Matrix<double, -1, 1, 0, -1, 1> > >' requested here\n",
      "  check_finite(function, \"Location parameter\", mu_val);\n",
      "  ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:187:24: note: in instantiation of function template specialization 'stan::math::normal_lpdf<false, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::Matrix<double, -1, 1, 0, -1, 1>, double, nullptr>' requested here\n",
      "        lp_accum__.add(normal_lpdf<false>(y, mu, sigma));\n",
      "                       ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:414:14: note: in instantiation of function template specialization 'model_mkxe3thq_namespace::model_mkxe3thq::log_prob_impl<false, false, Eigen::Matrix<double, -1, 1, 0, -1, 1>, Eigen::Matrix<int, -1, 1, 0, -1, 1>, nullptr, nullptr>' requested here\n",
      "      return log_prob_impl<propto__, jacobian__>(params_r, params_i, pstream);\n",
      "             ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_base_crtp.hpp:90:50: note: in instantiation of function template specialization 'model_mkxe3thq_namespace::model_mkxe3thq::log_prob<false, false, double>' requested here\n",
      "    return static_cast<const M*>(this)->template log_prob<false, false, double>(\n",
      "                                                 ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:49:3: note: in instantiation of member function 'stan::model::model_base_crtp<model_mkxe3thq_namespace::model_mkxe3thq>::log_prob' requested here\n",
      "  ~model_mkxe3thq() { }\n",
      "  ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:94:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/lb_constrain.hpp:114:33: warning: lambda capture 'lp' is not used [-Wunused-lambda-capture]\n",
      "                               [lp, arena_lb = var(lb)](auto& vi) mutable {\n",
      "                                ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/io/deserializer.hpp:386:26: note: in instantiation of function template specialization 'stan::math::lb_constrain<stan::math::var_value<double, void>, double, nullptr, nullptr>' requested here\n",
      "      return stan::math::lb_constrain(this->read<Ret>(sizes...), lb, lp);\n",
      "                         ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:171:29: note: in instantiation of function template specialization 'stan::io::deserializer<stan::math::var_value<double, void> >::read_constrain_lb<stan::math::var_value<double, void>, false, double, stan::math::var_value<double, void>>' requested here\n",
      "      sigma = in__.template read_constrain_lb<local_scalar_t__, jacobian__>(\n",
      "                            ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:414:14: note: in instantiation of function template specialization 'model_mkxe3thq_namespace::model_mkxe3thq::log_prob_impl<false, false, Eigen::Matrix<stan::math::var_value<double, void>, -1, 1, 0, -1, 1>, Eigen::Matrix<int, -1, 1, 0, -1, 1>, nullptr, nullptr>' requested here\n",
      "      return log_prob_impl<propto__, jacobian__>(params_r, params_i, pstream);\n",
      "             ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_base_crtp.hpp:95:50: note: in instantiation of function template specialization 'model_mkxe3thq_namespace::model_mkxe3thq::log_prob<false, false, stan::math::var_value<double, void> >' requested here\n",
      "    return static_cast<const M*>(this)->template log_prob<false, false>(theta,\n",
      "                                                 ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:49:3: note: in instantiation of member function 'stan::model::model_base_crtp<model_mkxe3thq_namespace::model_mkxe3thq>::log_prob' requested here\n",
      "  ~model_mkxe3thq() { }\n",
      "  ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.5s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:53:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/profiling.hpp:9:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_2F1_converges.hpp:5:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_not_nan.hpp:5:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/elementwise_check.hpp:153:24: warning: comparison of integers of different signs: 'size_t' (aka 'unsigned long') and 'Eigen::EigenBase::Index' (aka 'long') [-Wsign-compare]\n",
      "  for (size_t i = 0; i < x.size(); i++) {\n",
      "                     ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_finite.hpp:29:3: note: in instantiation of function template specialization 'stan::math::elementwise_check<(lambda at /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_finite.hpp:29:21), Eigen::Array<double, -1, 1, 0, -1, 1>, nullptr, nullptr>' requested here\n",
      "  elementwise_check([](double x) { return std::isfinite(x); }, function, name,\n",
      "  ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/normal_lpdf.hpp:63:3: note: in instantiation of function template specialization 'stan::math::check_finite<Eigen::Array<double, -1, 1, 0, -1, 1> >' requested here\n",
      "  check_finite(function, \"Location parameter\", mu_val);\n",
      "  ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:187:24: note: in instantiation of function template specialization 'stan::math::normal_lpdf<false, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::Matrix<stan::math::var_value<double, void>, -1, 1, 0, -1, 1>, stan::math::var_value<double, void>, nullptr>' requested here\n",
      "        lp_accum__.add(normal_lpdf<false>(y, mu, sigma));\n",
      "                       ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:414:14: note: in instantiation of function template specialization 'model_mkxe3thq_namespace::model_mkxe3thq::log_prob_impl<false, false, Eigen::Matrix<stan::math::var_value<double, void>, -1, 1, 0, -1, 1>, Eigen::Matrix<int, -1, 1, 0, -1, 1>, nullptr, nullptr>' requested here\n",
      "      return log_prob_impl<propto__, jacobian__>(params_r, params_i, pstream);\n",
      "             ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_base_crtp.hpp:95:50: note: in instantiation of function template specialization 'model_mkxe3thq_namespace::model_mkxe3thq::log_prob<false, false, stan::math::var_value<double, void> >' requested here\n",
      "    return static_cast<const M*>(this)->template log_prob<false, false>(theta,\n",
      "                                                 ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:49:3: note: in instantiation of member function 'stan::model::model_base_crtp<model_mkxe3thq_namespace::model_mkxe3thq>::log_prob' requested here\n",
      "  ~model_mkxe3thq() { }\n",
      "  ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:58:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/set_zero_all_adjoints.hpp:14:13: warning: 'static' function 'set_zero_all_adjoints' declared in header file should be declared 'static inline' [-Wunneeded-internal-declaration]\n",
      "static void set_zero_all_adjoints() {\n",
      "            ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:17:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing.hpp:5:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/assign_varmat.hpp:400:9: warning: unused type alias 'pair_type' [-Wunused-local-typedef]\n",
      "  using pair_type = std::pair<int, arena_vec>;\n",
      "        ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 14.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 14.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 14.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 14.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 14.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 14.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 14.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 14.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 14.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 15.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 15.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 15.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 15.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 15.4s\n",
      "\u001b[1A\u001b[0J"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "57 warnings generated.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j0<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j0<long double>(long double)::Q2' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j0<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j0<long double>(long double)::P2' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j0<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j0<long double>(long double)::Q1' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j0<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j0<long double>(long double)::P1' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::Q2' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::P2' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::Q1' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::P1' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::QS' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::PS' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::QC' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::PC' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::igamma_temme_large<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&, boost::integral_constant<int, 64> const*)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'boost::math::tools::promote_args<long double, float, float, float, float, float>::type boost::math::log1pmx<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&)::function' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::igamma_temme_large<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&, boost::integral_constant<int, 64> const*)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'boost::math::tools::promote_args<long double, float, float, float, float, float>::type boost::math::log1pmx<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&)::function' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::igamma_temme_large<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&, boost::integral_constant<int, 64> const*)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'boost::math::tools::promote_args<long double, float, float, float, float, float>::type boost::math::log1pmx<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&)::function' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'void boost::throw_exception<boost::math::evaluation_error>(boost::math::evaluation_error const&)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'typeinfo for boost::wrapexcept<boost::math::evaluation_error>' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'boost::wrapexcept<boost::math::evaluation_error>::rethrow() const' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'typeinfo for boost::wrapexcept<boost::math::evaluation_error>' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)::Q' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)::P' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)::Q' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)::P' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.31' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_j0_initializer<long double>::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.31' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_j0_initializer<long double>::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.32' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_j1_initializer<long double>::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.32' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_j1_initializer<long double>::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.33' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::lanczos::lanczos_initializer<boost::math::lanczos::lanczos17m64, long double>::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.33' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::lanczos::lanczos17m64::lanczos_sum_expG_scaled<long double>(long double const&)::denom' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.33' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::lanczos::lanczos17m64::lanczos_sum_expG_scaled<long double>(long double const&)::num' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.33' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::lanczos::lanczos17m64::lanczos_sum<long double>(long double const&)::denom' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.33' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::lanczos::lanczos17m64::lanczos_sum<long double>(long double const&)::num' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.33' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::lanczos::lanczos_initializer<boost::math::lanczos::lanczos17m64, long double>::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.34' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::lgamma_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.34' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::lgamma_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.35' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_y0_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.35' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_y0_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.36' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_y1_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.36' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_y1<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&)::Q1' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.36' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_y1<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&)::P1' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.36' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_y1_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.37' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::digamma_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.37' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::digamma_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.38' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::igamma_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.38' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::igamma_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.39' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::lgamma_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.39' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::lgamma_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.40' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::erf_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 53> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.40' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::erf_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 53> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.41' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::expm1_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 53> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.41' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::expm1_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 53> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.42' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::igamma_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.42' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::igamma_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.43' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::erf_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.43' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::erf_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.44' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::expm1_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.44' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::expm1_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.45' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_i0_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.45' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_i0_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.46' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_i1_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.46' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_i1_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.47' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::owens_t_initializer<double, boost::math::policies::policy<boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.47' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::owens_t_initializer<double, boost::math::policies::policy<boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.48' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_k0_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.48' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_k0_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.49' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_k1_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.49' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_k1_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/mkxe3thq/model_mkxe3thq.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "\u001b[32mBuilding:\u001b[0m 15.5s, done.\n"
     ]
    }
   ],
   "source": [
    "data = dict(x = x, y = y, N = Nobs)\n",
    "posterior = stan.build(linear_model_1d_code, data=data, random_seed=123)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[36mSampling:\u001b[0m   0%\n",
      "\u001b[1A\u001b[0J\u001b[36mSampling:\u001b[0m  25% (2000/8000)\n",
      "\u001b[1A\u001b[0J\u001b[36mSampling:\u001b[0m  50% (4000/8000)\n",
      "\u001b[1A\u001b[0J\u001b[36mSampling:\u001b[0m  75% (6000/8000)\n",
      "\u001b[1A\u001b[0J\u001b[36mSampling:\u001b[0m 100% (8000/8000)\n",
      "\u001b[1A\u001b[0J\u001b[32mSampling:\u001b[0m 100% (8000/8000), done.\n",
      "\u001b[36mMessages received during sampling:\u001b[0m\n",
      "  Gradient evaluation took 1.7e-05 seconds\n",
      "  1000 transitions using 10 leapfrog steps per transition would take 0.17 seconds.\n",
      "  Adjust your expectations accordingly!\n",
      "  Gradient evaluation took 1.8e-05 seconds\n",
      "  1000 transitions using 10 leapfrog steps per transition would take 0.18 seconds.\n",
      "  Adjust your expectations accordingly!\n",
      "  Gradient evaluation took 1.1e-05 seconds\n",
      "  1000 transitions using 10 leapfrog steps per transition would take 0.11 seconds.\n",
      "  Adjust your expectations accordingly!\n",
      "  Gradient evaluation took 1.1e-05 seconds\n",
      "  1000 transitions using 10 leapfrog steps per transition would take 0.11 seconds.\n",
      "  Adjust your expectations accordingly!\n"
     ]
    }
   ],
   "source": [
    "fit = posterior.sample(num_chains=4, num_samples=1000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Getting the estimated parameters\n",
    "est_a = fit['a'][0]\n",
    "est_b = fit['b'][0]\n",
    "est_sigma = fit['sigma'][0]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 540x540 with 12 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "g = sns.pairplot(pd.DataFrame({'a':est_a, 'b':est_b, 'sigma': est_sigma}))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "N_models = 50\n",
    "\n",
    "x_range = np.linspace(-3,3)\n",
    "\n",
    "for i in range(N_models):\n",
    "    prediction = np.random.choice(est_a) + np.random.choice(est_b) * x_range\n",
    "    plt.plot(x_range, prediction, alpha = 0.1, color = 'black')\n",
    "\n",
    "    for i, pred in enumerate(prediction):\n",
    "        samples = norm.rvs(pred, np.random.choice(est_sigma), size = 1)\n",
    "        plt.scatter(x_range[i], samples, color = 'green', alpha = 0.05)\n",
    "        \n",
    "plt.scatter(x,y)\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# When HMC goes wrong"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [],
   "source": [
    "y = np.array([-1,1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [],
   "source": [
    "wrong_model_code = \"\"\"\n",
    "data {\n",
    "    int<lower=1> N;\n",
    "    vector[N] y;\n",
    "}\n",
    "parameters {\n",
    "    real mu;\n",
    "    real<lower=1e-4> sigma;\n",
    "}\n",
    "model {\n",
    "    y ~ normal(mu, sigma);\n",
    "}\n",
    "\"\"\"\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[36mBuilding:\u001b[0m 0.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 0.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 0.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 0.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 0.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 0.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 0.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 0.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.1s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:28:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/operator_addition.hpp:6:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_matching_dims.hpp:33:8: warning: unused variable 'error' [-Wunused-variable]\n",
      "  bool error = false;\n",
      "       ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_matching_dims.hpp:57:23: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<int, std::__1::allocator<int> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "    for (int i = 0; i < y1_d.size(); i++) {\n",
      "                    ~ ^ ~~~~~~~~~~~\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.3s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:53:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/profiling.hpp:9:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err.hpp:50:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/hmm_check.hpp:33:7: warning: unused variable 'n_transitions' [-Wunused-variable]\n",
      "  int n_transitions = log_omegas.cols() - 1;\n",
      "      ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.3s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:26:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/beta.hpp:70:32: warning: lambda capture 'b' is not used [-Wunused-lambda-capture]\n",
      "                           [a, b, digamma_ab](auto& vi) mutable {\n",
      "                             ~~^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/beta.hpp:96:39: warning: lambda capture 'a' is not used [-Wunused-lambda-capture]\n",
      "  return make_callback_var(beta_val, [a, b, digamma_ab](auto& vi) mutable {\n",
      "                                      ^~\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.8s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:54:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/elt_multiply.hpp:9:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/multiply.hpp:7:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/fun.hpp:120:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/fun/gp_matern52_cov.hpp:304:10: warning: unused variable 'neg_root_5' [-Wunused-variable]\n",
      "  double neg_root_5 = -root_5;\n",
      "         ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:54:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/elt_multiply.hpp:9:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/multiply.hpp:7:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/fun.hpp:185:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/fun/log_mix.hpp:86:13: warning: unused variable 'N' [-Wunused-variable]\n",
      "  const int N = stan::math::size(theta);\n",
      "            ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.4s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:121:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/matrix_power.hpp:52:24: warning: comparison of integers of different signs: 'size_t' (aka 'unsigned long') and 'const int' [-Wsign-compare]\n",
      "  for (size_t i = 2; i <= n; ++i) {\n",
      "                     ~ ^  ~\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:132:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/ordered_constrain.hpp:40:30: warning: comparison of integers of different signs: 'Eigen::Index' (aka 'long') and 'size_t' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (Eigen::Index n = 1; n < N; ++n) {\n",
      "                           ~ ^ ~\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:135:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/positive_ordered_constrain.hpp:40:21: warning: comparison of integers of different signs: 'int' and 'size_t' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (int n = 1; n < N; ++n) {\n",
      "                  ~ ^ ~\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.7s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:153:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/simplex_constrain.hpp:40:30: warning: comparison of integers of different signs: 'Eigen::Index' (aka 'long') and 'size_t' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (Eigen::Index k = 0; k < N; ++k) {\n",
      "                           ~ ^ ~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/simplex_constrain.hpp:94:30: warning: comparison of integers of different signs: 'Eigen::Index' (aka 'long') and 'size_t' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (Eigen::Index k = 0; k < N; ++k) {\n",
      "                           ~ ^ ~\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.6s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/operands_and_partials.hpp:29:1: warning: 'ops_partials_edge' defined as a class template here but previously declared as a struct template; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]\n",
      "class ops_partials_edge<double, var> {\n",
      "^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/functor/operands_and_partials.hpp:21:1: note: did you mean class here?\n",
      "struct ops_partials_edge;\n",
      "^~~~~~\n",
      "class\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/operands_and_partials.hpp:177:1: warning: 'ops_partials_edge' defined as a class template here but previously declared as a struct template; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]\n",
      "class ops_partials_edge<double, std::vector<var>> {\n",
      "^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/functor/operands_and_partials.hpp:21:1: note: did you mean class here?\n",
      "struct ops_partials_edge;\n",
      "^~~~~~\n",
      "class\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/operands_and_partials.hpp:199:1: warning: 'ops_partials_edge' defined as a class template here but previously declared as a struct template; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]\n",
      "class ops_partials_edge<double, Op, require_eigen_st<is_var, Op>> {\n",
      "^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/functor/operands_and_partials.hpp:21:1: note: did you mean class here?\n",
      "struct ops_partials_edge;\n",
      "^~~~~~\n",
      "class\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/operands_and_partials.hpp:219:1: warning: 'ops_partials_edge' defined as a class template here but previously declared as a struct template; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]\n",
      "class ops_partials_edge<double, var_value<Op>, require_eigen_t<Op>> {\n",
      "^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/functor/operands_and_partials.hpp:21:1: note: did you mean class here?\n",
      "struct ops_partials_edge;\n",
      "^~~~~~\n",
      "class\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/operands_and_partials.hpp:245:1: warning: 'ops_partials_edge' defined as a class template here but previously declared as a struct template; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]\n",
      "class ops_partials_edge<double, std::vector<Eigen::Matrix<var, R, C>>> {\n",
      "^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/functor/operands_and_partials.hpp:21:1: note: did you mean class here?\n",
      "struct ops_partials_edge;\n",
      "^~~~~~\n",
      "class\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/operands_and_partials.hpp:274:1: warning: 'ops_partials_edge' defined as a class template here but previously declared as a struct template; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]\n",
      "class ops_partials_edge<double, std::vector<std::vector<var>>> {\n",
      "^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/functor/operands_and_partials.hpp:21:1: note: did you mean class here?\n",
      "struct ops_partials_edge;\n",
      "^~~~~~\n",
      "class\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/operands_and_partials.hpp:300:1: warning: 'ops_partials_edge' defined as a class template here but previously declared as a struct template; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]\n",
      "class ops_partials_edge<double, std::vector<var_value<Op>>,\n",
      "^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/functor/operands_and_partials.hpp:21:1: note: did you mean class here?\n",
      "struct ops_partials_edge;\n",
      "^~~~~~\n",
      "class\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:30:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/finite_diff_hessian_auto.hpp:61:24: warning: comparison of integers of different signs: 'size_t' (aka 'unsigned long') and 'int' [-Wsign-compare]\n",
      "  for (size_t i = 0; i < d; ++i) {\n",
      "                     ~ ^ ~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/finite_diff_hessian_auto.hpp:69:24: warning: comparison of integers of different signs: 'size_t' (aka 'unsigned long') and 'int' [-Wsign-compare]\n",
      "  for (size_t i = 0; i < d; ++i) {\n",
      "                     ~ ^ ~\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:87:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/double_exponential_cdf.hpp:77:10: warning: unused variable 'N' [-Wunused-variable]\n",
      "  size_t N = max_size(y, mu, sigma);\n",
      "         ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.9s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:128:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/gaussian_dlm_obs_rng.hpp:41:21: warning: comparison of integers of different signs: 'int' and 'size_t' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (int i = 0; i < M; i++) {\n",
      "                  ~ ^ ~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/gaussian_dlm_obs_rng.hpp:98:7: warning: unused variable 'n' [-Wunused-variable]\n",
      "  int n = G.rows();  // number of states\n",
      "      ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:139:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/hmm_marginal.hpp:26:13: warning: unused variable 'n_states' [-Wunused-variable]\n",
      "  const int n_states = omegas.rows();\n",
      "            ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.5s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:307:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/skew_double_exponential_ccdf_log.hpp:5:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/skew_double_exponential_lccdf.hpp:78:13: warning: unused variable 'size_sigma' [-Wunused-variable]\n",
      "  const int size_sigma = stan::math::size(sigma);\n",
      "            ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:308:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/skew_double_exponential_cdf.hpp:80:13: warning: unused variable 'size_sigma' [-Wunused-variable]\n",
      "  const int size_sigma = stan::math::size(sigma);\n",
      "            ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:309:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/skew_double_exponential_cdf_log.hpp:5:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/skew_double_exponential_lcdf.hpp:81:13: warning: unused variable 'size_sigma' [-Wunused-variable]\n",
      "  const int size_sigma = stan::math::size(sigma);\n",
      "            ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:330:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/std_normal_rng.hpp:23:22: warning: unused variable 'function' [-Wunused-variable]\n",
      "  static const char* function = \"std_normal_rng\";\n",
      "                     ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:350:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/von_mises_cdf.hpp:72:10: warning: unused variable 'ck' [-Wunused-variable]\n",
      "  double ck = 50;\n",
      "         ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:7:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/io/dump.hpp:694:52: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<double, std::__1::allocator<double> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "      for (comp_iter = 0, real_iter = 0; real_iter < val_r->second.first.size();\n",
      "                                         ~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/io/dump.hpp:707:24: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<int, std::__1::allocator<int> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "             real_iter < val_i->second.first.size();\n",
      "             ~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:8:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/io/deserializer.hpp:337:28: warning: comparison of integers of different signs: 'size_t' (aka 'unsigned long') and 'Eigen::Index' (aka 'long') [-Wsign-compare]\n",
      "      for (size_t i = 0; i < m; ++i) {\n",
      "                         ~ ^ ~\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.8s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:17:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing.hpp:6:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/assign.hpp:270:21: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<int, std::__1::allocator<int> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (int i = 0; i < idx.ns_.size(); ++i) {\n",
      "                  ~ ^ ~~~~~~~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/assign.hpp:538:21: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<int, std::__1::allocator<int> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (int i = 0; i < col_idx.ns_.size(); ++i) {\n",
      "                  ~ ^ ~~~~~~~~~~~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/assign.hpp:637:21: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<int, std::__1::allocator<int> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (int j = 0; j < col_idx.ns_.size(); ++j) {\n",
      "                  ~ ^ ~~~~~~~~~~~~~~~~~~\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:17:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing.hpp:9:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:7:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue.hpp:266:21: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<int, std::__1::allocator<int> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (int i = 0; i < idx.ns_.size(); ++i) {\n",
      "                  ~ ^ ~~~~~~~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue.hpp:569:13: warning: unused variable 'cols' [-Wunused-variable]\n",
      "  const int cols = rvalue_index_size(col_idx, x_ref.cols());\n",
      "            ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue.hpp:571:21: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<int, std::__1::allocator<int> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (int j = 0; j < col_idx.ns_.size(); ++j) {\n",
      "                  ~ ^ ~~~~~~~~~~~~~~~~~~\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:17:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing.hpp:9:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:66:21: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "  for (int i = 0; i < ret_size; ++i) {\n",
      "                  ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:102:21: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "  for (int i = 0; i < ret_rows; ++i) {\n",
      "                  ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:142:21: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "  for (int j = 0; j < ret_size; ++j) {\n",
      "                  ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:183:21: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "  for (int i = 0; i < ret_size; ++i) {\n",
      "                  ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:222:22: warning: unused variable 'x_cols' [-Wunused-variable]\n",
      "  const Eigen::Index x_cols = x.cols();\n",
      "                     ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:227:21: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "  for (int i = 0; i < ret_rows; ++i) {\n",
      "                  ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:231:21: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "  for (int j = 0; j < ret_cols; ++j) {\n",
      "                  ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:235:23: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "    for (int i = 0; i < ret_rows; ++i) {\n",
      "                    ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:278:21: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "  for (int j = 0; j < ret_cols; ++j) {\n",
      "                  ~ ^ ~~~~~~~~\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.1s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:29:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/operator_divide_equal.hpp:5:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/operator_division.hpp:14:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/operator_subtraction.hpp:84:21: warning: lambda capture 'b' is not used [-Wunused-lambda-capture]\n",
      "      [avi = a.vi_, b](const auto& vi) mutable { avi->adj_ += vi.adj_; });\n",
      "                    ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/operator_minus_equal.hpp:24:16: note: in instantiation of function template specialization 'stan::math::operator-<double, nullptr>' requested here\n",
      "  vi_ = (*this - b).vi_;\n",
      "               ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/core/complex_base.hpp:136:9: note: in instantiation of member function 'stan::math::var_value<double, void>::operator-=' requested here\n",
      "    re_ -= x;\n",
      "        ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/core/operator_subtraction.hpp:24:5: note: in instantiation of function template specialization 'stan::math::complex_base<stan::math::var_value<double, void> >::operator-=<int>' requested here\n",
      "  y -= rhs;\n",
      "    ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/core/operator_subtraction.hpp:55:20: note: in instantiation of function template specialization 'stan::math::internal::complex_subtract<std::__1::complex<stan::math::var>, int>' requested here\n",
      "  return internal::complex_subtract(x, y);\n",
      "                   ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/fun/acosh.hpp:105:31: note: in instantiation of function template specialization 'stan::math::operator-<stan::math::var_value<double, void>, int>' requested here\n",
      "  auto y = log(z + sqrt(z * z - 1));\n",
      "                              ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/acosh.hpp:94:32: note: in instantiation of function template specialization 'stan::math::internal::complex_acosh<stan::math::var_value<double, void> >' requested here\n",
      "  return stan::math::internal::complex_acosh(z);\n",
      "                               ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.1s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/operator_addition.hpp:80:21: warning: lambda capture 'b' is not used [-Wunused-lambda-capture]\n",
      "      [avi = a.vi_, b](const auto& vi) mutable { avi->adj_ += vi.adj_; });\n",
      "                    ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/grad_inc_beta.hpp:45:43: note: in instantiation of function template specialization 'stan::math::operator+<int, nullptr>' requested here\n",
      "    grad_2F1(dF1, dF2, a + b, var(1.0), a + 1, z);\n",
      "                                          ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/operator_addition.hpp:80:21: warning: lambda capture 'b' is not used [-Wunused-lambda-capture]\n",
      "      [avi = a.vi_, b](const auto& vi) mutable { avi->adj_ += vi.adj_; });\n",
      "                    ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/fun/trigamma.hpp:63:31: note: in instantiation of function template specialization 'stan::math::operator+<double, nullptr>' requested here\n",
      "    value = -trigamma_impl(-x + 1.0) + square(pi() / sin(-pi() * x));\n",
      "                              ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/trigamma.hpp:23:44: note: in instantiation of function template specialization 'stan::math::trigamma_impl<stan::math::var_value<double, void> >' requested here\n",
      "inline var trigamma(const var& u) { return trigamma_impl(u); }\n",
      "                                           ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.9s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:53:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/profiling.hpp:9:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_2F1_converges.hpp:5:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_not_nan.hpp:5:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/elementwise_check.hpp:153:24: warning: comparison of integers of different signs: 'size_t' (aka 'unsigned long') and 'Eigen::EigenBase::Index' (aka 'long') [-Wsign-compare]\n",
      "  for (size_t i = 0; i < x.size(); i++) {\n",
      "                     ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_not_nan.hpp:28:3: note: in instantiation of function template specialization 'stan::math::elementwise_check<(lambda at /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_not_nan.hpp:28:21), Eigen::ArrayWrapper<const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >, nullptr, nullptr>' requested here\n",
      "  elementwise_check([](double x) { return !std::isnan(x); }, function, name, y,\n",
      "  ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/normal_lpdf.hpp:62:3: note: in instantiation of function template specialization 'stan::math::check_not_nan<Eigen::ArrayWrapper<const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > > >' requested here\n",
      "  check_not_nan(function, \"Random variable\", y_val);\n",
      "  ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:134:24: note: in instantiation of function template specialization 'stan::math::normal_lpdf<false, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, double, double, nullptr>' requested here\n",
      "        lp_accum__.add(normal_lpdf<propto__>(y, mu, sigma));\n",
      "                       ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:330:14: note: in instantiation of function template specialization 'model_qjf7tidt_namespace::model_qjf7tidt::log_prob_impl<false, false, Eigen::Matrix<double, -1, 1, 0, -1, 1>, Eigen::Matrix<int, -1, 1, 0, -1, 1>, nullptr, nullptr>' requested here\n",
      "      return log_prob_impl<propto__, jacobian__>(params_r, params_i, pstream);\n",
      "             ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_base_crtp.hpp:90:50: note: in instantiation of function template specialization 'model_qjf7tidt_namespace::model_qjf7tidt::log_prob<false, false, double>' requested here\n",
      "    return static_cast<const M*>(this)->template log_prob<false, false, double>(\n",
      "                                                 ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:38:3: note: in instantiation of member function 'stan::model::model_base_crtp<model_qjf7tidt_namespace::model_qjf7tidt>::log_prob' requested here\n",
      "  ~model_qjf7tidt() { }\n",
      "  ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:94:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/lb_constrain.hpp:114:33: warning: lambda capture 'lp' is not used [-Wunused-lambda-capture]\n",
      "                               [lp, arena_lb = var(lb)](auto& vi) mutable {\n",
      "                                ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/io/deserializer.hpp:386:26: note: in instantiation of function template specialization 'stan::math::lb_constrain<stan::math::var_value<double, void>, double, nullptr, nullptr>' requested here\n",
      "      return stan::math::lb_constrain(this->read<Ret>(sizes...), lb, lp);\n",
      "                         ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:130:29: note: in instantiation of function template specialization 'stan::io::deserializer<stan::math::var_value<double, void> >::read_constrain_lb<stan::math::var_value<double, void>, false, double, stan::math::var_value<double, void>>' requested here\n",
      "      sigma = in__.template read_constrain_lb<local_scalar_t__, jacobian__>(\n",
      "                            ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:330:14: note: in instantiation of function template specialization 'model_qjf7tidt_namespace::model_qjf7tidt::log_prob_impl<false, false, Eigen::Matrix<stan::math::var_value<double, void>, -1, 1, 0, -1, 1>, Eigen::Matrix<int, -1, 1, 0, -1, 1>, nullptr, nullptr>' requested here\n",
      "      return log_prob_impl<propto__, jacobian__>(params_r, params_i, pstream);\n",
      "             ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_base_crtp.hpp:95:50: note: in instantiation of function template specialization 'model_qjf7tidt_namespace::model_qjf7tidt::log_prob<false, false, stan::math::var_value<double, void> >' requested here\n",
      "    return static_cast<const M*>(this)->template log_prob<false, false>(theta,\n",
      "                                                 ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:38:3: note: in instantiation of member function 'stan::model::model_base_crtp<model_qjf7tidt_namespace::model_qjf7tidt>::log_prob' requested here\n",
      "  ~model_qjf7tidt() { }\n",
      "  ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.1s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:58:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/set_zero_all_adjoints.hpp:14:13: warning: 'static' function 'set_zero_all_adjoints' declared in header file should be declared 'static inline' [-Wunneeded-internal-declaration]\n",
      "static void set_zero_all_adjoints() {\n",
      "            ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:17:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing.hpp:5:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/assign_varmat.hpp:400:9: warning: unused type alias 'pair_type' [-Wunused-local-typedef]\n",
      "  using pair_type = std::pair<int, arena_vec>;\n",
      "        ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.6s\n",
      "\u001b[1A\u001b[0J"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "55 warnings generated.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j0<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j0<long double>(long double)::Q2' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j0<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j0<long double>(long double)::P2' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j0<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j0<long double>(long double)::Q1' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j0<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j0<long double>(long double)::P1' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::Q2' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::P2' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::Q1' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::P1' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::QS' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::PS' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::QC' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::PC' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::igamma_temme_large<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&, boost::integral_constant<int, 64> const*)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'boost::math::tools::promote_args<long double, float, float, float, float, float>::type boost::math::log1pmx<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&)::function' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::igamma_temme_large<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&, boost::integral_constant<int, 64> const*)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'boost::math::tools::promote_args<long double, float, float, float, float, float>::type boost::math::log1pmx<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&)::function' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::igamma_temme_large<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&, boost::integral_constant<int, 64> const*)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'boost::math::tools::promote_args<long double, float, float, float, float, float>::type boost::math::log1pmx<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&)::function' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'void boost::throw_exception<boost::math::evaluation_error>(boost::math::evaluation_error const&)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'typeinfo for boost::wrapexcept<boost::math::evaluation_error>' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'boost::wrapexcept<boost::math::evaluation_error>::rethrow() const' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'typeinfo for boost::wrapexcept<boost::math::evaluation_error>' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)::Q' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)::P' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)::Q' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)::P' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.31' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_j0_initializer<long double>::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.31' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_j0_initializer<long double>::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.32' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_j1_initializer<long double>::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.32' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_j1_initializer<long double>::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.33' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::lanczos::lanczos_initializer<boost::math::lanczos::lanczos17m64, long double>::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.33' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::lanczos::lanczos17m64::lanczos_sum_expG_scaled<long double>(long double const&)::denom' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.33' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::lanczos::lanczos17m64::lanczos_sum_expG_scaled<long double>(long double const&)::num' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.33' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::lanczos::lanczos17m64::lanczos_sum<long double>(long double const&)::denom' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.33' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::lanczos::lanczos17m64::lanczos_sum<long double>(long double const&)::num' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.33' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::lanczos::lanczos_initializer<boost::math::lanczos::lanczos17m64, long double>::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.34' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::lgamma_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.34' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::lgamma_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.35' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_y0_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.35' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_y0_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.36' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_y1_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.36' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_y1<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&)::Q1' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.36' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_y1<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&)::P1' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.36' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_y1_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.37' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::digamma_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.37' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::digamma_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.38' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::igamma_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.38' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::igamma_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.39' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::lgamma_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.39' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::lgamma_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.40' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::erf_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 53> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.40' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::erf_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 53> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.41' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::expm1_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 53> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.41' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::expm1_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 53> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.42' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::igamma_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.42' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::igamma_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.43' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::erf_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.43' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::erf_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.44' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::expm1_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.44' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::expm1_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.45' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_i0_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.45' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_i0_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.46' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_i1_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.46' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_i1_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.47' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::owens_t_initializer<double, boost::math::policies::policy<boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.47' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::owens_t_initializer<double, boost::math::policies::policy<boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.48' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_k0_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.48' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_k0_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.49' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_k1_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.49' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_k1_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/qjf7tidt/model_qjf7tidt.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "\u001b[32mBuilding:\u001b[0m 13.7s, done.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[36mMessages from \u001b[0m\u001b[36;1mstanc\u001b[0m\u001b[36m:\u001b[0m\n",
      "Warning: The parameter sigma has no priors.\n",
      "Warning: The parameter mu has no priors.\n"
     ]
    }
   ],
   "source": [
    "data = dict(y = y, N = 2)\n",
    "posterior = stan.build(wrong_model_code, data=data, random_seed=123)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[36mSampling:\u001b[0m   0%\n",
      "\u001b[1A\u001b[0J\u001b[32mSampling:\u001b[0m 100%, done.\n",
      "\u001b[36mMessages received during sampling:\u001b[0m\n",
      "  Gradient evaluation took 2.6e-05 seconds\n",
      "  1000 transitions using 10 leapfrog steps per transition would take 0.26 seconds.\n",
      "  Adjust your expectations accordingly!\n",
      "  Gradient evaluation took 2.1e-05 seconds\n",
      "  1000 transitions using 10 leapfrog steps per transition would take 0.21 seconds.\n",
      "  Adjust your expectations accordingly!\n",
      "  Gradient evaluation took 1.3e-05 seconds\n",
      "  1000 transitions using 10 leapfrog steps per transition would take 0.13 seconds.\n",
      "  Adjust your expectations accordingly!\n",
      "  Gradient evaluation took 1.3e-05 seconds\n",
      "  1000 transitions using 10 leapfrog steps per transition would take 0.13 seconds.\n",
      "  Adjust your expectations accordingly!\n"
     ]
    }
   ],
   "source": [
    "fit = posterior.sample(num_chains=4, num_samples=1000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [],
   "source": [
    "est_mu = fit['mu'][0]\n",
    "est_sigma = fit['sigma'][0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, axs = plt.subplots(2)\n",
    "fig.suptitle('Chains')\n",
    "axs[0].plot(est_mu)\n",
    "axs[0].set_title('mu')\n",
    "axs[1].plot(est_sigma)\n",
    "axs[1].set_title('sigma')\n",
    "fig.tight_layout()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                count          mean           std           min           25%  \\\n",
      "parameters                                                                      \n",
      "lp__           4000.0 -1.609147e+01  4.981781e+00 -3.137561e+01 -1.954902e+01   \n",
      "accept_stat__  4000.0  9.184556e-01  1.943307e-01  0.000000e+00  9.596134e-01   \n",
      "stepsize__     4000.0  1.138859e-01  7.473263e-02  1.379672e-02  6.837637e-02   \n",
      "treedepth__    4000.0  4.895750e+00  2.773681e+00  0.000000e+00  3.000000e+00   \n",
      "n_leapfrog__   4000.0  2.037295e+02  3.524093e+02  1.000000e+00  7.000000e+00   \n",
      "divergent__    4000.0  1.500000e-02  1.215677e-01  0.000000e+00  0.000000e+00   \n",
      "energy__       4000.0  1.708554e+01  5.095346e+00  6.667978e+00  1.312558e+01   \n",
      "mu             4000.0 -1.478379e+09  3.993500e+09 -1.978562e+10 -4.923931e+07   \n",
      "sigma          4000.0  3.742377e+10  1.046476e+12  6.459607e+02  1.198571e+05   \n",
      "\n",
      "                        50%           75%           max  \n",
      "parameters                                               \n",
      "lp__          -1.568789e+01 -1.219630e+01 -6.495963e+00  \n",
      "accept_stat__  9.955986e-01  9.996838e-01  1.000000e+00  \n",
      "stepsize__     1.112999e-01  1.568093e-01  2.191470e-01  \n",
      "treedepth__    4.000000e+00  7.000000e+00  1.000000e+01  \n",
      "n_leapfrog__   2.500000e+01  1.355000e+02  1.023000e+03  \n",
      "divergent__    0.000000e+00  0.000000e+00  1.000000e+00  \n",
      "energy__       1.654617e+01  2.086056e+01  3.278661e+01  \n",
      "mu            -5.731184e+03  3.170709e+05  1.977631e+09  \n",
      "sigma          3.988142e+06  2.229833e+08  4.229141e+13  \n"
     ]
    }
   ],
   "source": [
    "df = fit.to_frame()\n",
    "print(df.describe().T)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can see that the number of effective samples is very low, and that *Rhat* is greater than one. Also, when exploring the chain itself we notice that the mixing is very poor, and the values can go to very extreme values. How is this possible?\n",
    "\n",
    "The problem in this case consists in the flat prior for the parameters $\\mu$ and $\\sigma$. Therefore, since the likelihood is not strong enough, the Markov chain has the tendency to drift away in a very unpredictable way. A way to fix this problem consists in using priors, even if not much informative."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[36mBuilding:\u001b[0m 0.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 0.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 0.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 0.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 0.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 0.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 0.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 0.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 1.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.0s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:28:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/operator_addition.hpp:6:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_matching_dims.hpp:33:8: warning: unused variable 'error' [-Wunused-variable]\n",
      "  bool error = false;\n",
      "       ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_matching_dims.hpp:57:23: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<int, std::__1::allocator<int> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "    for (int i = 0; i < y1_d.size(); i++) {\n",
      "                    ~ ^ ~~~~~~~~~~~\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.3s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:53:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/profiling.hpp:9:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err.hpp:50:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/hmm_check.hpp:33:7: warning: unused variable 'n_transitions' [-Wunused-variable]\n",
      "  int n_transitions = log_omegas.cols() - 1;\n",
      "      ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 2.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.3s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:26:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/beta.hpp:70:32: warning: lambda capture 'b' is not used [-Wunused-lambda-capture]\n",
      "                           [a, b, digamma_ab](auto& vi) mutable {\n",
      "                             ~~^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/beta.hpp:96:39: warning: lambda capture 'a' is not used [-Wunused-lambda-capture]\n",
      "  return make_callback_var(beta_val, [a, b, digamma_ab](auto& vi) mutable {\n",
      "                                      ^~\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.8s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:54:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/elt_multiply.hpp:9:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/multiply.hpp:7:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/fun.hpp:120:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/fun/gp_matern52_cov.hpp:304:10: warning: unused variable 'neg_root_5' [-Wunused-variable]\n",
      "  double neg_root_5 = -root_5;\n",
      "         ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:54:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/elt_multiply.hpp:9:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/multiply.hpp:7:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/fun.hpp:185:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/fun/log_mix.hpp:86:13: warning: unused variable 'N' [-Wunused-variable]\n",
      "  const int N = stan::math::size(theta);\n",
      "            ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 3.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.5s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:121:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/matrix_power.hpp:52:24: warning: comparison of integers of different signs: 'size_t' (aka 'unsigned long') and 'const int' [-Wsign-compare]\n",
      "  for (size_t i = 2; i <= n; ++i) {\n",
      "                     ~ ^  ~\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:132:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/ordered_constrain.hpp:40:30: warning: comparison of integers of different signs: 'Eigen::Index' (aka 'long') and 'size_t' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (Eigen::Index n = 1; n < N; ++n) {\n",
      "                           ~ ^ ~\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:135:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/positive_ordered_constrain.hpp:40:21: warning: comparison of integers of different signs: 'int' and 'size_t' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (int n = 1; n < N; ++n) {\n",
      "                  ~ ^ ~\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.7s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:153:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/simplex_constrain.hpp:40:30: warning: comparison of integers of different signs: 'Eigen::Index' (aka 'long') and 'size_t' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (Eigen::Index k = 0; k < N; ++k) {\n",
      "                           ~ ^ ~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/simplex_constrain.hpp:94:30: warning: comparison of integers of different signs: 'Eigen::Index' (aka 'long') and 'size_t' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (Eigen::Index k = 0; k < N; ++k) {\n",
      "                           ~ ^ ~\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 4.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 5.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.7s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/operands_and_partials.hpp:29:1: warning: 'ops_partials_edge' defined as a class template here but previously declared as a struct template; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]\n",
      "class ops_partials_edge<double, var> {\n",
      "^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/functor/operands_and_partials.hpp:21:1: note: did you mean class here?\n",
      "struct ops_partials_edge;\n",
      "^~~~~~\n",
      "class\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/operands_and_partials.hpp:177:1: warning: 'ops_partials_edge' defined as a class template here but previously declared as a struct template; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]\n",
      "class ops_partials_edge<double, std::vector<var>> {\n",
      "^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/functor/operands_and_partials.hpp:21:1: note: did you mean class here?\n",
      "struct ops_partials_edge;\n",
      "^~~~~~\n",
      "class\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/operands_and_partials.hpp:199:1: warning: 'ops_partials_edge' defined as a class template here but previously declared as a struct template; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]\n",
      "class ops_partials_edge<double, Op, require_eigen_st<is_var, Op>> {\n",
      "^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/functor/operands_and_partials.hpp:21:1: note: did you mean class here?\n",
      "struct ops_partials_edge;\n",
      "^~~~~~\n",
      "class\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/operands_and_partials.hpp:219:1: warning: 'ops_partials_edge' defined as a class template here but previously declared as a struct template; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]\n",
      "class ops_partials_edge<double, var_value<Op>, require_eigen_t<Op>> {\n",
      "^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/functor/operands_and_partials.hpp:21:1: note: did you mean class here?\n",
      "struct ops_partials_edge;\n",
      "^~~~~~\n",
      "class\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/operands_and_partials.hpp:245:1: warning: 'ops_partials_edge' defined as a class template here but previously declared as a struct template; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]\n",
      "class ops_partials_edge<double, std::vector<Eigen::Matrix<var, R, C>>> {\n",
      "^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/functor/operands_and_partials.hpp:21:1: note: did you mean class here?\n",
      "struct ops_partials_edge;\n",
      "^~~~~~\n",
      "class\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/operands_and_partials.hpp:274:1: warning: 'ops_partials_edge' defined as a class template here but previously declared as a struct template; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]\n",
      "class ops_partials_edge<double, std::vector<std::vector<var>>> {\n",
      "^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/functor/operands_and_partials.hpp:21:1: note: did you mean class here?\n",
      "struct ops_partials_edge;\n",
      "^~~~~~\n",
      "class\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/operands_and_partials.hpp:300:1: warning: 'ops_partials_edge' defined as a class template here but previously declared as a struct template; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]\n",
      "class ops_partials_edge<double, std::vector<var_value<Op>>,\n",
      "^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/functor/operands_and_partials.hpp:21:1: note: did you mean class here?\n",
      "struct ops_partials_edge;\n",
      "^~~~~~\n",
      "class\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:11:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor.hpp:30:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/finite_diff_hessian_auto.hpp:61:24: warning: comparison of integers of different signs: 'size_t' (aka 'unsigned long') and 'int' [-Wsign-compare]\n",
      "  for (size_t i = 0; i < d; ++i) {\n",
      "                     ~ ^ ~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/functor/finite_diff_hessian_auto.hpp:69:24: warning: comparison of integers of different signs: 'size_t' (aka 'unsigned long') and 'int' [-Wsign-compare]\n",
      "  for (size_t i = 0; i < d; ++i) {\n",
      "                     ~ ^ ~\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:87:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/double_exponential_cdf.hpp:77:10: warning: unused variable 'N' [-Wunused-variable]\n",
      "  size_t N = max_size(y, mu, sigma);\n",
      "         ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 6.9s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:128:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/gaussian_dlm_obs_rng.hpp:41:21: warning: comparison of integers of different signs: 'int' and 'size_t' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (int i = 0; i < M; i++) {\n",
      "                  ~ ^ ~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/gaussian_dlm_obs_rng.hpp:98:7: warning: unused variable 'n' [-Wunused-variable]\n",
      "  int n = G.rows();  // number of states\n",
      "      ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:139:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/hmm_marginal.hpp:26:13: warning: unused variable 'n_states' [-Wunused-variable]\n",
      "  const int n_states = omegas.rows();\n",
      "            ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.6s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:307:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/skew_double_exponential_ccdf_log.hpp:5:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/skew_double_exponential_lccdf.hpp:78:13: warning: unused variable 'size_sigma' [-Wunused-variable]\n",
      "  const int size_sigma = stan::math::size(sigma);\n",
      "            ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:308:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/skew_double_exponential_cdf.hpp:80:13: warning: unused variable 'size_sigma' [-Wunused-variable]\n",
      "  const int size_sigma = stan::math::size(sigma);\n",
      "            ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:309:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/skew_double_exponential_cdf_log.hpp:5:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/skew_double_exponential_lcdf.hpp:81:13: warning: unused variable 'size_sigma' [-Wunused-variable]\n",
      "  const int size_sigma = stan::math::size(sigma);\n",
      "            ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:330:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/std_normal_rng.hpp:23:22: warning: unused variable 'function' [-Wunused-variable]\n",
      "  static const char* function = \"std_normal_rng\";\n",
      "                     ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:13:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim.hpp:16:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob.hpp:350:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/von_mises_cdf.hpp:72:10: warning: unused variable 'ck' [-Wunused-variable]\n",
      "  double ck = 50;\n",
      "         ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:7:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/io/dump.hpp:694:52: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<double, std::__1::allocator<double> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "      for (comp_iter = 0, real_iter = 0; real_iter < val_r->second.first.size();\n",
      "                                         ~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/io/dump.hpp:707:24: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<int, std::__1::allocator<int> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "             real_iter < val_i->second.first.size();\n",
      "             ~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:8:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/io/deserializer.hpp:337:28: warning: comparison of integers of different signs: 'size_t' (aka 'unsigned long') and 'Eigen::Index' (aka 'long') [-Wsign-compare]\n",
      "      for (size_t i = 0; i < m; ++i) {\n",
      "                         ~ ^ ~\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 7.9s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:17:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing.hpp:6:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/assign.hpp:270:21: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<int, std::__1::allocator<int> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (int i = 0; i < idx.ns_.size(); ++i) {\n",
      "                  ~ ^ ~~~~~~~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/assign.hpp:538:21: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<int, std::__1::allocator<int> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (int i = 0; i < col_idx.ns_.size(); ++i) {\n",
      "                  ~ ^ ~~~~~~~~~~~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/assign.hpp:637:21: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<int, std::__1::allocator<int> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (int j = 0; j < col_idx.ns_.size(); ++j) {\n",
      "                  ~ ^ ~~~~~~~~~~~~~~~~~~\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:17:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing.hpp:9:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:7:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue.hpp:266:21: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<int, std::__1::allocator<int> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (int i = 0; i < idx.ns_.size(); ++i) {\n",
      "                  ~ ^ ~~~~~~~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue.hpp:569:13: warning: unused variable 'cols' [-Wunused-variable]\n",
      "  const int cols = rvalue_index_size(col_idx, x_ref.cols());\n",
      "            ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue.hpp:571:21: warning: comparison of integers of different signs: 'int' and 'std::__1::vector<int, std::__1::allocator<int> >::size_type' (aka 'unsigned long') [-Wsign-compare]\n",
      "  for (int j = 0; j < col_idx.ns_.size(); ++j) {\n",
      "                  ~ ^ ~~~~~~~~~~~~~~~~~~\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:17:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing.hpp:9:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:66:21: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "  for (int i = 0; i < ret_size; ++i) {\n",
      "                  ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:102:21: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "  for (int i = 0; i < ret_rows; ++i) {\n",
      "                  ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:142:21: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "  for (int j = 0; j < ret_size; ++j) {\n",
      "                  ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:183:21: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "  for (int i = 0; i < ret_size; ++i) {\n",
      "                  ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:222:22: warning: unused variable 'x_cols' [-Wunused-variable]\n",
      "  const Eigen::Index x_cols = x.cols();\n",
      "                     ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:227:21: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "  for (int i = 0; i < ret_rows; ++i) {\n",
      "                  ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:231:21: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "  for (int j = 0; j < ret_cols; ++j) {\n",
      "                  ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:235:23: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "    for (int i = 0; i < ret_rows; ++i) {\n",
      "                    ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/rvalue_varmat.hpp:278:21: warning: comparison of integers of different signs: 'int' and 'const unsigned long' [-Wsign-compare]\n",
      "  for (int j = 0; j < ret_cols; ++j) {\n",
      "                  ~ ^ ~~~~~~~~\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.1s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:29:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/operator_divide_equal.hpp:5:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/operator_division.hpp:14:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/operator_subtraction.hpp:84:21: warning: lambda capture 'b' is not used [-Wunused-lambda-capture]\n",
      "      [avi = a.vi_, b](const auto& vi) mutable { avi->adj_ += vi.adj_; });\n",
      "                    ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/operator_minus_equal.hpp:24:16: note: in instantiation of function template specialization 'stan::math::operator-<double, nullptr>' requested here\n",
      "  vi_ = (*this - b).vi_;\n",
      "               ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/core/complex_base.hpp:136:9: note: in instantiation of member function 'stan::math::var_value<double, void>::operator-=' requested here\n",
      "    re_ -= x;\n",
      "        ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/core/operator_subtraction.hpp:24:5: note: in instantiation of function template specialization 'stan::math::complex_base<stan::math::var_value<double, void> >::operator-=<int>' requested here\n",
      "  y -= rhs;\n",
      "    ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/core/operator_subtraction.hpp:55:20: note: in instantiation of function template specialization 'stan::math::internal::complex_subtract<std::__1::complex<stan::math::var>, int>' requested here\n",
      "  return internal::complex_subtract(x, y);\n",
      "                   ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/fun/acosh.hpp:105:31: note: in instantiation of function template specialization 'stan::math::operator-<stan::math::var_value<double, void>, int>' requested here\n",
      "  auto y = log(z + sqrt(z * z - 1));\n",
      "                              ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/acosh.hpp:94:32: note: in instantiation of function template specialization 'stan::math::internal::complex_acosh<stan::math::var_value<double, void> >' requested here\n",
      "  return stan::math::internal::complex_acosh(z);\n",
      "                               ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 8.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.2s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/operator_addition.hpp:80:21: warning: lambda capture 'b' is not used [-Wunused-lambda-capture]\n",
      "      [avi = a.vi_, b](const auto& vi) mutable { avi->adj_ += vi.adj_; });\n",
      "                    ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/grad_inc_beta.hpp:45:43: note: in instantiation of function template specialization 'stan::math::operator+<int, nullptr>' requested here\n",
      "    grad_2F1(dF1, dF2, a + b, var(1.0), a + 1, z);\n",
      "                                          ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:28:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/operator_addition.hpp:80:21: warning: lambda capture 'b' is not used [-Wunused-lambda-capture]\n",
      "      [avi = a.vi_, b](const auto& vi) mutable { avi->adj_ += vi.adj_; });\n",
      "                    ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/fun/trigamma.hpp:63:31: note: in instantiation of function template specialization 'stan::math::operator+<double, nullptr>' requested here\n",
      "    value = -trigamma_impl(-x + 1.0) + square(pi() / sin(-pi() * x));\n",
      "                              ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/trigamma.hpp:23:44: note: in instantiation of function template specialization 'stan::math::trigamma_impl<stan::math::var_value<double, void> >' requested here\n",
      "inline var trigamma(const var& u) { return trigamma_impl(u); }\n",
      "                                           ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 9.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.0s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:53:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/profiling.hpp:9:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_2F1_converges.hpp:5:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_not_nan.hpp:5:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/elementwise_check.hpp:153:24: warning: comparison of integers of different signs: 'size_t' (aka 'unsigned long') and 'Eigen::EigenBase::Index' (aka 'long') [-Wsign-compare]\n",
      "  for (size_t i = 0; i < x.size(); i++) {\n",
      "                     ~ ^ ~~~~~~~~\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_not_nan.hpp:28:3: note: in instantiation of function template specialization 'stan::math::elementwise_check<(lambda at /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/err/check_not_nan.hpp:28:21), Eigen::ArrayWrapper<const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > >, nullptr, nullptr>' requested here\n",
      "  elementwise_check([](double x) { return !std::isnan(x); }, function, name, y,\n",
      "  ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/prim/prob/normal_lpdf.hpp:62:3: note: in instantiation of function template specialization 'stan::math::check_not_nan<Eigen::ArrayWrapper<const Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > > >' requested here\n",
      "  check_not_nan(function, \"Random variable\", y_val);\n",
      "  ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:140:24: note: in instantiation of function template specialization 'stan::math::normal_lpdf<false, Eigen::Map<Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> >, double, double, nullptr>' requested here\n",
      "        lp_accum__.add(normal_lpdf<propto__>(y, mu, sigma));\n",
      "                       ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:336:14: note: in instantiation of function template specialization 'model_fxpnlmbf_namespace::model_fxpnlmbf::log_prob_impl<false, false, Eigen::Matrix<double, -1, 1, 0, -1, 1>, Eigen::Matrix<int, -1, 1, 0, -1, 1>, nullptr, nullptr>' requested here\n",
      "      return log_prob_impl<propto__, jacobian__>(params_r, params_i, pstream);\n",
      "             ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_base_crtp.hpp:90:50: note: in instantiation of function template specialization 'model_fxpnlmbf_namespace::model_fxpnlmbf::log_prob<false, false, double>' requested here\n",
      "    return static_cast<const M*>(this)->template log_prob<false, false, double>(\n",
      "                                                 ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:40:3: note: in instantiation of member function 'stan::model::model_base_crtp<model_fxpnlmbf_namespace::model_fxpnlmbf>::log_prob' requested here\n",
      "  ~model_fxpnlmbf() { }\n",
      "  ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:10:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun.hpp:94:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/fun/lb_constrain.hpp:114:33: warning: lambda capture 'lp' is not used [-Wunused-lambda-capture]\n",
      "                               [lp, arena_lb = var(lb)](auto& vi) mutable {\n",
      "                                ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/io/deserializer.hpp:386:26: note: in instantiation of function template specialization 'stan::math::lb_constrain<stan::math::var_value<double, void>, double, nullptr, nullptr>' requested here\n",
      "      return stan::math::lb_constrain(this->read<Ret>(sizes...), lb, lp);\n",
      "                         ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:132:29: note: in instantiation of function template specialization 'stan::io::deserializer<stan::math::var_value<double, void> >::read_constrain_lb<stan::math::var_value<double, void>, false, double, stan::math::var_value<double, void>>' requested here\n",
      "      sigma = in__.template read_constrain_lb<local_scalar_t__, jacobian__>(\n",
      "                            ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:336:14: note: in instantiation of function template specialization 'model_fxpnlmbf_namespace::model_fxpnlmbf::log_prob_impl<false, false, Eigen::Matrix<stan::math::var_value<double, void>, -1, 1, 0, -1, 1>, Eigen::Matrix<int, -1, 1, 0, -1, 1>, nullptr, nullptr>' requested here\n",
      "      return log_prob_impl<propto__, jacobian__>(params_r, params_i, pstream);\n",
      "             ^\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_base_crtp.hpp:95:50: note: in instantiation of function template specialization 'model_fxpnlmbf_namespace::model_fxpnlmbf::log_prob<false, false, stan::math::var_value<double, void> >' requested here\n",
      "    return static_cast<const M*>(this)->template log_prob<false, false>(theta,\n",
      "                                                 ^\n",
      "/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:40:3: note: in instantiation of member function 'stan::model::model_base_crtp<model_fxpnlmbf_namespace::model_fxpnlmbf>::log_prob' requested here\n",
      "  ~model_fxpnlmbf() { }\n",
      "  ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.2s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:4:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math.hpp:19:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev.hpp:8:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core.hpp:58:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/math/rev/core/set_zero_all_adjoints.hpp:14:13: warning: 'static' function 'set_zero_all_adjoints' declared in header file should be declared 'static inline' [-Wunneeded-internal-declaration]\n",
      "static void set_zero_all_adjoints() {\n",
      "            ^\n",
      "In file included from /Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.cpp:2:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/model_header.hpp:17:\n",
      "In file included from /Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing.hpp:5:\n",
      "/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/include/stan/model/indexing/assign_varmat.hpp:400:9: warning: unused type alias 'pair_type' [-Wunused-local-typedef]\n",
      "  using pair_type = std::pair<int, arena_vec>;\n",
      "        ^\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 10.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 11.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 12.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.1s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.4s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.5s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.6s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.7s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.8s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 13.9s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 14.0s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 14.2s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 14.3s\n",
      "\u001b[1A\u001b[0J\u001b[36mBuilding:\u001b[0m 14.4s\n",
      "\u001b[1A\u001b[0J"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "55 warnings generated.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j0<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j0<long double>(long double)::Q2' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j0<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j0<long double>(long double)::P2' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j0<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j0<long double>(long double)::Q1' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j0<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j0<long double>(long double)::P1' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::Q2' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::P2' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::Q1' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::P1' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::QS' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::PS' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::QC' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_j1<long double>(long double)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_j1<long double>(long double)::PC' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::igamma_temme_large<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&, boost::integral_constant<int, 64> const*)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'boost::math::tools::promote_args<long double, float, float, float, float, float>::type boost::math::log1pmx<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&)::function' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::igamma_temme_large<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&, boost::integral_constant<int, 64> const*)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'boost::math::tools::promote_args<long double, float, float, float, float, float>::type boost::math::log1pmx<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&)::function' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::igamma_temme_large<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&, boost::integral_constant<int, 64> const*)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'boost::math::tools::promote_args<long double, float, float, float, float, float>::type boost::math::log1pmx<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&)::function' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'void boost::throw_exception<boost::math::evaluation_error>(boost::math::evaluation_error const&)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'typeinfo for boost::wrapexcept<boost::math::evaluation_error>' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'boost::wrapexcept<boost::math::evaluation_error>::rethrow() const' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'typeinfo for boost::wrapexcept<boost::math::evaluation_error>' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)::Q' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)::P' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)::Q' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_k0_imp<long double>(long double const&, boost::integral_constant<int, 64> const&)::P' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.31' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_j0_initializer<long double>::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.31' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_j0_initializer<long double>::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.32' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_j1_initializer<long double>::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.32' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_j1_initializer<long double>::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.33' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::lanczos::lanczos_initializer<boost::math::lanczos::lanczos17m64, long double>::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.33' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::lanczos::lanczos17m64::lanczos_sum_expG_scaled<long double>(long double const&)::denom' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.33' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::lanczos::lanczos17m64::lanczos_sum_expG_scaled<long double>(long double const&)::num' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.33' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::lanczos::lanczos17m64::lanczos_sum<long double>(long double const&)::denom' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.33' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::lanczos::lanczos17m64::lanczos_sum<long double>(long double const&)::num' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.33' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::lanczos::lanczos_initializer<boost::math::lanczos::lanczos17m64, long double>::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.34' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::lgamma_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.34' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::lgamma_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.35' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_y0_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.35' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_y0_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.36' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_y1_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.36' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_y1<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&)::Q1' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.36' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'long double boost::math::detail::bessel_y1<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >(long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> const&)::P1' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.36' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_y1_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.37' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::digamma_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.37' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::digamma_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.38' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::igamma_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.38' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::igamma_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.39' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::lgamma_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.39' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::lgamma_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.40' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::erf_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 53> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.40' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::erf_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 53> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.41' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::expm1_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 53> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.41' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::expm1_initializer<double, boost::math::policies::policy<boost::math::policies::pole_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::overflow_error<(boost::math::policies::error_policy_type)1>, boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 53> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.42' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::igamma_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.42' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::igamma_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.43' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::erf_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.43' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::erf_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.44' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::expm1_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.44' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::expm1_initializer<long double, boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.45' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_i0_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.45' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_i0_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.46' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_i1_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.46' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_i1_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.47' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::owens_t_initializer<double, boost::math::policies::policy<boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.47' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::owens_t_initializer<double, boost::math::policies::policy<boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.48' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_k0_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.48' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_k0_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.49' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_k1_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "ld: warning: direct access in function '___cxx_global_var_init.49' from file '/Users/mlorenzi/.local/lib/python3.9/site-packages/httpstan/stan_services.o' to global weak symbol 'guard variable for boost::math::detail::bessel_k1_initializer<long double, boost::integral_constant<int, 64> >::initializer' from file 'build/temp.macosx-10.9-x86_64-3.9/Users/mlorenzi/Library/Caches/httpstan/4.6.1/models/fxpnlmbf/model_fxpnlmbf.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.\n",
      "\u001b[32mBuilding:\u001b[0m 14.4s, done.\n"
     ]
    }
   ],
   "source": [
    "better_model_code = \"\"\"\n",
    "data {\n",
    "    int<lower=1> N;\n",
    "    vector[N] y;\n",
    "}\n",
    "parameters {\n",
    "    real mu;\n",
    "    real<lower=1e-4> sigma;\n",
    "}\n",
    "model {\n",
    "    mu ~ normal(0, 5);\n",
    "    sigma ~ cauchy(0, 1);\n",
    "    y ~ normal(mu, sigma);\n",
    "}\n",
    "\"\"\"\n",
    "\n",
    "data = dict(y = y, N = 2)\n",
    "posterior = stan.build(better_model_code, data=data, random_seed=123)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[36mSampling:\u001b[0m   0%\n",
      "\u001b[1A\u001b[0J\u001b[36mSampling:\u001b[0m  25% (2000/8000)\n",
      "\u001b[1A\u001b[0J\u001b[36mSampling:\u001b[0m  50% (4000/8000)\n",
      "\u001b[1A\u001b[0J\u001b[36mSampling:\u001b[0m  75% (6000/8000)\n",
      "\u001b[1A\u001b[0J\u001b[36mSampling:\u001b[0m 100% (8000/8000)\n",
      "\u001b[1A\u001b[0J\u001b[32mSampling:\u001b[0m 100% (8000/8000), done.\n",
      "\u001b[36mMessages received during sampling:\u001b[0m\n",
      "  Gradient evaluation took 1.8e-05 seconds\n",
      "  1000 transitions using 10 leapfrog steps per transition would take 0.18 seconds.\n",
      "  Adjust your expectations accordingly!\n",
      "  Gradient evaluation took 1.2e-05 seconds\n",
      "  1000 transitions using 10 leapfrog steps per transition would take 0.12 seconds.\n",
      "  Adjust your expectations accordingly!\n",
      "  Gradient evaluation took 1.3e-05 seconds\n",
      "  1000 transitions using 10 leapfrog steps per transition would take 0.13 seconds.\n",
      "  Adjust your expectations accordingly!\n",
      "  Gradient evaluation took 4e-06 seconds\n",
      "  1000 transitions using 10 leapfrog steps per transition would take 0.04 seconds.\n",
      "  Adjust your expectations accordingly!\n"
     ]
    }
   ],
   "source": [
    "fit = posterior.sample(num_chains=4, num_samples=1000)\n",
    "est_mu = fit['mu'][0]\n",
    "est_sigma = fit['sigma'][0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, axs = plt.subplots(2)\n",
    "fig.suptitle('Chains')\n",
    "axs[0].plot(est_mu)\n",
    "axs[0].set_title('mu')\n",
    "axs[1].plot(est_sigma)\n",
    "axs[1].set_title('sigma')\n",
    "fig.tight_layout()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                count      mean       std           min       25%       50%  \\\n",
      "parameters                                                                    \n",
      "lp__           4000.0 -3.051265  1.324066 -1.078675e+01 -3.615272 -2.628191   \n",
      "accept_stat__  4000.0  0.876491  0.203281  5.338915e-64  0.865626  0.959742   \n",
      "stepsize__     4000.0  0.535560  0.043195  4.840486e-01  0.498257  0.535136   \n",
      "treedepth__    4000.0  2.162750  0.639425  1.000000e+00  2.000000  2.000000   \n",
      "n_leapfrog__   4000.0  4.833000  2.286792  1.000000e+00  3.000000  5.000000   \n",
      "divergent__    4000.0  0.000000  0.000000  0.000000e+00  0.000000  0.000000   \n",
      "energy__       4000.0  4.054332  1.676618  1.712597e+00  2.798743  3.673292   \n",
      "mu             4000.0  0.032851  1.477677 -7.438065e+00 -0.667466 -0.011313   \n",
      "sigma          4000.0  1.979368  1.740189  4.050242e-01  1.026987  1.465116   \n",
      "\n",
      "                    75%        max  \n",
      "parameters                          \n",
      "lp__          -2.076120  -1.694054  \n",
      "accept_stat__  0.994544   1.000000  \n",
      "stepsize__     0.572439   0.587917  \n",
      "treedepth__    3.000000   4.000000  \n",
      "n_leapfrog__   7.000000  15.000000  \n",
      "divergent__    0.000000   0.000000  \n",
      "energy__       4.881903  12.692688  \n",
      "mu             0.640645  11.025747  \n",
      "sigma          2.306994  21.158478  \n"
     ]
    }
   ],
   "source": [
    "df = fit.to_frame()\n",
    "print(df.describe().T)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
